{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\inputs\\\\TransferListExamplesPage.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, List, ListItem, Checkbox, Grid, Button, ListItemText, ListItemIcon, Card, CardHeader, Divider } from \"@material-ui/core\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"auto\"\n  },\n  paper: {\n    width: 200,\n    height: 230,\n    overflow: \"auto\"\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  }\n}));\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n} // Example 2\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    margin: \"auto\"\n  },\n  cardHeader: {\n    padding: theme.spacing(1, 2)\n  },\n  list: {\n    width: 200,\n    height: 230,\n    backgroundColor: theme.palette.background.paper,\n    overflow: \"auto\"\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  }\n}));\n\nfunction not2(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection2(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nfunction union2(a, b) {\n  return [...a, ...not2(b, a)];\n}\n\nexport default function TransferListExamplesPage() {\n  _s();\n\n  // Example 1\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = items => /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      children: [items.map(value => {\n        const labelId = `transfer-list-item-${value}-label`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          role: \"listitem\",\n          button: true,\n          onClick: handleToggle(value),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: checked.indexOf(value) !== -1,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                \"aria-labelledby\": labelId\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: `List item ${value + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ListItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this); // Example 2\n\n\n  const classes2 = useStyles2();\n  const [checked2, setChecked2] = React.useState([]);\n  const [left2, setLeft2] = React.useState([0, 1, 2, 3]);\n  const [right2, setRight2] = React.useState([4, 5, 6, 7]);\n  const leftChecked2 = intersection2(checked2, left2);\n  const rightChecked2 = intersection2(checked2, right2);\n\n  const handleToggle2 = value => () => {\n    const currentIndex2 = checked2.indexOf(value);\n    const newChecked2 = [...checked2];\n\n    if (currentIndex2 === -1) {\n      newChecked2.push(value);\n    } else {\n      newChecked2.splice(currentIndex2, 1);\n    }\n\n    setChecked2(newChecked2);\n  };\n\n  const numberOfChecked2 = items => intersection2(checked2, items).length;\n\n  const handleToggleAll2 = items => () => {\n    if (numberOfChecked2(items) === items.length) {\n      setChecked2(not2(checked2, items));\n    } else {\n      setChecked2(union2(checked2, items));\n    }\n  };\n\n  const handleCheckedRight2 = () => {\n    setRight2(right2.concat(leftChecked2));\n    setLeft2(not2(left2, leftChecked2));\n    setChecked2(not2(checked2, leftChecked2));\n  };\n\n  const handleCheckedLeft2 = () => {\n    setLeft2(left2.concat(rightChecked2));\n    setRight2(not2(right2, rightChecked2));\n    setChecked2(not2(checked2, rightChecked2));\n  };\n\n  const customList2 = (title, items) => /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: classes2.cardHeader,\n      avatar: /*#__PURE__*/_jsxDEV(Checkbox, {\n        onClick: handleToggleAll2(items),\n        checked: numberOfChecked2(items) === items.length && items.length !== 0,\n        indeterminate: numberOfChecked2(items) !== items.length && numberOfChecked2(items) !== 0,\n        disabled: items.length === 0,\n        inputProps: {\n          \"aria-label\": \"all items selected\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this),\n      title: title,\n      subheader: `${numberOfChecked2(items)}/${items.length} selected`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes2.list,\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      children: [items.map(value => {\n        const labelId = `transfer-list-all-item-${value}-label`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          role: \"listitem\",\n          button: true,\n          onClick: handleToggle2(value),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: checked2.indexOf(value) !== -1,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                \"aria-labelledby\": labelId\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: `List item ${value + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ListItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notice, {\n      icon: \"flaticon-warning font-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"A transfer list (or \\\"shuttle\\\") enables the user to move one or more list items between lists.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"font-weight-bold\",\n          rel: \"noopener noreferrer\",\n          href: \"https://material-ui.com/components/transfer-list/\",\n          children: \"demos & documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode1,\n          beforeCodeTitle: \"Simple Transfer List\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"For completeness, this example includes buttons for \\\"move all\\\", but not every transfer list needs these.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            justify: \"center\",\n            alignItems: \"center\",\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: customList(left)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes.button,\n                  onClick: handleAllRight,\n                  disabled: left.length === 0,\n                  \"aria-label\": \"move all right\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"flaticon2-fast-next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes.button,\n                  onClick: handleCheckedRight,\n                  disabled: leftChecked.length === 0,\n                  \"aria-label\": \"move selected right\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"flaticon2-next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: `${classes.button}`,\n                  onClick: handleCheckedLeft,\n                  disabled: rightChecked.length === 0,\n                  \"aria-label\": \"move selected left\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"flaticon2-back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes.button,\n                  onClick: handleAllLeft,\n                  disabled: right.length === 0,\n                  \"aria-label\": \"move all left\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"flaticon2-fast-back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: customList(right)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode2,\n          beforeCodeTitle: \"Enhanced Transfer List\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This example exchanges the \\\"move all\\\" buttons for a \\\"select all / select none\\\" checkbox, and adds a counter.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            justify: \"center\",\n            alignItems: \"center\",\n            className: classes2.root,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: customList2(\"Choices\", left2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes2.button,\n                  onClick: handleCheckedRight2,\n                  disabled: leftChecked2.length === 0,\n                  \"aria-label\": \"move selected right\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"flaticon2-next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes2.button,\n                  onClick: handleCheckedLeft2,\n                  disabled: rightChecked2.length === 0,\n                  \"aria-label\": \"move selected left\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"flaticon2-back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: customList2(\"Chosen\", right2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TransferListExamplesPage, \"jk4M41QjmQV51p2FkfN2A9MAJ98=\", false, function () {\n  return [useStyles, useStyles2];\n});\n\n_c = TransferListExamplesPage;\nconst jsCode1 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto',\n  },\n  paper: {\n    width: 200,\n    height: 230,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nexport default function TransferList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = items => (\n    <Paper className={classes.paper}>\n      <List dense component=\"div\" role=\"list\">\n        {items.map(value => {\n          const labelId = \\`transfer-list-item-\\${value}-label\\`;\n\n          return (\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={\\`List item \\${value + 1}\\`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>{customList(left)}</Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleAllRight}\n            disabled={left.length === 0}\n            aria-label=\"move all right\"\n          >\n            ≫\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label=\"move selected left\"\n          >\n            &lt;\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleAllLeft}\n            disabled={right.length === 0}\n            aria-label=\"move all left\"\n          >\n            ≪\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(right)}</Grid>\n    </Grid>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto',\n  },\n  cardHeader: {\n    padding: theme.spacing(1, 2),\n  },\n  list: {\n    width: 200,\n    height: 230,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nexport default function TransferList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const numberOfChecked = items => intersection(checked, items).length;\n\n  const handleToggleAll = items => () => {\n    if (numberOfChecked(items) === items.length) {\n      setChecked(not(checked, items));\n    } else {\n      setChecked(union(checked, items));\n    }\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const customList = (title, items) => (\n    <Card>\n      <CardHeader\n        className={classes.cardHeader}\n        avatar={\n          <Checkbox\n            onClick={handleToggleAll(items)}\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\n            disabled={items.length === 0}\n            inputProps={{ 'aria-label': 'all items selected' }}\n          />\n        }\n        title={title}\n        subheader={\\`\\${numberOfChecked(items)}/\\${items.length} selected\\`}\n      />\n      <Divider />\n      <List className={classes.list} dense component=\"div\" role=\"list\">\n        {items.map(value => {\n          const labelId = \\`transfer-list-all-item-\\${value}-label\\`;\n\n          return (\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={\\`List item \\${value + 1}\\`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Card>\n  );\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>{customList('Choices', left)}</Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label=\"move selected left\"\n          >\n            &lt;\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList('Chosen', right)}</Grid>\n    </Grid>\n  );\n}\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransferListExamplesPage\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/GoogleMaterialExamples/inputs/TransferListExamplesPage.js"],"names":["React","makeStyles","Paper","List","ListItem","Checkbox","Grid","Button","ListItemText","ListItemIcon","Card","CardHeader","Divider","Notice","KTCodeExample","useStyles","theme","root","margin","paper","width","height","overflow","button","spacing","not","a","b","filter","value","indexOf","intersection","useStyles2","cardHeader","padding","list","backgroundColor","palette","background","not2","intersection2","union2","TransferListExamplesPage","classes","checked","setChecked","useState","left","setLeft","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","handleAllRight","concat","handleCheckedRight","handleCheckedLeft","handleAllLeft","customList","items","map","labelId","classes2","checked2","setChecked2","left2","setLeft2","right2","setRight2","leftChecked2","rightChecked2","handleToggle2","currentIndex2","newChecked2","numberOfChecked2","length","handleToggleAll2","handleCheckedRight2","handleCheckedLeft2","customList2","title","jsCode1","jsCode2"],"mappings":"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UADV;AAEE,kBAAA,IAAI,EAAC,OAFP;AAGE,kBAAA,SAAS,EAAEb,QAAQ,CAAC5C,MAHtB;AAIE,kBAAA,OAAO,EAAE4D,kBAJX;AAKE,kBAAA,QAAQ,EAAER,aAAa,CAACK,MAAd,KAAyB,CALrC;AAME,gCAAW,oBANb;AAAA,yCAQE;AAAG,oBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,wBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARF,eAgCE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,wBAAYI,WAAW,CAAC,QAAD,EAAWZ,MAAX;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApEF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBADF;AA0ID;;GAnTuB9B,wB;UAEN3B,S,EA0ECiB,U;;;KA5EKU,wB;AAqTxB,MAAM4C,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1JA;AA2JA,MAAMC,OAAO,GAAI;AACjsourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  Checkbox,\r\n  Grid,\r\n  Button,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Card,\r\n  CardHeader,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: \"auto\"\r\n  },\r\n  paper: {\r\n    width: 200,\r\n    height: 230,\r\n    overflow: \"auto\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0)\r\n  }\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    margin: \"auto\"\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  list: {\r\n    width: 200,\r\n    height: 230,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: \"auto\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0)\r\n  }\r\n}));\r\n\r\nfunction not2(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection2(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union2(a, b) {\r\n  return [...a, ...not2(b, a)];\r\n}\r\n\r\nexport default function TransferListExamplesPage() {\r\n  // Example 1\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = items => (\r\n    <Paper className={classes.paper}>\r\n      <List dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = `transfer-list-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={value}\r\n              role=\"listitem\"\r\n              button\r\n              onClick={handleToggle(value)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [checked2, setChecked2] = React.useState([]);\r\n  const [left2, setLeft2] = React.useState([0, 1, 2, 3]);\r\n  const [right2, setRight2] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked2 = intersection2(checked2, left2);\r\n  const rightChecked2 = intersection2(checked2, right2);\r\n\r\n  const handleToggle2 = value => () => {\r\n    const currentIndex2 = checked2.indexOf(value);\r\n    const newChecked2 = [...checked2];\r\n\r\n    if (currentIndex2 === -1) {\r\n      newChecked2.push(value);\r\n    } else {\r\n      newChecked2.splice(currentIndex2, 1);\r\n    }\r\n\r\n    setChecked2(newChecked2);\r\n  };\r\n\r\n  const numberOfChecked2 = items => intersection2(checked2, items).length;\r\n\r\n  const handleToggleAll2 = items => () => {\r\n    if (numberOfChecked2(items) === items.length) {\r\n      setChecked2(not2(checked2, items));\r\n    } else {\r\n      setChecked2(union2(checked2, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight2 = () => {\r\n    setRight2(right2.concat(leftChecked2));\r\n    setLeft2(not2(left2, leftChecked2));\r\n    setChecked2(not2(checked2, leftChecked2));\r\n  };\r\n\r\n  const handleCheckedLeft2 = () => {\r\n    setLeft2(left2.concat(rightChecked2));\r\n    setRight2(not2(right2, rightChecked2));\r\n    setChecked2(not2(checked2, rightChecked2));\r\n  };\r\n\r\n  const customList2 = (title, items) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes2.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll2(items)}\r\n            checked={\r\n              numberOfChecked2(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked2(items) !== items.length &&\r\n              numberOfChecked2(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n            inputProps={{ \"aria-label\": \"all items selected\" }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked2(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List className={classes2.list} dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={value}\r\n              role=\"listitem\"\r\n              button\r\n              onClick={handleToggle2(value)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked2.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          A transfer list (or \"shuttle\") enables the user to move one or more\r\n          list items between lists.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/transfer-list/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Transfer List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              For completeness, this example includes buttons for \"move all\",\r\n              but not every transfer list needs these.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.root}\r\n            >\r\n              <Grid item>{customList(left)}</Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    onClick={handleAllRight}\r\n                    disabled={left.length === 0}\r\n                    aria-label=\"move all right\"\r\n                  >\r\n                    <i className=\"flaticon2-fast-next\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    onClick={handleCheckedRight}\r\n                    disabled={leftChecked.length === 0}\r\n                    aria-label=\"move selected right\"\r\n                  >\r\n                    <i className=\"flaticon2-next\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={`${classes.button}`}\r\n                    onClick={handleCheckedLeft}\r\n                    disabled={rightChecked.length === 0}\r\n                    aria-label=\"move selected left\"\r\n                  >\r\n                    <i className=\"flaticon2-back\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    onClick={handleAllLeft}\r\n                    disabled={right.length === 0}\r\n                    aria-label=\"move all left\"\r\n                  >\r\n                    <i className=\"flaticon2-fast-back\" />\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>{customList(right)}</Grid>\r\n            </Grid>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Enhanced Transfer List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              This example exchanges the \"move all\" buttons for a \"select all /\r\n              select none\" checkbox, and adds a counter.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes2.root}\r\n            >\r\n              <Grid item>{customList2(\"Choices\", left2)}</Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes2.button}\r\n                    onClick={handleCheckedRight2}\r\n                    disabled={leftChecked2.length === 0}\r\n                    aria-label=\"move selected right\"\r\n                  >\r\n                    <i className=\"flaticon2-next\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes2.button}\r\n                    onClick={handleCheckedLeft2}\r\n                    disabled={rightChecked2.length === 0}\r\n                    aria-label=\"move selected left\"\r\n                  >\r\n                    <i className=\"flaticon2-back\" />\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>{customList2(\"Chosen\", right2)}</Grid>\r\n            </Grid>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    width: 200,\r\n    height: 230,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nexport default function TransferList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = items => (\r\n    <Paper className={classes.paper}>\r\n      <List dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = \\`transfer-list-item-\\${value}-label\\`;\r\n\r\n          return (\r\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={\\`List item \\${value + 1}\\`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n      <Grid item>{customList(left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleAllRight}\r\n            disabled={left.length === 0}\r\n            aria-label=\"move all right\"\r\n          >\r\n            ≫\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleAllLeft}\r\n            disabled={right.length === 0}\r\n            aria-label=\"move all left\"\r\n          >\r\n            ≪\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList(right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  list: {\r\n    width: 200,\r\n    height: 230,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function TransferList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = items => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = items => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const customList = (title, items) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n            disabled={items.length === 0}\r\n            inputProps={{ 'aria-label': 'all items selected' }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={\\`\\${numberOfChecked(items)}/\\${items.length} selected\\`}\r\n      />\r\n      <Divider />\r\n      <List className={classes.list} dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = \\`transfer-list-all-item-\\${value}-label\\`;\r\n\r\n          return (\r\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={\\`List item \\${value + 1}\\`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n      <Grid item>{customList('Choices', left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList('Chosen', right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}