{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\_metronic\\\\_partials\\\\controls\\\\code-examples\\\\CodeBlock.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/aria-proptypes */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\"; // https://github.com/conorhastings/react-syntax-highlighter#prism\n\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"; // See https://github.com/PrismJS/prism-themes\n\nimport { coy as highlightStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { CodeBlockToolbar } from \"./CodeBlockToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function CodeBlock({\n  languages\n}) {\n  _s();\n\n  const [isCodeBlockShown, setIsCodeBlockShown] = useState(false);\n  const [tabId, setTabId] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"example-tools\",\n      children: /*#__PURE__*/_jsxDEV(CodeBlockToolbar, {\n        showViewCode: true,\n        code: languages[tabId].code,\n        isCodeBlockShown: isCodeBlockShown,\n        setIsCodeBlockShown: setIsCodeBlockShown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), languages.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), languages.length === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `example-code ${clsx({\n        \"example-code-on\": isCodeBlockShown\n      })}`,\n      style: {\n        display: isCodeBlockShown ? \"block\" : \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `example-highlight ${languages[0].language}`,\n        children: /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n          language: languages[0].language,\n          style: highlightStyle,\n          children: languages[0].code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), languages.length > 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `example-code ${clsx({\n          \"example-code-on\": isCodeBlockShown\n        })}`,\n        style: {\n          display: isCodeBlockShown ? \"block\" : \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"example-nav nav nav-tabs nav-tabs-line nav-tabs-line-2x nav-tabs-primary\",\n          id: \"codeTab\",\n          role: \"tablist\",\n          children: languages.map((lang, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: `nav-link ${tabId === index ? \"active\" : \"\"}`,\n              \"data-toggle\": \"tab\",\n              role: \"tab\",\n              \"aria-selected\": `${tabId === index ? \"true\" : \"false\"}`,\n              onClick: () => setTabId(index),\n              children: lang.shortCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)\n          }, `ki${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-content\",\n          children: languages.map((lang, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"#F3F6F9\"\n            },\n            className: `tab-pane  ${tabId === index ? \"active\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `example-highlight language-${lang.shortCode} ${lang.shortCode}`,\n              children: /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n                language: lang.language,\n                style: highlightStyle,\n                customStyle: {\n                  background: `none transparent !important`\n                },\n                children: lang.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)\n          }, `divTabPane${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_s(CodeBlock, \"hQYBEN8RT4FaQUzpG2Dn2YNuRZA=\");\n\n_c = CodeBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeBlock\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/_metronic/_partials/controls/code-examples/CodeBlock.js"],"names":["React","useState","clsx","Prism","SyntaxHighlighter","coy","highlightStyle","CodeBlockToolbar","CodeBlock","languages","isCodeBlockShown","setIsCodeBlockShown","tabId","setTabId","code","length","display","language","map","lang","index","shortCode","background"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/aria-proptypes */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useState} from \"react\";\r\nimport clsx from \"clsx\";\r\n// https://github.com/conorhastings/react-syntax-highlighter#prism\r\nimport {Prism as SyntaxHighlighter} from \"react-syntax-highlighter\";\r\n// See https://github.com/PrismJS/prism-themes\r\nimport {coy as highlightStyle} from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\nimport {CodeBlockToolbar} from \"./CodeBlockToolbar\";\r\n\r\nexport function CodeBlock({ languages }) {\r\n  const [isCodeBlockShown, setIsCodeBlockShown] = useState(false);\r\n  const [tabId, setTabId] = useState(0);\r\n  return (\r\n    <>\r\n      <div className=\"example-tools\">\r\n        <CodeBlockToolbar\r\n          showViewCode={true}\r\n          code={languages[tabId].code}\r\n          isCodeBlockShown={isCodeBlockShown}\r\n          setIsCodeBlockShown={setIsCodeBlockShown}\r\n        />\r\n      </div>\r\n      {languages.length === 0 && <></>}\r\n      {languages.length === 1 && (\r\n        <div\r\n          className={`example-code ${clsx({\r\n            \"example-code-on\": isCodeBlockShown\r\n          })}`}\r\n          style={{ display: isCodeBlockShown ? \"block\" : \"none\" }}\r\n        >\r\n          <div className={`example-highlight ${languages[0].language}`}>\r\n            <SyntaxHighlighter\r\n              language={languages[0].language}\r\n              style={highlightStyle}\r\n            >\r\n              {languages[0].code}\r\n            </SyntaxHighlighter>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {languages.length > 1 && (\r\n        <>\r\n          <div\r\n            className={`example-code ${clsx({\r\n              \"example-code-on\": isCodeBlockShown\r\n            })}`}\r\n            style={{ display: isCodeBlockShown ? \"block\" : \"none\" }}\r\n          >\r\n            <ul\r\n              className=\"example-nav nav nav-tabs nav-tabs-line nav-tabs-line-2x nav-tabs-primary\"\r\n              id=\"codeTab\"\r\n              role=\"tablist\"\r\n            >\r\n              {languages.map((lang, index) => (\r\n                <li className=\"nav-item\" key={`ki${index}`}>\r\n                  <a\r\n                    className={`nav-link ${tabId === index ? \"active\" : \"\"}`}\r\n                    data-toggle=\"tab\"\r\n                    role=\"tab\"\r\n                    aria-selected={`${tabId === index ? \"true\" : \"false\"}`}\r\n                    onClick={() => setTabId(index)}\r\n                  >\r\n                    {lang.shortCode}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n              {languages.map((lang, index) => (\r\n                <div\r\n                  style={{ background: \"#F3F6F9\" }}\r\n                  className={`tab-pane  ${tabId === index ? \"active\" : \"\"}`}\r\n                  key={`divTabPane${index}`}\r\n                >\r\n                  <div\r\n                    className={`example-highlight language-${lang.shortCode} ${lang.shortCode}`}\r\n                  >\r\n                    <SyntaxHighlighter\r\n                      language={lang.language}\r\n                      style={highlightStyle}\r\n                      customStyle={{\r\n                        background: `none transparent !important`\r\n                      }}\r\n                    >\r\n                      {lang.code}\r\n                    </SyntaxHighlighter>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}