{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\feedback\\\\SnackbarsExamplesPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable no-func-assign */\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Snackbar, IconButton, SnackbarContent, Fade, Slide, Grow, CssBaseline, Toolbar, AppBar, Typography, Fab } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles1 = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n})); // Example 2\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\nconst useStyles21 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction MySnackbarContentWrapper2(props) {\n  _s();\n\n  const classes = useStyles21();\n  const {\n    className,\n    message,\n    onClose,\n    variant,\n    ...other\n  } = props;\n  const Icon = variantIcon[variant];\n  return /*#__PURE__*/_jsxDEV(SnackbarContent, {\n    className: clsx(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        className: clsx(classes.icon, classes.iconVariant)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this),\n    action: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, \"close\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)],\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MySnackbarContentWrapper2, \"m8CJFlUkb+mkJ9DsPG3YI0pCyko=\", false, function () {\n  return [useStyles21];\n});\n\n_c = MySnackbarContentWrapper2;\nMySnackbarContentWrapper2.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\n};\nconst useStyles22 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n})); // Example 4\n\nconst action4 = /*#__PURE__*/_jsxDEV(Button, {\n  color: \"secondary\",\n  size: \"small\",\n  children: \"lorem ipsum dolorem\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 119,\n  columnNumber: 3\n}, this);\n\nconst useStyles4 = makeStyles(theme => ({\n  root: {\n    maxWidth: 600\n  },\n  snackbar: {\n    margin: theme.spacing(1)\n  }\n})); // Example 7\n\nfunction SlideTransition7(props) {\n  return /*#__PURE__*/_jsxDEV(Slide, { ...props,\n    direction: \"up\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = SlideTransition7;\n\nfunction GrowTransition7(props) {\n  return /*#__PURE__*/_jsxDEV(Grow, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 10\n  }, this);\n} // Example 8\n\n\n_c3 = GrowTransition7;\n\nfunction TransitionLeft(props) {\n  return /*#__PURE__*/_jsxDEV(Slide, { ...props,\n    direction: \"left\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 10\n  }, this);\n}\n\n_c4 = TransitionLeft;\n\nfunction TransitionUp(props) {\n  return /*#__PURE__*/_jsxDEV(Slide, { ...props,\n    direction: \"up\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 10\n  }, this);\n}\n\n_c5 = TransitionUp;\n\nfunction TransitionRight(props) {\n  return /*#__PURE__*/_jsxDEV(Slide, { ...props,\n    direction: \"right\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 10\n  }, this);\n}\n\n_c6 = TransitionRight;\n\nfunction TransitionDown(props) {\n  return /*#__PURE__*/_jsxDEV(Slide, { ...props,\n    direction: \"down\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 10\n  }, this);\n}\n\n_c7 = TransitionDown;\nexport default function SnackbarsExamplesPage() {\n  _s2();\n\n  // Example 1\n  const classes1 = useStyles1();\n  const [open1, setOpen1] = React.useState(false);\n\n  function handleClick1() {\n    setOpen1(true);\n  }\n\n  function handleClose1(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen1(false);\n  } // Example 2\n\n\n  const classes2 = useStyles22();\n  const [open2, setOpen2] = React.useState(false);\n\n  function handleClick2() {\n    setOpen2(true);\n  }\n\n  function handleClose2(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen2(false);\n  } // Example 3\n\n\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"center\"\n  });\n  const {\n    vertical,\n    horizontal,\n    open\n  } = state;\n\n  const handleClick = newState => () => {\n    setState({\n      open: true,\n      ...newState\n    });\n  };\n\n  function handleClose() {\n    setState({ ...state,\n      open: false\n    });\n  } // Example 4\n\n\n  const classes4 = useStyles4(); // Example 7\n\n  const [state7, setState7] = React.useState({\n    open7: false,\n    Transition7: Fade\n  });\n\n  const handleClick7 = Transition => () => {\n    setState7({\n      open7: true,\n      Transition7: Transition\n    });\n  };\n\n  function handleClose7() {\n    setState7({ ...state7,\n      open7: false\n    });\n  } // Example 8\n\n\n  const [state8, setState8] = React.useState({\n    open8: false\n  });\n\n  const handleClick8 = Transition => {\n    return () => {\n      setState8({\n        open8: true,\n        Transition\n      });\n    };\n  };\n\n  const handleClose8 = () => {\n    setState8({\n      open8: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notice, {\n      icon: \"flaticon-warning font-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Snackbars provide brief messages about app processes - typically at the bottom of the screen.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"font-weight-bold\",\n          rel: \"noopener noreferrer\",\n          href: \"https://material-ui.com/components/snackbars/\",\n          children: \"demos & documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode1,\n          beforeCodeTitle: \"Simple snackbars\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"A basic snackbar that aims to reproduce Google Keep's snackbar behavior.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick1,\n              children: \"Open simple snackbar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n              anchorOrigin: {\n                vertical: \"bottom\",\n                horizontal: \"left\"\n              },\n              open: open1,\n              autoHideDuration: 6000,\n              onClose: handleClose1,\n              ContentProps: {\n                \"aria-describedby\": \"message-id\"\n              },\n              message: /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"message-id\",\n                children: \"Note archived\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 26\n              }, this),\n              action: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                size: \"small\",\n                onClick: handleClose1,\n                children: \"UNDO\"\n              }, \"undo\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"Close\",\n                color: \"inherit\",\n                className: classes1.close,\n                onClick: handleClose1,\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this)\n              }, \"close\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this)]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode3,\n          beforeCodeTitle: \"Positioned snackbars\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"There may be circumstances when the placement of the snackbar needs to be more flexible.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick({\n                vertical: \"top\",\n                horizontal: \"center\"\n              }),\n              children: \"Top-Center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick({\n                vertical: \"top\",\n                horizontal: \"right\"\n              }),\n              children: \"Top-Right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick({\n                vertical: \"bottom\",\n                horizontal: \"right\"\n              }),\n              children: \"Bottom-Right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick({\n                vertical: \"bottom\",\n                horizontal: \"center\"\n              }),\n              children: \"Bottom-Center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick({\n                vertical: \"bottom\",\n                horizontal: \"left\"\n              }),\n              children: \"Bottom-Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick({\n                vertical: \"top\",\n                horizontal: \"left\"\n              }),\n              children: \"Top-Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n              anchorOrigin: {\n                vertical,\n                horizontal\n              },\n              open: open,\n              onClose: handleClose,\n              ContentProps: {\n                \"aria-describedby\": \"message-id\"\n              },\n              message: /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"message-id\",\n                children: \"I love snacks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 26\n              }, this)\n            }, `${vertical},${horizontal}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode4,\n          beforeCodeTitle: \"Message Length\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Some snackbars with varying message length.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes4.root,\n            children: [/*#__PURE__*/_jsxDEV(SnackbarContent, {\n              className: classes4.snackbar,\n              message: \"I love snacks.\",\n              action: action4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SnackbarContent, {\n              className: classes4.snackbar,\n              message: \"I love candy. I love cookies. I love cupcakes. \\\r\n                      I love cheesecake. I love chocolate.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SnackbarContent, {\n              className: classes4.snackbar,\n              message: \"I love candy. I love cookies. I love cupcakes.\",\n              action: action4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SnackbarContent, {\n              className: classes4.snackbar,\n              message: \"I love candy. I love cookies. I love cupcakes. \\\r\n                      I love cheesecake. I love chocolate.\",\n              action: action4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode7,\n          beforeCodeTitle: \"Change Transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Grow is the default transition but you can use a different one.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick7(GrowTransition7),\n              children: \"Grow Transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick7(Fade),\n              children: \"Fade Transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick7(SlideTransition7),\n              children: \"Slide Transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n              open: state7.open7,\n              onClose: handleClose7,\n              TransitionComponent: state7.Transition7,\n              ContentProps: {\n                \"aria-describedby\": \"message-id\"\n              },\n              message: /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"message-id\",\n                children: \"I love snacks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode2,\n          beforeCodeTitle: \"Customized snackbars\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Here are some examples of customizing the component.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: classes2.margin,\n              onClick: handleClick2,\n              children: \"Open success snackbar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n              anchorOrigin: {\n                vertical: \"bottom\",\n                horizontal: \"left\"\n              },\n              open: open2,\n              autoHideDuration: 6000,\n              onClose: handleClose2,\n              children: /*#__PURE__*/_jsxDEV(MySnackbarContentWrapper2, {\n                onClose: handleClose2,\n                variant: \"success\",\n                message: \"This is a success message!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MySnackbarContentWrapper2, {\n              variant: \"error\",\n              className: classes2.margin,\n              message: \"This is an error message!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MySnackbarContentWrapper2, {\n              variant: \"warning\",\n              className: classes2.margin,\n              message: \"This is a warning message!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MySnackbarContentWrapper2, {\n              variant: \"info\",\n              className: classes2.margin,\n              message: \"This is an information message!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MySnackbarContentWrapper2, {\n              variant: \"success\",\n              className: classes2.margin,\n              message: \"This is a success message!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode8,\n          beforeCodeTitle: \"Control Slide direction\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"You can change the direction of the Slide transition.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick8(TransitionLeft),\n              children: \"Right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick8(TransitionUp),\n              children: \"Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick8(TransitionRight),\n              children: \"Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick8(TransitionDown),\n              children: \"Down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n              open: state8.open8,\n              onClose: handleClose8,\n              TransitionComponent: state8.Transition,\n              ContentProps: {\n                \"aria-describedby\": \"message-id\"\n              },\n              message: /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"message-id\",\n                children: \"I love snacks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(SnackbarsExamplesPage, \"O0UEhMbW8MX2m2QgAB2DIlURaXM=\", false, function () {\n  return [useStyles1, useStyles22, useStyles4];\n});\n\n_c8 = SnackbarsExamplesPage;\nconst jsCode1 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nexport default function SimpleSnackbar() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Open simple snackbar</Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">Note archived</span>}\n        action={[\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\n            UNDO\n          </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function CustomizedSnackbars() {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" className={classes.margin} onClick={handleClick}>\n        Open success snackbar\n      </Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant=\"success\"\n          message=\"This is a success message!\"\n        />\n      </Snackbar>\n      <MySnackbarContentWrapper\n        variant=\"error\"\n        className={classes.margin}\n        message=\"This is an error message!\"\n      />\n      <MySnackbarContentWrapper\n        variant=\"warning\"\n        className={classes.margin}\n        message=\"This is a warning message!\"\n      />\n      <MySnackbarContentWrapper\n        variant=\"info\"\n        className={classes.margin}\n        message=\"This is an information message!\"\n      />\n      <MySnackbarContentWrapper\n        variant=\"success\"\n        className={classes.margin}\n        message=\"This is a success message!\"\n      />\n    </div>\n  );\n}\n`;\nconst jsCode3 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nexport default function PositionedSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n  });\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClick = newState => () => {\n    setState({ open: true, ...newState });\n  };\n\n  function handleClose() {\n    setState({ ...state, open: false });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'center' })}>Top-Center</Button>\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'right' })}>Top-Right</Button>\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'right' })}>\n        Bottom-Right\n      </Button>\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'center' })}>\n        Bottom-Center\n      </Button>\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'left' })}>Bottom-Left</Button>\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'left' })}>Top-Left</Button>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        key={\\`\\${vertical},\\${horizontal}\\`}\n        open={open}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode4 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nconst action = (\n  <Button color=\"secondary\" size=\"small\">\n    lorem ipsum dolorem\n  </Button>\n);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 600,\n  },\n  snackbar: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function LongTextSnackbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <SnackbarContent className={classes.snackbar} message=\"I love snacks.\" action={action} />\n      <SnackbarContent\n        className={classes.snackbar}\n        message={\n          'I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.'\n        }\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message=\"I love candy. I love cookies. I love cupcakes.\"\n        action={action}\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message={\n          'I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.'\n        }\n        action={action}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode7 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Fade from '@material-ui/core/Fade';\nimport Slide from '@material-ui/core/Slide';\nimport Grow from '@material-ui/core/Grow';\n\nfunction SlideTransition(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction GrowTransition(props) {\n  return <Grow {...props} />;\n}\n\nexport default function TransitionsSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    Transition: Fade,\n  });\n\n  const handleClick = Transition => () => {\n    setState({\n      open: true,\n      Transition,\n    });\n  };\n\n  function handleClose() {\n    setState({\n      ...state,\n      open: false,\n    });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\n      <Snackbar\n        open={state.open}\n        onClose={handleClose}\n        TransitionComponent={state.Transition}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode8 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\n\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction=\"left\" />;\n}\n\nfunction TransitionUp(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction TransitionRight(props) {\n  return <Slide {...props} direction=\"right\" />;\n}\n\nfunction TransitionDown(props) {\n  return <Slide {...props} direction=\"down\" />;\n}\n\nclass DirectionSnackbar extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClick = Transition => () => {\n    this.setState({ open: true, Transition });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.handleClick(TransitionLeft)}>Right</Button>\n        <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\n        <Button onClick={this.handleClick(TransitionRight)}>Left</Button>\n        <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\n        <Snackbar\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={this.state.Transition}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">I love snacks</span>}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DirectionSnackbar;\n`;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"MySnackbarContentWrapper2\");\n$RefreshReg$(_c2, \"SlideTransition7\");\n$RefreshReg$(_c3, \"GrowTransition7\");\n$RefreshReg$(_c4, \"TransitionLeft\");\n$RefreshReg$(_c5, \"TransitionUp\");\n$RefreshReg$(_c6, \"TransitionRight\");\n$RefreshReg$(_c7, \"TransitionDown\");\n$RefreshReg$(_c8, \"SnackbarsExamplesPage\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/GoogleMaterialExamples/feedback/SnackbarsExamplesPage.js"],"names":["React","PropTypes","clsx","makeStyles","Button","Snackbar","IconButton","SnackbarContent","Fade","Slide","Grow","CssBaseline","Toolbar","AppBar","Typography","Fab","CloseIcon","WarningIcon","CheckCircleIcon","ErrorIcon","InfoIcon","amber","green","AddIcon","MenuIcon","Notice","KTCodeExample","useStyles1","theme","close","padding","spacing","variantIcon","success","warning","error","info","useStyles21","backgroundColor","palette","dark","primary","main","icon","fontSize","iconVariant","opacity","marginRight","message","display","alignItems","MySnackbarContentWrapper2","props","classes","className","onClose","variant","other","Icon","propTypes","string","node","func","oneOf","isRequired","useStyles22","margin","action4","useStyles4","root","maxWidth","snackbar","SlideTransition7","GrowTransition7","TransitionLeft","TransitionUp","TransitionRight","TransitionDown","SnackbarsExamplesPage","classes1","open1","setOpen1","useState","handleClick1","handleClose1","event","reason","classes2","open2","setOpen2","handleClick2","handleClose2","state","setState","open","vertical","horizontal","handleClick","newState","handleClose","classes4","state7","setState7","open7","Transition7","handleClick7","Transition","handleClose7","state8","setState8","open8","handleClick8","handleClose8","jsCode1","jsCode3","jsCode4","jsCode7","jsCode2","jsCode8"],"mappings":"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lJA;AAmJA,MAAMH,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/CA;AAgDA,MAAMC,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlDA;AAmDA,MAAMC,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArDA;AAsDA,MAAME,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzDA","sourcesContent":["/* eslint-disable no-func-assign */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Snackbar,\r\n  IconButton,\r\n  SnackbarContent,\r\n  Fade,\r\n  Slide,\r\n  Grow,\r\n  CssBaseline,\r\n  Toolbar,\r\n  AppBar,\r\n  Typography,\r\n  Fab\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst useStyles21 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n\r\nfunction MySnackbarContentWrapper2(props) {\r\n  const classes = useStyles21();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper2.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n\r\nconst useStyles22 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst action4 = (\r\n  <Button color=\"secondary\" size=\"small\">\r\n    lorem ipsum dolorem\r\n  </Button>\r\n);\r\n\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 600\r\n  },\r\n  snackbar: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 7\r\nfunction SlideTransition7(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction GrowTransition7(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\n// Example 8\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n  return <Slide {...props} direction=\"down\" />;\r\n}\r\n\r\nexport default function SnackbarsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [open1, setOpen1] = React.useState(false);\r\n\r\n  function handleClick1() {\r\n    setOpen1(true);\r\n  }\r\n\r\n  function handleClose1(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen1(false);\r\n  }\r\n\r\n  // Example 2\r\n  const classes2 = useStyles22();\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  function handleClick2() {\r\n    setOpen2(true);\r\n  }\r\n\r\n  function handleClose2(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen2(false);\r\n  }\r\n\r\n  // Example 3\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClick = newState => () => {\r\n    setState({ open: true, ...newState });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  // Example 7\r\n  const [state7, setState7] = React.useState({\r\n    open7: false,\r\n    Transition7: Fade\r\n  });\r\n\r\n  const handleClick7 = Transition => () => {\r\n    setState7({\r\n      open7: true,\r\n      Transition7: Transition\r\n    });\r\n  };\r\n\r\n  function handleClose7() {\r\n    setState7({\r\n      ...state7,\r\n      open7: false\r\n    });\r\n  }\r\n\r\n  // Example 8\r\n  const [state8, setState8] = React.useState({\r\n    open8: false\r\n  });\r\n\r\n  const handleClick8 = Transition => {\r\n    return () => {\r\n      setState8({ open8: true, Transition });\r\n    };\r\n  };\r\n\r\n  const handleClose8 = () => {\r\n    setState8({ open8: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Snackbars provide brief messages about app processes - typically at\r\n          the bottom of the screen.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/snackbars/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple snackbars\">\r\n            <span>\r\n              A basic snackbar that aims to reproduce Google Keep's snackbar\r\n              behavior.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={handleClick1}>Open simple snackbar</Button>\r\n              <Snackbar\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                open={open1}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose1}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">Note archived</span>}\r\n                action={[\r\n                  <Button\r\n                    key=\"undo\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    onClick={handleClose1}\r\n                  >\r\n                    UNDO\r\n                  </Button>,\r\n                  <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes1.close}\r\n                    onClick={handleClose1}\r\n                  >\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                ]}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Positioned snackbars\"\r\n          >\r\n            <span>\r\n              There may be circumstances when the placement of the snackbar\r\n              needs to be more flexible.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"top\",\r\n                  horizontal: \"center\"\r\n                })}\r\n              >\r\n                Top-Center\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                })}\r\n              >\r\n                Top-Right\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"right\"\r\n                })}\r\n              >\r\n                Bottom-Right\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"center\"\r\n                })}\r\n              >\r\n                Bottom-Center\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                })}\r\n              >\r\n                Bottom-Left\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\"\r\n                })}\r\n              >\r\n                Top-Left\r\n              </Button>\r\n              <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                key={`${vertical},${horizontal}`}\r\n                open={open}\r\n                onClose={handleClose}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Message Length\">\r\n            <span>Some snackbars with varying message length.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.root}>\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message=\"I love snacks.\"\r\n                action={action4}\r\n              />\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message={\r\n                  \"I love candy. I love cookies. I love cupcakes. \\\r\n                      I love cheesecake. I love chocolate.\"\r\n                }\r\n              />\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message=\"I love candy. I love cookies. I love cupcakes.\"\r\n                action={action4}\r\n              />\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message={\r\n                  \"I love candy. I love cookies. I love cupcakes. \\\r\n                      I love cheesecake. I love chocolate.\"\r\n                }\r\n                action={action4}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Change Transition\">\r\n            <span>\r\n              Grow is the default transition but you can use a different one.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={handleClick7(GrowTransition7)}>\r\n                Grow Transition\r\n              </Button>\r\n              <Button onClick={handleClick7(Fade)}>Fade Transition</Button>\r\n              <Button onClick={handleClick7(SlideTransition7)}>\r\n                Slide Transition\r\n              </Button>\r\n              <Snackbar\r\n                open={state7.open7}\r\n                onClose={handleClose7}\r\n                TransitionComponent={state7.Transition7}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Customized snackbars\"\r\n          >\r\n            <span>Here are some examples of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={classes2.margin}\r\n                onClick={handleClick2}\r\n              >\r\n                Open success snackbar\r\n              </Button>\r\n              <Snackbar\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                open={open2}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose2}\r\n              >\r\n                <MySnackbarContentWrapper2\r\n                  onClose={handleClose2}\r\n                  variant=\"success\"\r\n                  message=\"This is a success message!\"\r\n                />\r\n              </Snackbar>\r\n              <MySnackbarContentWrapper2\r\n                variant=\"error\"\r\n                className={classes2.margin}\r\n                message=\"This is an error message!\"\r\n              />\r\n              <MySnackbarContentWrapper2\r\n                variant=\"warning\"\r\n                className={classes2.margin}\r\n                message=\"This is a warning message!\"\r\n              />\r\n              <MySnackbarContentWrapper2\r\n                variant=\"info\"\r\n                className={classes2.margin}\r\n                message=\"This is an information message!\"\r\n              />\r\n              <MySnackbarContentWrapper2\r\n                variant=\"success\"\r\n                className={classes2.margin}\r\n                message=\"This is a success message!\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode8}\r\n            beforeCodeTitle=\"Control Slide direction\"\r\n          >\r\n            <span>You can change the direction of the Slide transition.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={handleClick8(TransitionLeft)}>Right</Button>\r\n              <Button onClick={handleClick8(TransitionUp)}>Up</Button>\r\n              <Button onClick={handleClick8(TransitionRight)}>Left</Button>\r\n              <Button onClick={handleClick8(TransitionDown)}>Down</Button>\r\n              <Snackbar\r\n                open={state8.open8}\r\n                onClose={handleClose8}\r\n                TransitionComponent={state8.Transition}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSnackbar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">Note archived</span>}\r\n        action={[\r\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n            UNDO\r\n          </Button>,\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" className={classes.margin} onClick={handleClick}>\r\n        Open success snackbar\r\n      </Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant=\"success\"\r\n          message=\"This is a success message!\"\r\n        />\r\n      </Snackbar>\r\n      <MySnackbarContentWrapper\r\n        variant=\"error\"\r\n        className={classes.margin}\r\n        message=\"This is an error message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"warning\"\r\n        className={classes.margin}\r\n        message=\"This is a warning message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"info\"\r\n        className={classes.margin}\r\n        message=\"This is an information message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"success\"\r\n        className={classes.margin}\r\n        message=\"This is a success message!\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport default function PositionedSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClick = newState => () => {\r\n    setState({ open: true, ...newState });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'center' })}>Top-Center</Button>\r\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'right' })}>Top-Right</Button>\r\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'right' })}>\r\n        Bottom-Right\r\n      </Button>\r\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'center' })}>\r\n        Bottom-Center\r\n      </Button>\r\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'left' })}>Bottom-Left</Button>\r\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'left' })}>Top-Left</Button>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        key={\\`\\${vertical},\\${horizontal}\\`}\r\n        open={open}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\nconst action = (\r\n  <Button color=\"secondary\" size=\"small\">\r\n    lorem ipsum dolorem\r\n  </Button>\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 600,\r\n  },\r\n  snackbar: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function LongTextSnackbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SnackbarContent className={classes.snackbar} message=\"I love snacks.\" action={action} />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={\r\n          'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n        }\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message=\"I love candy. I love cookies. I love cupcakes.\"\r\n        action={action}\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={\r\n          'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n        }\r\n        action={action}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction GrowTransition(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\nexport default function TransitionsSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    Transition: Fade,\r\n  });\r\n\r\n  const handleClick = Transition => () => {\r\n    setState({\r\n      open: true,\r\n      Transition,\r\n    });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\r\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\r\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\r\n      <Snackbar\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={state.Transition}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n  return <Slide {...props} direction=\"down\" />;\r\n}\r\n\r\nclass DirectionSnackbar extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClick = Transition => () => {\r\n    this.setState({ open: true, Transition });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClick(TransitionLeft)}>Right</Button>\r\n        <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\r\n        <Button onClick={this.handleClick(TransitionRight)}>Left</Button>\r\n        <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\r\n        <Snackbar\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          TransitionComponent={this.state.Transition}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">I love snacks</span>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DirectionSnackbar;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}