{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"anchorRef\", {\n  enumerable: true,\n  get: function get() {\n    return _core.anchorRef;\n  }\n});\nObject.defineProperty(exports, \"bindTrigger\", {\n  enumerable: true,\n  get: function get() {\n    return _core.bindTrigger;\n  }\n});\nObject.defineProperty(exports, \"bindToggle\", {\n  enumerable: true,\n  get: function get() {\n    return _core.bindToggle;\n  }\n});\nObject.defineProperty(exports, \"bindHover\", {\n  enumerable: true,\n  get: function get() {\n    return _core.bindHover;\n  }\n});\nObject.defineProperty(exports, \"bindMenu\", {\n  enumerable: true,\n  get: function get() {\n    return _core.bindMenu;\n  }\n});\nObject.defineProperty(exports, \"bindPopover\", {\n  enumerable: true,\n  get: function get() {\n    return _core.bindPopover;\n  }\n});\nObject.defineProperty(exports, \"bindPopper\", {\n  enumerable: true,\n  get: function get() {\n    return _core.bindPopper;\n  }\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"./core\");\n/* eslint-env browser */\n\n\nvar PopupState = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2.default)(PopupState, _React$Component);\n\n  function PopupState() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PopupState);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PopupState)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"state\", _core.initCoreState);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"_mounted\", true);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"_setStateIfMounted\", function (state) {\n      if (_this._mounted) _this.setState(state);\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(PopupState, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var popupId = this.props.popupId;\n\n      if (popupId !== prevProps.popupId || this.state.anchorEl !== prevState.anchorEl) {\n        if (popupId && (typeof document === \"undefined\" ? \"undefined\" : (0, _typeof2.default)(document)) === 'object') {\n          var popup = document.getElementById(popupId);\n          if (popup) popup.focus();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          popupId = _this$props.popupId,\n          variant = _this$props.variant,\n          parentPopupState = _this$props.parentPopupState;\n      var popupState = (0, _core.createPopupState)({\n        state: this.state,\n        setState: this._setStateIfMounted,\n        popupId: popupId,\n        variant: variant,\n        parentPopupState: parentPopupState\n      });\n      var result = children(popupState);\n      if (result == null) return null;\n      return result;\n    }\n  }]);\n  return PopupState;\n}(React.Component);\n\nexports.default = PopupState;\n(0, _defineProperty2.default)(PopupState, \"propTypes\", {\n  /**\r\n   * The render function.\r\n   *\r\n   * @param {object} props the properties injected by `PopupState`:\r\n   * <ul>\r\n   *   <li>`open(eventOrAnchorEl)`: opens the popup</li>\r\n   *   <li>`close()`: closes the popup</li>\r\n   *   <li>`toggle(eventOrAnchorEl)`: opens the popup if it is closed, or\r\n   *     closes the popup if it is open.\r\n   *   </li>\r\n   *   <li>`setOpen(open, [eventOrAnchorEl])`: sets whether the popup is open.\r\n   *     `eventOrAnchorEl` is required if `open` is truthy.\r\n   *   </li>\r\n   *   <li>`isOpen`: `true`/`false` if the popup is open/closed</li>\r\n   *   <li>`anchorEl`: the current anchor element (`null` the popup is closed)</li>\r\n   *   <li>`popupId`: the `popupId` prop you passed</li>\r\n   * </ul>\r\n   *\r\n   * @returns {React.Node} the content to display\r\n   */\n  children: _propTypes.default.func.isRequired,\n\n  /**\r\n   * The `id` property to use for the popup.  Will be passed to the render\r\n   * function as `bindPopup.id`, and also used for the `aria-owns` property\r\n   * passed to the trigger component via `bindTrigger`.\r\n   */\n  popupId: _propTypes.default.string,\n\n  /**\r\n   * Which type of popup you are controlling.  Use `'popover'` for `Popover`\r\n   * and `Menu`; use `'popper'` for `Popper`s.  Right now this only affects\r\n   * whether `aria-owns` or `aria-describedby` is used on the trigger\r\n   * component.\r\n   */\n  variant: _propTypes.default.oneOf(['popover', 'popper']).isRequired,\n\n  /**\r\n   *\r\n   */\n  parentPopupState: _propTypes.default.object\n});","map":null,"metadata":{},"sourceType":"script"}