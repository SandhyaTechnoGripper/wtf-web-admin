{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\ReactBootstrapExamples\\\\ButtonsExamplesPage.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Button, ButtonToolbar, ButtonGroup, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction simulateNetworkRequest() {\n  return new Promise(resolve => setTimeout(resolve, 2000));\n}\n\nclass LoadingButton extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  handleClick() {\n    this.setState({\n      isLoading: true\n    }, () => {\n      simulateNetworkRequest().then(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      disabled: isLoading,\n      onClick: !isLoading ? this.handleClick : null,\n      children: isLoading ? \"Loadingâ€¦\" : \"Click to load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ToggleButtonGroupControlled extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      value: [1, 3]\n    };\n  }\n\n  handleChange(value, event) {\n    this.setState({\n      value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      type: \"checkbox\",\n      onChange: this.handleChange,\n      defaultValue: this.state.value,\n      name: \"toggleButtonGroup\",\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: 1,\n        onChange: () => {},\n        children: \"Option 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: 2,\n        onChange: () => {},\n        children: \"Option 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: 3,\n        onChange: () => {},\n        children: \"Option 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default class ButtonsExamplesPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            className: \"font-weight-bold\",\n            rel: \"noopener noreferrer\",\n            href: \"\",\n            children: \"demos & documentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode1,\n            beforeCodeTitle: \"Examples\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Use any of the available button style types to quickly create a styled button. Just modify the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 48\n              }, this), \" prop.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    children: \"Primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"secondary\",\n                    children: \"Secondary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    children: \"Success\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"warning\",\n                    children: \"Warning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    children: \"Danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"info\",\n                    children: \"Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"light\",\n                    children: \"Light\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"dark\",\n                    children: \"Dark\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    children: \"Link\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode3,\n            beforeCodeTitle: \"Button tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Normally \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<Button>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 26\n              }, this), \" components will render a HTML \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<button>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 22\n              }, this), \" element. However you can render whatever you'd like, adding a \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"href\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 47\n              }, this), \" prop will automatically render an \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<a />\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 41\n              }, this), \" element. You can use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"as\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 29\n              }, this), \" prop to render whatever your heart desires. React Bootstrap will take care of the proper ARIA roles for you.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n              className: \"pb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pr-1\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  href: \"#\",\n                  children: \"Link\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pr-1\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  children: \"Button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pr-1\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  as: \"input\",\n                  type: \"button\",\n                  value: \"Input\",\n                  onChange: () => {}\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pr-1\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  as: \"input\",\n                  type: \"submit\",\n                  value: \"Submit\",\n                  onChange: () => {}\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pr-1\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  as: \"input\",\n                  type: \"reset\",\n                  value: \"Reset\",\n                  onChange: () => {}\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode5,\n            beforeCodeTitle: \"Sizes\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Create block level buttons\\u2014those that span the full width of a parent\\u2014by adding block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                size: \"lg\",\n                block: true,\n                children: \"Block level button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                size: \"lg\",\n                block: true,\n                children: \"Block level button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode7,\n            beforeCodeTitle: \"Disabled state\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Make buttons look inactive by adding the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 58\n              }, this), \" \", \"prop to.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pr-4\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"lg\",\n                  disabled: true,\n                  children: \"Primary button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pr-4\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  size: \"lg\",\n                  disabled: true,\n                  children: \"Button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pr-4\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  href: \"#\",\n                  variant: \"secondary\",\n                  size: \"lg\",\n                  disabled: true,\n                  children: \"Link\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode9,\n            beforeCodeTitle: \"Checkbox / Radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Button's can also be used to style \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 52\n              }, this), \" and\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"radio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), \" form elements. This is helpful when you want a toggle button that works neatly inside an HTML form.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n                toggle: true,\n                children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  type: \"checkbox\",\n                  defaultChecked: true,\n                  value: \"1\",\n                  children: \"Checked\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                toggle: true,\n                className: \"mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                  type: \"radio\",\n                  name: \"radio\",\n                  defaultChecked: true,\n                  value: \"1\",\n                  children: \"Active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  type: \"radio\",\n                  name: \"radio\",\n                  value: \"2\",\n                  children: \"Radio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  type: \"radio\",\n                  name: \"radio\",\n                  value: \"3\",\n                  children: \"Radio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode11,\n            beforeCodeTitle: \"Controlled\",\n            children: /*#__PURE__*/_jsxDEV(ToggleButtonGroupControlled, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode2,\n            beforeCodeTitle: \"Outline buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"For a lighter touch, Buttons also come in \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"outline-*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 59\n              }, this), \" \", \"variants with no background color.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-primary\",\n                    children: \"Primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    children: \"Secondary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-success\",\n                    children: \"Success\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-warning\",\n                    children: \"Warning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-danger\",\n                    children: \"Danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-info\",\n                    children: \"Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-dark\",\n                    children: \"Dark\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-light\",\n                    children: \"Light\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode4,\n            beforeCodeTitle: \"Sizes\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Fancy larger or smaller buttons? Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"size=\\\"lg\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 54\n              }, this), \",\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"size=\\\"sm\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), \" for additional sizes.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    size: \"lg\",\n                    children: \"Large button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"secondary\",\n                    size: \"lg\",\n                    children: \"Large button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    size: \"sm\",\n                    children: \"Small button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pr-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"secondary\",\n                    size: \"sm\",\n                    children: \"Small button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode6,\n            beforeCodeTitle: \"Active state\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"To set a buttons active state simply set the components\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this), \" prop.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pr-4\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"lg\",\n                  active: true,\n                  children: \"Primary button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pr-4\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  size: \"lg\",\n                  active: true,\n                  children: \"Button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode8,\n            beforeCodeTitle: \"Button loading state\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"When activating an asynchronous action from a button it is a good UX pattern to give the user feedback as to the loading state, this can easily be done by updating your\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<Button />\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), \"s props from a state change like below.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode10,\n            beforeCodeTitle: \"Uncontrolled\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                  type: \"checkbox\",\n                  defaultValue: [1, 3],\n                  name: \"Uncontrolled\",\n                  children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: 1,\n                    children: \"Checkbox 1 (pre-checked)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: 2,\n                    children: \"Checkbox 2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: 3,\n                    children: \"Checkbox 3 (pre-checked)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                  type: \"radio\",\n                  name: \"options\",\n                  defaultValue: 1,\n                  children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: 1,\n                    children: \"Radio 1 (pre-checked)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: 2,\n                    children: \"Radio 2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: 3,\n                    children: \"Radio 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nconst jsCode1 = `\n<ButtonToolbar>\n  <Button variant=\"primary\">Primary</Button>\n  <Button variant=\"secondary\">Secondary</Button>\n  <Button variant=\"success\">Success</Button>\n  <Button variant=\"warning\">Warning</Button>\n  <Button variant=\"danger\">Danger</Button>\n  <Button variant=\"info\">Info</Button>\n  <Button variant=\"light\">Light</Button>\n  <Button variant=\"dark\">Dark</Button>\n  <Button variant=\"link\">Link</Button>\n</ButtonToolbar>\n`;\nconst jsCode2 = `\n<ButtonToolbar>\n  <Button variant=\"outline-primary\">Primary</Button>\n  <Button variant=\"outline-secondary\">Secondary</Button>\n  <Button variant=\"outline-success\">Success</Button>\n  <Button variant=\"outline-warning\">Warning</Button>\n  <Button variant=\"outline-danger\">Danger</Button>\n  <Button variant=\"outline-info\">Info</Button>\n  <Button variant=\"outline-light\">Light</Button>\n  <Button variant=\"outline-dark\">Dark</Button>\n</ButtonToolbar>\n`;\nconst jsCode3 = `\n<ButtonToolbar>\n  <Button href=\"#\">Link</Button>\n  <Button type=\"submit\">Button</Button>\n  <Button as=\"input\" type=\"button\" value=\"Input\" />\n  <Button as=\"input\" type=\"submit\" value=\"Submit\" />\n  <Button as=\"input\" type=\"reset\" value=\"Reset\" />\n</ButtonToolbar>\n`;\nconst jsCode4 = `\n<div>\n  <ButtonToolbar>\n    <Button variant=\"primary\" size=\"lg\">\n      Large button\n    </Button>\n    <Button variant=\"secondary\" size=\"lg\">\n      Large button\n    </Button>\n  </ButtonToolbar>\n\n  <ButtonToolbar>\n    <Button variant=\"primary\" size=\"sm\">\n      Small button\n    </Button>\n    <Button variant=\"secondary\" size=\"sm\">\n      Small button\n    </Button>\n  </ButtonToolbar>\n</div>\n`;\nconst jsCode5 = `\n<div>\n  <Button variant=\"primary\" size=\"lg\" block>\n    Block level button\n  </Button>\n  <Button variant=\"secondary\" size=\"lg\" block>\n    Block level button\n  </Button>\n</div>\n`;\nconst jsCode6 = `\n<ButtonToolbar>\n  <Button variant=\"primary\" size=\"lg\" active>\n    Primary button\n  </Button>\n  <Button variant=\"secondary\" size=\"lg\" active>\n    Button\n  </Button>\n</ButtonToolbar>\n`;\nconst jsCode7 = `\n<ButtonToolbar>\n  <Button variant=\"primary\" size=\"lg\" disabled>\n    Primary button\n  </Button>{' '}\n  <Button variant=\"secondary\" size=\"lg\" disabled>\n    Button\n  </Button>{' '}\n  <Button href=\"#\" variant=\"secondary\" size=\"lg\" disabled>\n    Link\n  </Button>\n</ButtonToolbar>\n`;\nconst jsCode8 = `\nfunction simulateNetworkRequest() {\n  return new Promise(resolve => setTimeout(resolve, 2000));\n}\n\nclass LoadingButton extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      isLoading: false,\n    };\n  }\n\n  handleClick() {\n    this.setState({ isLoading: true }, () => {\n      simulateNetworkRequest().then(() => {\n        this.setState({ isLoading: false });\n      });\n    });\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    return (\n      <Button\n        variant=\"primary\"\n        disabled={isLoading}\n        onClick={!isLoading ? this.handleClick : null}\n      >\n        {isLoading ? 'Loadingâ€¦' : 'Click to load'}\n      </Button>\n    );\n  }\n}\n\nrender(<LoadingButton />);\n`;\nconst jsCode9 = `\n<div className=\"d-flex flex-column\">\n  <ButtonGroup toggle>\n    <ToggleButton type=\"checkbox\" defaultChecked value=\"1\">\n      Checked\n    </ToggleButton>\n  </ButtonGroup>\n  <ButtonGroup toggle className=\"mt-3\">\n    <ToggleButton type=\"radio\" name=\"radio\" defaultChecked value=\"1\">\n      Active\n    </ToggleButton>\n    <ToggleButton type=\"radio\" name=\"radio\" value=\"2\">\n      Radio\n    </ToggleButton>\n    <ToggleButton type=\"radio\" name=\"radio\" value=\"3\">\n      Radio\n    </ToggleButton>\n  </ButtonGroup>\n</div>\n`;\nconst jsCode10 = `\n<>\n  <ButtonToolbar>\n    <ToggleButtonGroup type=\"checkbox\" defaultValue={[1, 3]}>\n      <ToggleButton value={1}>Checkbox 1 (pre-checked)</ToggleButton>\n      <ToggleButton value={2}>Checkbox 2</ToggleButton>\n      <ToggleButton value={3}>Checkbox 3 (pre-checked)</ToggleButton>\n    </ToggleButtonGroup>\n  </ButtonToolbar>\n\n  <ButtonToolbar>\n    <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\n      <ToggleButton value={1}>Radio 1 (pre-checked)</ToggleButton>\n      <ToggleButton value={2}>Radio 2</ToggleButton>\n      <ToggleButton value={3}>Radio 3</ToggleButton>\n    </ToggleButtonGroup>\n  </ButtonToolbar>\n</>\n`;\nconst jsCode11 = `\nclass ToggleButtonGroupControlled extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      value: [1, 3],\n    };\n  }\n\n  handleChange(value, event) {\n    this.setState({ value });\n  }\n\n  render() {\n    return (\n      <ToggleButtonGroup\n        type=\"checkbox\"\n        value={this.state.value}\n        onChange={this.handleChange}\n      >\n        <ToggleButton value={1}>Option 1</ToggleButton>\n        <ToggleButton value={2}>Option 2</ToggleButton>\n        <ToggleButton value={3}>Option 3</ToggleButton>\n      </ToggleButtonGroup>\n    );\n  }\n}\n\nrender(<ToggleButtonGroupControlled />);\n`;","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/ReactBootstrapExamples/ButtonsExamplesPage.js"],"names":["React","Button","ButtonToolbar","ButtonGroup","ToggleButton","ToggleButtonGroup","Notice","KTCodeExample","simulateNetworkRequest","Promise","resolve","setTimeout","LoadingButton","Component","constructor","props","context","handleClick","bind","state","isLoading","setState","then","render","ToggleButtonGroupControlled","handleChange","value","event","ButtonsExamplesPage","jsCode1","jsCode3","jsCode5","jsCode7","jsCode9","jsCode11","jsCode2","jsCode4","jsCode6","jsCode8","jsCode10"],"mappings":"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A;AACA;AACA;AACA;AACA,CAZA;AAaA,MAAMM,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAYA,MAAML,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,MAAMM,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;AAqBA,MAAML,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAUA,MAAMM,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAUA,MAAML,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAaA,MAAMM,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxCA;AAyCA,MAAML,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAoBA,MAAMM,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;AAmBA,MAAML,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhCA","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonToolbar,\r\n  ButtonGroup,\r\n  ToggleButton,\r\n  ToggleButtonGroup\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nfunction simulateNetworkRequest() {\r\n  return new Promise(resolve => setTimeout(resolve, 2000));\r\n}\r\n\r\nclass LoadingButton extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    this.state = {\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({ isLoading: true }, () => {\r\n      simulateNetworkRequest().then(() => {\r\n        this.setState({ isLoading: false });\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n\r\n    return (\r\n      <Button\r\n        variant=\"primary\"\r\n        disabled={isLoading}\r\n        onClick={!isLoading ? this.handleClick : null}\r\n      >\r\n        {isLoading ? \"Loadingâ€¦\" : \"Click to load\"}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nclass ToggleButtonGroupControlled extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      value: [1, 3]\r\n    };\r\n  }\r\n\r\n  handleChange(value, event) {\r\n    this.setState({ value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ToggleButtonGroup\r\n        type=\"checkbox\"\r\n        onChange={this.handleChange}\r\n        defaultValue={this.state.value}\r\n        name=\"toggleButtonGroup\"\r\n      >\r\n        <ToggleButton value={1} onChange={() => {}}>\r\n          Option 1\r\n        </ToggleButton>\r\n        <ToggleButton value={2} onChange={() => {}}>\r\n          Option 2\r\n        </ToggleButton>\r\n        <ToggleButton value={3} onChange={() => {}}>\r\n          Option 3\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class ButtonsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Custom button styles for actions in forms, dialogs, and more with\r\n            support for multiple sizes, states, and more.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Examples\">\r\n              <span>\r\n                Use any of the available button style types to quickly create a\r\n                styled button. Just modify the <code>variant</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <div className=\"mb-3\">\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"primary\">Primary</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"secondary\">Secondary</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"success\">Success</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"warning\">Warning</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"danger\">Danger</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"info\">Info</Button>\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"light\">Light</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"dark\">Dark</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"link\">Link</Button>\r\n                  </span>\r\n                </div>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Button tags\">\r\n              <span>\r\n                Normally <code>&lt;Button&gt;</code> components will render a\r\n                HTML <code>&lt;button&gt;</code> element. However you can render\r\n                whatever you'd like, adding a <code>href</code> prop will\r\n                automatically render an <code>&lt;a /&gt;</code> element. You\r\n                can use the <code>as</code> prop to render whatever your heart\r\n                desires. React Bootstrap will take care of the proper ARIA roles\r\n                for you.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar className=\"pb-2\">\r\n                <span className=\"pr-1\">\r\n                  <Button href=\"#\">Link</Button>\r\n                </span>\r\n                <span className=\"pr-1\">\r\n                  <Button type=\"submit\">Button</Button>\r\n                </span>\r\n                <span className=\"pr-1\">\r\n                  <Button\r\n                    as=\"input\"\r\n                    type=\"button\"\r\n                    value=\"Input\"\r\n                    onChange={() => {}}\r\n                  />\r\n                </span>\r\n              </ButtonToolbar>\r\n              <ButtonToolbar>\r\n                <span className=\"pr-1\">\r\n                  <Button\r\n                    as=\"input\"\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    onChange={() => {}}\r\n                  />\r\n                </span>\r\n                <span className=\"pr-1\">\r\n                  <Button\r\n                    as=\"input\"\r\n                    type=\"reset\"\r\n                    value=\"Reset\"\r\n                    onChange={() => {}}\r\n                  />\r\n                </span>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Sizes\">\r\n              <span>\r\n                Create block level buttonsâ€”those that span the full width of a\r\n                parentâ€”by adding block\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <div>\r\n                <Button variant=\"primary\" size=\"lg\" block>\r\n                  Block level button\r\n                </Button>\r\n                <Button variant=\"secondary\" size=\"lg\" block>\r\n                  Block level button\r\n                </Button>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Disabled state\">\r\n              <span>\r\n                Make buttons look inactive by adding the <code>disabled</code>{\" \"}\r\n                prop to.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <span className=\"pr-4\">\r\n                  <Button variant=\"primary\" size=\"lg\" disabled>\r\n                    Primary button\r\n                  </Button>\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Button variant=\"secondary\" size=\"lg\" disabled>\r\n                    Button\r\n                  </Button>\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Button href=\"#\" variant=\"secondary\" size=\"lg\" disabled>\r\n                    Link\r\n                  </Button>\r\n                </span>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Checkbox / Radio\">\r\n              <span>\r\n                Button's can also be used to style <code>checkbox</code> and{\" \"}\r\n                <code>radio</code> form elements. This is helpful when you want\r\n                a toggle button that works neatly inside an HTML form.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <div className=\"d-flex flex-column\">\r\n                <ButtonGroup toggle>\r\n                  <ToggleButton type=\"checkbox\" defaultChecked value=\"1\">\r\n                    Checked\r\n                  </ToggleButton>\r\n                </ButtonGroup>\r\n                <ButtonGroup toggle className=\"mt-3\">\r\n                  <ToggleButton\r\n                    type=\"radio\"\r\n                    name=\"radio\"\r\n                    defaultChecked\r\n                    value=\"1\"\r\n                  >\r\n                    Active\r\n                  </ToggleButton>\r\n                  <ToggleButton type=\"radio\" name=\"radio\" value=\"2\">\r\n                    Radio\r\n                  </ToggleButton>\r\n                  <ToggleButton type=\"radio\" name=\"radio\" value=\"3\">\r\n                    Radio\r\n                  </ToggleButton>\r\n                </ButtonGroup>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode11} beforeCodeTitle=\"Controlled\">\r\n              <ToggleButtonGroupControlled />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Outline buttons\">\r\n              <span>\r\n                For a lighter touch, Buttons also come in <code>outline-*</code>{\" \"}\r\n                variants with no background color.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <p>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-primary\">Primary</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-secondary\">Secondary</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-success\">Success</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-warning\">Warning</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-danger\">Danger</Button>\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-info\">Info</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-dark\">Dark</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-light\">Light</Button>\r\n                  </span>\r\n                </p>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Sizes\">\r\n              <span>\r\n                Fancy larger or smaller buttons? Add <code>size=\"lg\"</code>,{\" \"}\r\n                <code>size=\"sm\"</code> for additional sizes.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <div className=\"mb-3\">\r\n                <ButtonToolbar>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"primary\" size=\"lg\">\r\n                      Large button\r\n                    </Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"secondary\" size=\"lg\">\r\n                      Large button\r\n                    </Button>\r\n                  </span>\r\n                </ButtonToolbar>\r\n              </div>\r\n              <div>\r\n                <ButtonToolbar>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"primary\" size=\"sm\">\r\n                      Small button\r\n                    </Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"secondary\" size=\"sm\">\r\n                      Small button\r\n                    </Button>\r\n                  </span>\r\n                </ButtonToolbar>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Active state\">\r\n              <span>\r\n                To set a buttons active state simply set the components{\" \"}\r\n                <code>active</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <span className=\"pr-4\">\r\n                  <Button variant=\"primary\" size=\"lg\" active>\r\n                    Primary button\r\n                  </Button>\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Button variant=\"secondary\" size=\"lg\" active>\r\n                    Button\r\n                  </Button>\r\n                </span>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode8}\r\n              beforeCodeTitle=\"Button loading state\"\r\n            >\r\n              <span>\r\n                When activating an asynchronous action from a button it is a\r\n                good UX pattern to give the user feedback as to the loading\r\n                state, this can easily be done by updating your{\" \"}\r\n                <code>&lt;Button /&gt;</code>s props from a state change like\r\n                below.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <LoadingButton />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode10} beforeCodeTitle=\"Uncontrolled\">\r\n              <div className=\"mb-3\">\r\n                <ButtonToolbar>\r\n                  <ToggleButtonGroup\r\n                    type=\"checkbox\"\r\n                    defaultValue={[1, 3]}\r\n                    name=\"Uncontrolled\"\r\n                  >\r\n                    <ToggleButton value={1}>\r\n                      Checkbox 1 (pre-checked)\r\n                    </ToggleButton>\r\n                    <ToggleButton value={2}>Checkbox 2</ToggleButton>\r\n                    <ToggleButton value={3}>\r\n                      Checkbox 3 (pre-checked)\r\n                    </ToggleButton>\r\n                  </ToggleButtonGroup>\r\n                </ButtonToolbar>\r\n              </div>\r\n              <div>\r\n                <ButtonToolbar>\r\n                  <ToggleButtonGroup\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    defaultValue={1}\r\n                  >\r\n                    <ToggleButton value={1}>Radio 1 (pre-checked)</ToggleButton>\r\n                    <ToggleButton value={2}>Radio 2</ToggleButton>\r\n                    <ToggleButton value={3}>Radio 3</ToggleButton>\r\n                  </ToggleButtonGroup>\r\n                </ButtonToolbar>\r\n              </div>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<ButtonToolbar>\r\n  <Button variant=\"primary\">Primary</Button>\r\n  <Button variant=\"secondary\">Secondary</Button>\r\n  <Button variant=\"success\">Success</Button>\r\n  <Button variant=\"warning\">Warning</Button>\r\n  <Button variant=\"danger\">Danger</Button>\r\n  <Button variant=\"info\">Info</Button>\r\n  <Button variant=\"light\">Light</Button>\r\n  <Button variant=\"dark\">Dark</Button>\r\n  <Button variant=\"link\">Link</Button>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode2 = `\r\n<ButtonToolbar>\r\n  <Button variant=\"outline-primary\">Primary</Button>\r\n  <Button variant=\"outline-secondary\">Secondary</Button>\r\n  <Button variant=\"outline-success\">Success</Button>\r\n  <Button variant=\"outline-warning\">Warning</Button>\r\n  <Button variant=\"outline-danger\">Danger</Button>\r\n  <Button variant=\"outline-info\">Info</Button>\r\n  <Button variant=\"outline-light\">Light</Button>\r\n  <Button variant=\"outline-dark\">Dark</Button>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode3 = `\r\n<ButtonToolbar>\r\n  <Button href=\"#\">Link</Button>\r\n  <Button type=\"submit\">Button</Button>\r\n  <Button as=\"input\" type=\"button\" value=\"Input\" />\r\n  <Button as=\"input\" type=\"submit\" value=\"Submit\" />\r\n  <Button as=\"input\" type=\"reset\" value=\"Reset\" />\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode4 = `\r\n<div>\r\n  <ButtonToolbar>\r\n    <Button variant=\"primary\" size=\"lg\">\r\n      Large button\r\n    </Button>\r\n    <Button variant=\"secondary\" size=\"lg\">\r\n      Large button\r\n    </Button>\r\n  </ButtonToolbar>\r\n\r\n  <ButtonToolbar>\r\n    <Button variant=\"primary\" size=\"sm\">\r\n      Small button\r\n    </Button>\r\n    <Button variant=\"secondary\" size=\"sm\">\r\n      Small button\r\n    </Button>\r\n  </ButtonToolbar>\r\n</div>\r\n`;\r\nconst jsCode5 = `\r\n<div>\r\n  <Button variant=\"primary\" size=\"lg\" block>\r\n    Block level button\r\n  </Button>\r\n  <Button variant=\"secondary\" size=\"lg\" block>\r\n    Block level button\r\n  </Button>\r\n</div>\r\n`;\r\nconst jsCode6 = `\r\n<ButtonToolbar>\r\n  <Button variant=\"primary\" size=\"lg\" active>\r\n    Primary button\r\n  </Button>\r\n  <Button variant=\"secondary\" size=\"lg\" active>\r\n    Button\r\n  </Button>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode7 = `\r\n<ButtonToolbar>\r\n  <Button variant=\"primary\" size=\"lg\" disabled>\r\n    Primary button\r\n  </Button>{' '}\r\n  <Button variant=\"secondary\" size=\"lg\" disabled>\r\n    Button\r\n  </Button>{' '}\r\n  <Button href=\"#\" variant=\"secondary\" size=\"lg\" disabled>\r\n    Link\r\n  </Button>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode8 = `\r\nfunction simulateNetworkRequest() {\r\n  return new Promise(resolve => setTimeout(resolve, 2000));\r\n}\r\n\r\nclass LoadingButton extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({ isLoading: true }, () => {\r\n      simulateNetworkRequest().then(() => {\r\n        this.setState({ isLoading: false });\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n\r\n    return (\r\n      <Button\r\n        variant=\"primary\"\r\n        disabled={isLoading}\r\n        onClick={!isLoading ? this.handleClick : null}\r\n      >\r\n        {isLoading ? 'Loadingâ€¦' : 'Click to load'}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<LoadingButton />);\r\n`;\r\nconst jsCode9 = `\r\n<div className=\"d-flex flex-column\">\r\n  <ButtonGroup toggle>\r\n    <ToggleButton type=\"checkbox\" defaultChecked value=\"1\">\r\n      Checked\r\n    </ToggleButton>\r\n  </ButtonGroup>\r\n  <ButtonGroup toggle className=\"mt-3\">\r\n    <ToggleButton type=\"radio\" name=\"radio\" defaultChecked value=\"1\">\r\n      Active\r\n    </ToggleButton>\r\n    <ToggleButton type=\"radio\" name=\"radio\" value=\"2\">\r\n      Radio\r\n    </ToggleButton>\r\n    <ToggleButton type=\"radio\" name=\"radio\" value=\"3\">\r\n      Radio\r\n    </ToggleButton>\r\n  </ButtonGroup>\r\n</div>\r\n`;\r\nconst jsCode10 = `\r\n<>\r\n  <ButtonToolbar>\r\n    <ToggleButtonGroup type=\"checkbox\" defaultValue={[1, 3]}>\r\n      <ToggleButton value={1}>Checkbox 1 (pre-checked)</ToggleButton>\r\n      <ToggleButton value={2}>Checkbox 2</ToggleButton>\r\n      <ToggleButton value={3}>Checkbox 3 (pre-checked)</ToggleButton>\r\n    </ToggleButtonGroup>\r\n  </ButtonToolbar>\r\n\r\n  <ButtonToolbar>\r\n    <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n      <ToggleButton value={1}>Radio 1 (pre-checked)</ToggleButton>\r\n      <ToggleButton value={2}>Radio 2</ToggleButton>\r\n      <ToggleButton value={3}>Radio 3</ToggleButton>\r\n    </ToggleButtonGroup>\r\n  </ButtonToolbar>\r\n</>\r\n`;\r\nconst jsCode11 = `\r\nclass ToggleButtonGroupControlled extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      value: [1, 3],\r\n    };\r\n  }\r\n\r\n  handleChange(value, event) {\r\n    this.setState({ value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ToggleButtonGroup\r\n        type=\"checkbox\"\r\n        value={this.state.value}\r\n        onChange={this.handleChange}\r\n      >\r\n        <ToggleButton value={1}>Option 1</ToggleButton>\r\n        <ToggleButton value={2}>Option 2</ToggleButton>\r\n        <ToggleButton value={3}>Option 3</ToggleButton>\r\n      </ToggleButtonGroup>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<ToggleButtonGroupControlled />);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}