{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\layout\\\\BoxExamplesPage.js\";\nimport React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst jsCode = `\n<Box component=\"span\" m={5}>\n  <Button />\n</Box>\n`;\nconst jsCode2 = `\n<Box color=\"text.primary\" clone>\n  <Button />\n</Box>\n`;\nconst jsCode3 = `\n<Box color=\"text.primary\">\n  {props => <Button {...props} />}\n</Box>\n`;\nexport default function BoxExamplesPage() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notice, {\n      icon: \"flaticon-warning text-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), \" component serves as a wrapper component for most of the CSS utility needs.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"font-weight-bold\",\n          rel: \"noopener noreferrer\",\n          href: \"https://material-ui.com/components/box/\",\n          children: \"demos & documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode,\n          beforeCodeTitle: \"Common example\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"The Box component wraps your component. It creates a new DOM element, a \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<div>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 26\n            }, this), \" by default that can be changed with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"component\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 24\n            }, this), \" property. Let's say you want to use a \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<span>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), \" with \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"margin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 52\n            }, this), \" instead of \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<div>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 18\n            }, this), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7 gutter-t gutter-b\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            m: 5,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              children: \"Button with margin 5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode3,\n          beforeCodeTitle: \"Props example\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pb-3\",\n            children: [\"2. \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Use render props\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"The Box children accepts a render props function. You can pull out the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"className\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            color: \"text.primary\",\n            children: props => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn\",\n              ...props,\n              children: [\"PROPS\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode2,\n          beforeCodeTitle: \"Clone example\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pb-3\",\n            children: \"However, sometimes you have to target the underlying DOM element. For instance, you want to change the text color of the button. The Button component defines its own color. CSS inheritance doesn't help. To workaround the problem, you have two options:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pb-3\",\n            children: [\"1. \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Use React.cloneElement()\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pb-3\",\n            children: \"The Box component has a clone property to enable the usage of the clone element method of React.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            color: \"text.primary\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn\",\n              children: \"Primary text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = BoxExamplesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxExamplesPage\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/GoogleMaterialExamples/layout/BoxExamplesPage.js"],"names":["React","Box","Notice","KTCodeExample","jsCode","jsCode2","jsCode3","BoxExamplesPage","props"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst jsCode = `\r\n<Box component=\"span\" m={5}>\r\n  <Button />\r\n</Box>\r\n`;\r\nconst jsCode2 = `\r\n<Box color=\"text.primary\" clone>\r\n  <Button />\r\n</Box>\r\n`;\r\nconst jsCode3 = `\r\n<Box color=\"text.primary\">\r\n  {props => <Button {...props} />}\r\n</Box>\r\n`;\r\n\r\nexport default function BoxExamplesPage() {\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning text-primary\">\r\n        <span>\r\n          The <code>Box</code> component serves as a wrapper component for most\r\n          of the CSS utility needs.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/box/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode} beforeCodeTitle=\"Common example\">\r\n            <span>\r\n              The Box component wraps your component. It creates a new DOM\r\n              element, a <code>&lt;div&gt;</code> by default that can be changed\r\n              with the <code>component</code> property. Let's say you want to\r\n              use a <code>&lt;span&gt;</code> with <code>margin</code> instead\r\n              of <code>&lt;div&gt;</code>:\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7 gutter-t gutter-b\"></div>\r\n            <Box component=\"span\" m={5}>\r\n              <button type=\"button\" className=\"btn btn-primary\">\r\n                Button with margin 5\r\n              </button>\r\n            </Box>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Props example\">\r\n            <span className=\"pb-3\">\r\n              2. <code>Use render props</code>\r\n            </span>\r\n            <div>\r\n              The Box children accepts a render props function. You can pull out\r\n              the <code>className</code>.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Box color=\"text.primary\">\r\n              {props => (\r\n                <button type=\"button\" className=\"btn\" {...props}>\r\n                  PROPS{\" \"}\r\n                </button>\r\n              )}\r\n            </Box>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Clone example\">\r\n            <span className=\"pb-3\">\r\n              However, sometimes you have to target the underlying DOM element.\r\n              For instance, you want to change the text color of the button. The\r\n              Button component defines its own color. CSS inheritance doesn't\r\n              help. To workaround the problem, you have two options:\r\n            </span>\r\n            <div className=\"pb-3\">\r\n              1. <code>Use React.cloneElement()</code>\r\n            </div>\r\n            <div className=\"pb-3\">\r\n              The Box component has a clone property to enable the usage of the\r\n              clone element method of React.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Box color=\"text.primary\">\r\n              <button type=\"button\" className=\"btn\">\r\n                Primary text\r\n              </button>\r\n            </Box>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}