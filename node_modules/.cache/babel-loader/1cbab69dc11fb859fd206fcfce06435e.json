{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\feedback\\\\ProgressExamplesPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\nimport { CircularProgress, Fab, Button, LinearProgress, Fade, Typography } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { green } from \"@material-ui/core/colors\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles1 = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2)\n  }\n})); // Example 2\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\"\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12\n  }\n})); // Example 3\n\nconst useStyles3 = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2)\n  }\n})); // Example 4\n\nconst useStyles4 = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2)\n  }\n})); // Example 5\n\nconst useStyles5 = makeStyles({\n  root: {\n    flexGrow: 1\n  }\n}); // Example 6\n\nconst useStyles6 = makeStyles({\n  root: {\n    flexGrow: 1\n  }\n}); // Example 7\n\nconst useStyles7 = makeStyles({\n  root: {\n    flexGrow: 1\n  }\n}); // Example 8\n\nconst useStyles8 = makeStyles({\n  root: {\n    flexGrow: 1\n  }\n}); // Example 9\n\nconst ColorCircularProgress9 = withStyles({\n  root: {\n    color: \"#00695c\"\n  }\n})(CircularProgress);\nconst ColorLinearProgress9 = withStyles({\n  colorPrimary: {\n    backgroundColor: \"#b2dfdb\"\n  },\n  barColorPrimary: {\n    backgroundColor: \"#00695c\"\n  }\n})(LinearProgress);\nconst BorderLinearProgress9 = withStyles({\n  root: {\n    height: 10,\n    backgroundColor: lighten(\"#ff6c5c\", 0.5)\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: \"#ff6c5c\"\n  }\n})(LinearProgress); // Inspired by the Facebook spinners.\n\nconst useStylesFacebook9 = makeStyles({\n  root: {\n    position: \"relative\"\n  },\n  top: {\n    color: \"#eef3fd\"\n  },\n  bottom: {\n    color: \"#6798e5\",\n    animationDuration: \"550ms\",\n    position: \"absolute\",\n    left: 0\n  }\n});\n\nfunction FacebookProgress9(props) {\n  _s();\n\n  const classes = useStylesFacebook9();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      value: 100,\n      className: classes.top,\n      size: 24,\n      thickness: 4,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      className: classes.bottom,\n      size: 24,\n      thickness: 4,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FacebookProgress9, \"auNU+Yio/NuO+UVG4PZNWrnQ43E=\", false, function () {\n  return [useStylesFacebook9];\n});\n\n_c = FacebookProgress9;\nconst useStyles9 = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n})); // Example 10\n\nconst useStyles10 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  button: {\n    margin: theme.spacing(2)\n  },\n  placeholder: {\n    height: 40\n  }\n}));\nexport default function ProgressExamplesPage() {\n  _s2();\n\n  // Example 1\n  const classes1 = useStyles1(); // Example 2\n\n  const classes2 = useStyles2();\n  const [loading2, setLoading2] = React.useState(false);\n  const [success2, setSuccess2] = React.useState(false);\n  const timer2 = React.useRef();\n  const buttonClassname2 = clsx({\n    [classes2.buttonSuccess]: success2\n  });\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer2.current);\n    };\n  }, []);\n\n  function handleButtonClick2() {\n    if (!loading2) {\n      setSuccess2(false);\n      setLoading2(true);\n      timer2.current = setTimeout(() => {\n        setSuccess2(true);\n        setLoading2(false);\n      }, 2000);\n    }\n  } // Example 3\n\n\n  const classes3 = useStyles3();\n  const [progress3, setProgress3] = React.useState(0);\n  React.useEffect(() => {\n    function tick() {\n      // reset when reaching 100%\n      setProgress3(oldProgress => oldProgress >= 100 ? 0 : oldProgress + 1);\n    }\n\n    const timer3 = setInterval(tick, 20);\n    return () => {\n      clearInterval(timer3);\n    };\n  }, []); // Example 4\n\n  const classes4 = useStyles4();\n  const [completed4, setCompleted4] = React.useState(0);\n  React.useEffect(() => {\n    function progress() {\n      setCompleted4(prevCompleted => prevCompleted >= 100 ? 0 : prevCompleted + 10);\n    }\n\n    const timer4 = setInterval(progress, 1000);\n    return () => {\n      clearInterval(timer4);\n    };\n  }, []); // Example 5\n\n  const classes5 = useStyles5(); // Example 6\n\n  const classes6 = useStyles6();\n  const [completed6, setCompleted6] = React.useState(0);\n  React.useEffect(() => {\n    function progress() {\n      setCompleted6(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 0;\n        }\n\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, 100);\n      });\n    }\n\n    const timer6 = setInterval(progress, 500);\n    return () => {\n      clearInterval(timer6);\n    };\n  }, []); // Example 7\n\n  const classes7 = useStyles7();\n  const [completed7, setCompleted7] = React.useState(0);\n  const [buffer7, setBuffer7] = React.useState(10);\n  const progress = React.useRef(() => {});\n  React.useEffect(() => {\n    progress.current = () => {\n      if (completed7 > 100) {\n        setCompleted7(0);\n        setBuffer7(10);\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        setCompleted7(completed7 + diff);\n        setBuffer7(completed7 + diff + diff2);\n      }\n    };\n  });\n  React.useEffect(() => {\n    function tick() {\n      progress.current();\n    }\n\n    const timer7 = setInterval(tick, 500);\n    return () => {\n      clearInterval(timer7);\n    };\n  }, []); // Example 8\n\n  const classes8 = useStyles8(); // Example 9\n\n  const classes9 = useStyles9(); // Example 10\n\n  const classes10 = useStyles10();\n  const [loading10, setLoading10] = React.useState(false);\n  const [query10, setQuery10] = React.useState(\"idle\");\n  const timerRef10 = React.useRef();\n  React.useEffect(() => () => {\n    clearTimeout(timerRef10.current);\n  }, []);\n\n  function handleClickLoading10() {\n    setLoading10(prevLoading => !prevLoading);\n  }\n\n  function handleClickQuery10() {\n    clearTimeout(timerRef10.current);\n\n    if (query10 !== \"idle\") {\n      setQuery10(\"idle\");\n      return;\n    }\n\n    setQuery10(\"progress\");\n    timerRef10.current = setTimeout(() => {\n      setQuery10(\"success\");\n    }, 2000);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notice, {\n      icon: \"flaticon-warning font-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Progress indicators commonly known as spinners, express an unspecified wait time or display the length of a process. The animation works with CSS, not JavaScript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"font-weight-bold\",\n          rel: \"noopener noreferrer\",\n          href: \"https://material-ui.com/components/progress/\",\n          children: \"demos & documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notice, {\n      className: \"notice-paragraph\",\n      children: \"Circular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode1,\n          beforeCodeTitle: \"Circular Indeterminate\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes1.progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes1.progress,\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode3,\n          beforeCodeTitle: \"Circular Determinate\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes3.progress,\n              variant: \"determinate\",\n              value: progress3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes3.progress,\n              variant: \"determinate\",\n              value: progress3,\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode5,\n          beforeCodeTitle: \"Linear Indeterminate\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes5.root,\n            children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode7,\n          beforeCodeTitle: \"Linear Buffer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes7.root,\n            children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"buffer\",\n              value: completed7,\n              valueBuffer: buffer7\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              color: \"secondary\",\n              variant: \"buffer\",\n              value: completed7,\n              valueBuffer: buffer7\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode9,\n          beforeCodeTitle: \"Customized progress bars\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Here are some examples of customizing the component.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes9.root,\n            children: [/*#__PURE__*/_jsxDEV(ColorCircularProgress9, {\n              size: 30,\n              thickness: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ColorLinearProgress9, {\n              className: classes9.margin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BorderLinearProgress9, {\n              className: classes9.margin,\n              variant: \"determinate\",\n              color: \"secondary\",\n              value: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FacebookProgress9, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode11,\n          beforeCodeTitle: \"Limitations\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pb-3\",\n            children: \"Under heavy load, you might lose the stroke dash animation or see random CircularProgress ring widths. You should run processor intensive operations in a web worker or by batch in order not to block the main rendering thread.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"When it's not possible, you can leverage the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"disableShrink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), \" property to mitigate the issue.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n            disableShrink: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode2,\n          beforeCodeTitle: \"Interactive Integration\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes2.root,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes2.wrapper,\n              children: [/*#__PURE__*/_jsxDEV(Fab, {\n                \"aria-label\": \"Save\",\n                color: \"primary\",\n                className: buttonClassname2,\n                onClick: handleButtonClick2,\n                children: success2 ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 17\n              }, this), loading2 && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 68,\n                className: classes2.fabProgress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes2.wrapper,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                className: buttonClassname2,\n                disabled: loading2,\n                onClick: handleButtonClick2,\n                children: \"Accept terms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this), loading2 && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                className: classes2.buttonProgress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode4,\n          beforeCodeTitle: \"Circular Static\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes4.progress,\n              variant: \"static\",\n              value: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes4.progress,\n              variant: \"static\",\n              value: 25\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes4.progress,\n              variant: \"static\",\n              value: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes4.progress,\n              variant: \"static\",\n              value: 75\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes4.progress,\n              variant: \"static\",\n              value: 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes4.progress,\n              variant: \"static\",\n              value: completed4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode6,\n          beforeCodeTitle: \"Linear Determinate\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes6.root,\n            children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: completed6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              color: \"secondary\",\n              variant: \"determinate\",\n              value: completed6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode8,\n          beforeCodeTitle: \"Linear Query\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes8.root,\n            children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"query\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              color: \"secondary\",\n              variant: \"query\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode10,\n          beforeCodeTitle: \"Delaying appearance\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"There are 3 important limits to know around response time. The ripple effect of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"ButtonBase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 36\n            }, this), \" component ensures that the user feels that the system is reacting instantaneously. Normally, no special feedback is necessary during delays of more than 0.1 but less than 1.0 second. After 1.0 second, you can display a loader to keep user's flow of thought uninterrupted.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes10.root,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes10.placeholder,\n              children: /*#__PURE__*/_jsxDEV(Fade, {\n                in: loading10,\n                style: {\n                  transitionDelay: loading10 ? \"800ms\" : \"0ms\"\n                },\n                unmountOnExit: true,\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClickLoading10,\n              className: classes10.button,\n              children: loading10 ? \"Stop loading\" : \"Loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes10.placeholder,\n              children: query10 === \"success\" ? /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Success!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Fade, {\n                in: query10 === \"progress\",\n                style: {\n                  transitionDelay: query10 === \"progress\" ? \"800ms\" : \"0ms\"\n                },\n                unmountOnExit: true,\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClickQuery10,\n              className: classes10.button,\n              children: query10 !== \"idle\" ? \"Reset\" : \"Simulate a load\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(ProgressExamplesPage, \"F+uvBWsQtJjXxQG4u09cZaXjRWA=\", false, function () {\n  return [useStyles1, useStyles2, useStyles3, useStyles4, useStyles5, useStyles6, useStyles7, useStyles8, useStyles9, useStyles10];\n});\n\n_c2 = ProgressExamplesPage;\nconst jsCode1 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2),\n  },\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <CircularProgress className={classes.progress} />\n      <CircularProgress className={classes.progress} color=\"secondary\" />\n    </div>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function CircularIntegration() {\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  function handleButtonClick() {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Fab\n          aria-label=\"Save\"\n          color=\"primary\"\n          className={buttonClassname}\n          onClick={handleButtonClick}\n        >\n          {success ? <CheckIcon /> : <SaveIcon />}\n        </Fab>\n        {loading && <CircularProgress size={68} className={classes.fabProgress} />}\n      </div>\n      <div className={classes.wrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={buttonClassname}\n          disabled={loading}\n          onClick={handleButtonClick}\n        >\n          Accept terms\n        </Button>\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n      </div>\n    </div>\n  );\n}\n`;\nconst jsCode3 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2),\n  },\n}));\n\nexport default function CircularDeterminate() {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    function tick() {\n      // reset when reaching 100%\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\n    }\n\n    const timer = setInterval(tick, 20);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div>\n      <CircularProgress className={classes.progress} variant=\"determinate\" value={progress} />\n      <CircularProgress\n        className={classes.progress}\n        variant=\"determinate\"\n        value={progress}\n        color=\"secondary\"\n      />\n    </div>\n  );\n}\n`;\nconst jsCode4 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2),\n  },\n}));\n\nexport default function CircularStatic() {\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState(0);\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(prevCompleted => (prevCompleted >= 100 ? 0 : prevCompleted + 10));\n    }\n\n    const timer = setInterval(progress, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div>\n      <CircularProgress className={classes.progress} variant=\"static\" value={5} />\n      <CircularProgress className={classes.progress} variant=\"static\" value={25} />\n      <CircularProgress className={classes.progress} variant=\"static\" value={50} />\n      <CircularProgress className={classes.progress} variant=\"static\" value={75} />\n      <CircularProgress className={classes.progress} variant=\"static\" value={100} />\n      <CircularProgress className={classes.progress} variant=\"static\" value={completed} />\n    </div>\n  );\n}\n`;\nconst jsCode5 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport default function LinearIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress />\n      <br />\n      <LinearProgress color=\"secondary\" />\n    </div>\n  );\n}\n`;\nconst jsCode6 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport default function LinearDeterminate() {\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState(0);\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 0;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, 100);\n      });\n    }\n\n    const timer = setInterval(progress, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress variant=\"determinate\" value={completed} />\n      <br />\n      <LinearProgress color=\"secondary\" variant=\"determinate\" value={completed} />\n    </div>\n  );\n}\n`;\nconst jsCode7 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport default function LinearBuffer() {\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState(0);\n  const [buffer, setBuffer] = React.useState(10);\n\n  const progress = React.useRef(() => {});\n  React.useEffect(() => {\n    progress.current = () => {\n      if (completed > 100) {\n        setCompleted(0);\n        setBuffer(10);\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        setCompleted(completed + diff);\n        setBuffer(completed + diff + diff2);\n      }\n    };\n  });\n\n  React.useEffect(() => {\n    function tick() {\n      progress.current();\n    }\n    const timer = setInterval(tick, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress variant=\"buffer\" value={completed} valueBuffer={buffer} />\n      <br />\n      <LinearProgress color=\"secondary\" variant=\"buffer\" value={completed} valueBuffer={buffer} />\n    </div>\n  );\n}\n`;\nconst jsCode8 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport default function LinearQuery() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress variant=\"query\" />\n      <br />\n      <LinearProgress color=\"secondary\" variant=\"query\" />\n    </div>\n  );\n}\n`;\nconst jsCode9 = `\nimport React from 'react';\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst ColorCircularProgress = withStyles({\n  root: {\n    color: '#00695c',\n  },\n})(CircularProgress);\n\nconst ColorLinearProgress = withStyles({\n  colorPrimary: {\n    backgroundColor: '#b2dfdb',\n  },\n  barColorPrimary: {\n    backgroundColor: '#00695c',\n  },\n})(LinearProgress);\n\nconst BorderLinearProgress = withStyles({\n  root: {\n    height: 10,\n    backgroundColor: lighten('#ff6c5c', 0.5),\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#ff6c5c',\n  },\n})(LinearProgress);\n\n// Inspired by the Facebook spinners.\nconst useStylesFacebook = makeStyles({\n  root: {\n    position: 'relative',\n  },\n  top: {\n    color: '#eef3fd',\n  },\n  bottom: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n    left: 0,\n  },\n});\n\nfunction FacebookProgress(props) {\n  const classes = useStylesFacebook();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress\n        variant=\"determinate\"\n        value={100}\n        className={classes.top}\n        size={24}\n        thickness={4}\n        {...props}\n      />\n      <CircularProgress\n        variant=\"indeterminate\"\n        disableShrink\n        className={classes.bottom}\n        size={24}\n        thickness={4}\n        {...props}\n      />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function CustomizedProgressBars() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ColorCircularProgress size={30} thickness={5} />\n      <ColorLinearProgress className={classes.margin} />\n      <BorderLinearProgress\n        className={classes.margin}\n        variant=\"determinate\"\n        color=\"secondary\"\n        value={50}\n      />\n      <FacebookProgress />\n    </div>\n  );\n}\n`;\nconst jsCode10 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  button: {\n    margin: theme.spacing(2),\n  },\n  placeholder: {\n    height: 40,\n  },\n}));\n\nexport default function DelayingAppearance() {\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [query, setQuery] = React.useState('idle');\n  const timerRef = React.useRef();\n\n  React.useEffect(\n    () => () => {\n      clearTimeout(timerRef.current);\n    },\n    [],\n  );\n\n  function handleClickLoading() {\n    setLoading(prevLoading => !prevLoading);\n  }\n\n  function handleClickQuery() {\n    clearTimeout(timerRef.current);\n\n    if (query !== 'idle') {\n      setQuery('idle');\n      return;\n    }\n\n    setQuery('progress');\n    timerRef.current = setTimeout(() => {\n      setQuery('success');\n    }, 2000);\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.placeholder}>\n        <Fade\n          in={loading}\n          style={{\n            transitionDelay: loading ? '800ms' : '0ms',\n          }}\n          unmountOnExit\n        >\n          <CircularProgress />\n        </Fade>\n      </div>\n      <Button onClick={handleClickLoading} className={classes.button}>\n        {loading ? 'Stop loading' : 'Loading'}\n      </Button>\n      <div className={classes.placeholder}>\n        {query === 'success' ? (\n          <Typography>Success!</Typography>\n        ) : (\n          <Fade\n            in={query === 'progress'}\n            style={{\n              transitionDelay: query === 'progress' ? '800ms' : '0ms',\n            }}\n            unmountOnExit\n          >\n            <CircularProgress />\n          </Fade>\n        )}\n      </div>\n      <Button onClick={handleClickQuery} className={classes.button}>\n        {query !== 'idle' ? 'Reset' : 'Simulate a load'}\n      </Button>\n    </div>\n  );\n}\n`;\nconst jsCode11 = `\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function CircularUnderLoad() {\n  return <CircularProgress disableShrink />;\n}\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FacebookProgress9\");\n$RefreshReg$(_c2, \"ProgressExamplesPage\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/GoogleMaterialExamples/feedback/ProgressExamplesPage.js"],"names":["React","clsx","makeStyles","withStyles","lighten","CircularProgress","Fab","Button","LinearProgress","Fade","Typography","CheckIcon","SaveIcon","green","Notice","KTCodeExample","useStyles1","theme","progress","margin","spacing","useStyles2","root","display","alignItems","wrapper","position","buttonSuccess","backgroundColor","fabProgress","color","top","left","zIndex","buttonProgress","marginTop","marginLeft","useStyles3","useStyles4","useStyles5","flexGrow","useStyles6","useStyles7","useStyles8","ColorCircularProgress9","ColorLinearProgress9","colorPrimary","barColorPrimary","BorderLinearProgress9","height","bar","borderRadius","useStylesFacebook9","bottom","animationDuration","FacebookProgress9","props","classes","useStyles9","useStyles10","flexDirection","button","placeholder","ProgressExamplesPage","classes1","classes2","loading2","setLoading2","useState","success2","setSuccess2","timer2","useRef","buttonClassname2","useEffect","clearTimeout","current","handleButtonClick2","setTimeout","classes3","progress3","setProgress3","tick","oldProgress","timer3","setInterval","clearInterval","classes4","completed4","setCompleted4","prevCompleted","timer4","classes5","classes6","completed6","setCompleted6","oldCompleted","diff","Math","random","min","timer6","classes7","completed7","setCompleted7","buffer7","setBuffer7","diff2","timer7","classes8","classes9","classes10","loading10","setLoading10","query10","setQuery10","timerRef10","handleClickLoading10","prevLoading","handleClickQuery10","jsCode1","jsCode3","jsCode5","jsCode7","jsCode9","jsCode11","jsCode2","jsCode4","jsCode6","jsCode8","jsCode10","transitionDelay"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;AAsBA,MAAMM,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlGA;AAmGA,MAAML,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvCA;AAwCA,MAAMM,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArCA;AAsCA,MAAML,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;AAuBA,MAAMM,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxCA;AAyCA,MAAML,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlDA;AAmDA,MAAMM,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;AAuBA,MAAML,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnGA;AAoGA,MAAMM,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1FA;AA2FA,MAAML,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA","sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {makeStyles, withStyles, lighten} from \"@material-ui/core/styles\";\r\nimport {\r\n  CircularProgress,\r\n  Fab,\r\n  Button,\r\n  LinearProgress,\r\n  Fade,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\"\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    \"&:hover\": {\r\n      backgroundColor: green[700]\r\n    }\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    position: \"absolute\",\r\n    top: -6,\r\n    left: -6,\r\n    zIndex: 1\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 7\r\nconst useStyles7 = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 8\r\nconst useStyles8 = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 9\r\nconst ColorCircularProgress9 = withStyles({\r\n  root: {\r\n    color: \"#00695c\"\r\n  }\r\n})(CircularProgress);\r\n\r\nconst ColorLinearProgress9 = withStyles({\r\n  colorPrimary: {\r\n    backgroundColor: \"#b2dfdb\"\r\n  },\r\n  barColorPrimary: {\r\n    backgroundColor: \"#00695c\"\r\n  }\r\n})(LinearProgress);\r\n\r\nconst BorderLinearProgress9 = withStyles({\r\n  root: {\r\n    height: 10,\r\n    backgroundColor: lighten(\"#ff6c5c\", 0.5)\r\n  },\r\n  bar: {\r\n    borderRadius: 20,\r\n    backgroundColor: \"#ff6c5c\"\r\n  }\r\n})(LinearProgress);\r\n\r\n// Inspired by the Facebook spinners.\r\nconst useStylesFacebook9 = makeStyles({\r\n  root: {\r\n    position: \"relative\"\r\n  },\r\n  top: {\r\n    color: \"#eef3fd\"\r\n  },\r\n  bottom: {\r\n    color: \"#6798e5\",\r\n    animationDuration: \"550ms\",\r\n    position: \"absolute\",\r\n    left: 0\r\n  }\r\n});\r\n\r\nfunction FacebookProgress9(props) {\r\n  const classes = useStylesFacebook9();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        value={100}\r\n        className={classes.top}\r\n        size={24}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n      <CircularProgress\r\n        variant=\"indeterminate\"\r\n        disableShrink\r\n        className={classes.bottom}\r\n        size={24}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles9 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 10\r\nconst useStyles10 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  placeholder: {\r\n    height: 40\r\n  }\r\n}));\r\n\r\nexport default function ProgressExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [loading2, setLoading2] = React.useState(false);\r\n  const [success2, setSuccess2] = React.useState(false);\r\n  const timer2 = React.useRef();\r\n\r\n  const buttonClassname2 = clsx({\r\n    [classes2.buttonSuccess]: success2\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer2.current);\r\n    };\r\n  }, []);\r\n\r\n  function handleButtonClick2() {\r\n    if (!loading2) {\r\n      setSuccess2(false);\r\n      setLoading2(true);\r\n      timer2.current = setTimeout(() => {\r\n        setSuccess2(true);\r\n        setLoading2(false);\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [progress3, setProgress3] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      // reset when reaching 100%\r\n      setProgress3(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    }\r\n\r\n    const timer3 = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer3);\r\n    };\r\n  }, []);\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n  const [completed4, setCompleted4] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted4(prevCompleted =>\r\n        prevCompleted >= 100 ? 0 : prevCompleted + 10\r\n      );\r\n    }\r\n\r\n    const timer4 = setInterval(progress, 1000);\r\n    return () => {\r\n      clearInterval(timer4);\r\n    };\r\n  }, []);\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n  const [completed6, setCompleted6] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted6(oldCompleted => {\r\n        if (oldCompleted === 100) {\r\n          return 0;\r\n        }\r\n        const diff = Math.random() * 10;\r\n        return Math.min(oldCompleted + diff, 100);\r\n      });\r\n    }\r\n\r\n    const timer6 = setInterval(progress, 500);\r\n    return () => {\r\n      clearInterval(timer6);\r\n    };\r\n  }, []);\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n  const [completed7, setCompleted7] = React.useState(0);\r\n  const [buffer7, setBuffer7] = React.useState(10);\r\n\r\n  const progress = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progress.current = () => {\r\n      if (completed7 > 100) {\r\n        setCompleted7(0);\r\n        setBuffer7(10);\r\n      } else {\r\n        const diff = Math.random() * 10;\r\n        const diff2 = Math.random() * 10;\r\n        setCompleted7(completed7 + diff);\r\n        setBuffer7(completed7 + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      progress.current();\r\n    }\r\n    const timer7 = setInterval(tick, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer7);\r\n    };\r\n  }, []);\r\n\r\n  // Example 8\r\n  const classes8 = useStyles8();\r\n\r\n  // Example 9\r\n  const classes9 = useStyles9();\r\n\r\n  // Example 10\r\n  const classes10 = useStyles10();\r\n  const [loading10, setLoading10] = React.useState(false);\r\n  const [query10, setQuery10] = React.useState(\"idle\");\r\n  const timerRef10 = React.useRef();\r\n\r\n  React.useEffect(\r\n    () => () => {\r\n      clearTimeout(timerRef10.current);\r\n    },\r\n    []\r\n  );\r\n\r\n  function handleClickLoading10() {\r\n    setLoading10(prevLoading => !prevLoading);\r\n  }\r\n\r\n  function handleClickQuery10() {\r\n    clearTimeout(timerRef10.current);\r\n\r\n    if (query10 !== \"idle\") {\r\n      setQuery10(\"idle\");\r\n      return;\r\n    }\r\n\r\n    setQuery10(\"progress\");\r\n    timerRef10.current = setTimeout(() => {\r\n      setQuery10(\"success\");\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Progress indicators commonly known as spinners, express an unspecified\r\n          wait time or display the length of a process. The animation works with\r\n          CSS, not JavaScript\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/progress/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <Notice className=\"notice-paragraph\">Circular</Notice>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Circular Indeterminate\"\r\n          >\r\n            <div>\r\n              <CircularProgress className={classes1.progress} />\r\n              <CircularProgress\r\n                className={classes1.progress}\r\n                color=\"secondary\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Circular Determinate\"\r\n          >\r\n            <div>\r\n              <CircularProgress\r\n                className={classes3.progress}\r\n                variant=\"determinate\"\r\n                value={progress3}\r\n              />\r\n              <CircularProgress\r\n                className={classes3.progress}\r\n                variant=\"determinate\"\r\n                value={progress3}\r\n                color=\"secondary\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Linear Indeterminate\"\r\n          >\r\n            <div className={classes5.root}>\r\n              <LinearProgress />\r\n              <br />\r\n              <LinearProgress color=\"secondary\" />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Linear Buffer\">\r\n            <div className={classes7.root}>\r\n              <LinearProgress\r\n                variant=\"buffer\"\r\n                value={completed7}\r\n                valueBuffer={buffer7}\r\n              />\r\n              <br />\r\n              <LinearProgress\r\n                color=\"secondary\"\r\n                variant=\"buffer\"\r\n                value={completed7}\r\n                valueBuffer={buffer7}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode9}\r\n            beforeCodeTitle=\"Customized progress bars\"\r\n          >\r\n            <span>Here are some examples of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes9.root}>\r\n              <ColorCircularProgress9 size={30} thickness={5} />\r\n              <ColorLinearProgress9 className={classes9.margin} />\r\n              <BorderLinearProgress9\r\n                className={classes9.margin}\r\n                variant=\"determinate\"\r\n                color=\"secondary\"\r\n                value={50}\r\n              />\r\n              <FacebookProgress9 />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode11} beforeCodeTitle=\"Limitations\">\r\n            <span className=\"pb-3\">\r\n              Under heavy load, you might lose the stroke dash animation or see\r\n              random CircularProgress ring widths. You should run processor\r\n              intensive operations in a web worker or by batch in order not to\r\n              block the main rendering thread.\r\n            </span>\r\n            <div>\r\n              When it's not possible, you can leverage the{\" \"}\r\n              <code>disableShrink</code> property to mitigate the issue.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n\r\n            <CircularProgress disableShrink />\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Interactive Integration\"\r\n          >\r\n            <div className={classes2.root}>\r\n              <div className={classes2.wrapper}>\r\n                <Fab\r\n                  aria-label=\"Save\"\r\n                  color=\"primary\"\r\n                  className={buttonClassname2}\r\n                  onClick={handleButtonClick2}\r\n                >\r\n                  {success2 ? <CheckIcon /> : <SaveIcon />}\r\n                </Fab>\r\n                {loading2 && (\r\n                  <CircularProgress\r\n                    size={68}\r\n                    className={classes2.fabProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className={classes2.wrapper}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={buttonClassname2}\r\n                  disabled={loading2}\r\n                  onClick={handleButtonClick2}\r\n                >\r\n                  Accept terms\r\n                </Button>\r\n                {loading2 && (\r\n                  <CircularProgress\r\n                    size={24}\r\n                    className={classes2.buttonProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Circular Static\">\r\n            <div>\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={5}\r\n              />\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={25}\r\n              />\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={50}\r\n              />\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={75}\r\n              />\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={100}\r\n              />\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={completed4}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Linear Determinate\">\r\n            <div className={classes6.root}>\r\n              <LinearProgress variant=\"determinate\" value={completed6} />\r\n              <br />\r\n              <LinearProgress\r\n                color=\"secondary\"\r\n                variant=\"determinate\"\r\n                value={completed6}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode8} beforeCodeTitle=\"Linear Query\">\r\n            <div className={classes8.root}>\r\n              <LinearProgress variant=\"query\" />\r\n              <br />\r\n              <LinearProgress color=\"secondary\" variant=\"query\" />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode10}\r\n            beforeCodeTitle=\"Delaying appearance\"\r\n          >\r\n            <span>\r\n              There are 3 important limits to know around response time. The\r\n              ripple effect of the <code>ButtonBase</code> component ensures\r\n              that the user feels that the system is reacting instantaneously.\r\n              Normally, no special feedback is necessary during delays of more\r\n              than 0.1 but less than 1.0 second. After 1.0 second, you can\r\n              display a loader to keep user's flow of thought uninterrupted.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes10.root}>\r\n              <div className={classes10.placeholder}>\r\n                <Fade\r\n                  in={loading10}\r\n                  style={{\r\n                    transitionDelay: loading10 ? \"800ms\" : \"0ms\"\r\n                  }}\r\n                  unmountOnExit\r\n                >\r\n                  <CircularProgress />\r\n                </Fade>\r\n              </div>\r\n              <Button\r\n                onClick={handleClickLoading10}\r\n                className={classes10.button}\r\n              >\r\n                {loading10 ? \"Stop loading\" : \"Loading\"}\r\n              </Button>\r\n              <div className={classes10.placeholder}>\r\n                {query10 === \"success\" ? (\r\n                  <Typography>Success!</Typography>\r\n                ) : (\r\n                  <Fade\r\n                    in={query10 === \"progress\"}\r\n                    style={{\r\n                      transitionDelay: query10 === \"progress\" ? \"800ms\" : \"0ms\"\r\n                    }}\r\n                    unmountOnExit\r\n                  >\r\n                    <CircularProgress />\r\n                  </Fade>\r\n                )}\r\n              </div>\r\n              <Button onClick={handleClickQuery10} className={classes10.button}>\r\n                {query10 !== \"idle\" ? \"Reset\" : \"Simulate a load\"}\r\n              </Button>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} />\r\n      <CircularProgress className={classes.progress} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: -6,\r\n    left: -6,\r\n    zIndex: 1,\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function CircularIntegration() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const timer = React.useRef();\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer.current);\r\n    };\r\n  }, []);\r\n\r\n  function handleButtonClick() {\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n      timer.current = setTimeout(() => {\r\n        setSuccess(true);\r\n        setLoading(false);\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.wrapper}>\r\n        <Fab\r\n          aria-label=\"Save\"\r\n          color=\"primary\"\r\n          className={buttonClassname}\r\n          onClick={handleButtonClick}\r\n        >\r\n          {success ? <CheckIcon /> : <SaveIcon />}\r\n        </Fab>\r\n        {loading && <CircularProgress size={68} className={classes.fabProgress} />}\r\n      </div>\r\n      <div className={classes.wrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={buttonClassname}\r\n          disabled={loading}\r\n          onClick={handleButtonClick}\r\n        >\r\n          Accept terms\r\n        </Button>\r\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function CircularDeterminate() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      // reset when reaching 100%\r\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    }\r\n\r\n    const timer = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} variant=\"determinate\" value={progress} />\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant=\"determinate\"\r\n        value={progress}\r\n        color=\"secondary\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function CircularStatic() {\r\n  const classes = useStyles();\r\n  const [completed, setCompleted] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted(prevCompleted => (prevCompleted >= 100 ? 0 : prevCompleted + 10));\r\n    }\r\n\r\n    const timer = setInterval(progress, 1000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={5} />\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={25} />\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={50} />\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={75} />\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={100} />\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={completed} />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress />\r\n      <br />\r\n      <LinearProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearDeterminate() {\r\n  const classes = useStyles();\r\n  const [completed, setCompleted] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted(oldCompleted => {\r\n        if (oldCompleted === 100) {\r\n          return 0;\r\n        }\r\n        const diff = Math.random() * 10;\r\n        return Math.min(oldCompleted + diff, 100);\r\n      });\r\n    }\r\n\r\n    const timer = setInterval(progress, 500);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"determinate\" value={completed} />\r\n      <br />\r\n      <LinearProgress color=\"secondary\" variant=\"determinate\" value={completed} />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearBuffer() {\r\n  const classes = useStyles();\r\n  const [completed, setCompleted] = React.useState(0);\r\n  const [buffer, setBuffer] = React.useState(10);\r\n\r\n  const progress = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progress.current = () => {\r\n      if (completed > 100) {\r\n        setCompleted(0);\r\n        setBuffer(10);\r\n      } else {\r\n        const diff = Math.random() * 10;\r\n        const diff2 = Math.random() * 10;\r\n        setCompleted(completed + diff);\r\n        setBuffer(completed + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      progress.current();\r\n    }\r\n    const timer = setInterval(tick, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"buffer\" value={completed} valueBuffer={buffer} />\r\n      <br />\r\n      <LinearProgress color=\"secondary\" variant=\"buffer\" value={completed} valueBuffer={buffer} />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearQuery() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"query\" />\r\n      <br />\r\n      <LinearProgress color=\"secondary\" variant=\"query\" />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst ColorCircularProgress = withStyles({\r\n  root: {\r\n    color: '#00695c',\r\n  },\r\n})(CircularProgress);\r\n\r\nconst ColorLinearProgress = withStyles({\r\n  colorPrimary: {\r\n    backgroundColor: '#b2dfdb',\r\n  },\r\n  barColorPrimary: {\r\n    backgroundColor: '#00695c',\r\n  },\r\n})(LinearProgress);\r\n\r\nconst BorderLinearProgress = withStyles({\r\n  root: {\r\n    height: 10,\r\n    backgroundColor: lighten('#ff6c5c', 0.5),\r\n  },\r\n  bar: {\r\n    borderRadius: 20,\r\n    backgroundColor: '#ff6c5c',\r\n  },\r\n})(LinearProgress);\r\n\r\n// Inspired by the Facebook spinners.\r\nconst useStylesFacebook = makeStyles({\r\n  root: {\r\n    position: 'relative',\r\n  },\r\n  top: {\r\n    color: '#eef3fd',\r\n  },\r\n  bottom: {\r\n    color: '#6798e5',\r\n    animationDuration: '550ms',\r\n    position: 'absolute',\r\n    left: 0,\r\n  },\r\n});\r\n\r\nfunction FacebookProgress(props) {\r\n  const classes = useStylesFacebook();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        value={100}\r\n        className={classes.top}\r\n        size={24}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n      <CircularProgress\r\n        variant=\"indeterminate\"\r\n        disableShrink\r\n        className={classes.bottom}\r\n        size={24}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedProgressBars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ColorCircularProgress size={30} thickness={5} />\r\n      <ColorLinearProgress className={classes.margin} />\r\n      <BorderLinearProgress\r\n        className={classes.margin}\r\n        variant=\"determinate\"\r\n        color=\"secondary\"\r\n        value={50}\r\n      />\r\n      <FacebookProgress />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  placeholder: {\r\n    height: 40,\r\n  },\r\n}));\r\n\r\nexport default function DelayingAppearance() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [query, setQuery] = React.useState('idle');\r\n  const timerRef = React.useRef();\r\n\r\n  React.useEffect(\r\n    () => () => {\r\n      clearTimeout(timerRef.current);\r\n    },\r\n    [],\r\n  );\r\n\r\n  function handleClickLoading() {\r\n    setLoading(prevLoading => !prevLoading);\r\n  }\r\n\r\n  function handleClickQuery() {\r\n    clearTimeout(timerRef.current);\r\n\r\n    if (query !== 'idle') {\r\n      setQuery('idle');\r\n      return;\r\n    }\r\n\r\n    setQuery('progress');\r\n    timerRef.current = setTimeout(() => {\r\n      setQuery('success');\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.placeholder}>\r\n        <Fade\r\n          in={loading}\r\n          style={{\r\n            transitionDelay: loading ? '800ms' : '0ms',\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress />\r\n        </Fade>\r\n      </div>\r\n      <Button onClick={handleClickLoading} className={classes.button}>\r\n        {loading ? 'Stop loading' : 'Loading'}\r\n      </Button>\r\n      <div className={classes.placeholder}>\r\n        {query === 'success' ? (\r\n          <Typography>Success!</Typography>\r\n        ) : (\r\n          <Fade\r\n            in={query === 'progress'}\r\n            style={{\r\n              transitionDelay: query === 'progress' ? '800ms' : '0ms',\r\n            }}\r\n            unmountOnExit\r\n          >\r\n            <CircularProgress />\r\n          </Fade>\r\n        )}\r\n      </div>\r\n      <Button onClick={handleClickQuery} className={classes.button}>\r\n        {query !== 'idle' ? 'Reset' : 'Simulate a load'}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function CircularUnderLoad() {\r\n  return <CircularProgress disableShrink />;\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}