{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\navigation\\\\SteppersExamplesPage.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Stepper, Typography, Step, StepLabel, Button, StepButton, StepContent, Paper, StepConnector, MobileStepper } from \"@material-ui/core\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport { autoPlay } from \"react-swipeable-views-utils\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    width: \"90%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps1() {\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\n}\n\nfunction getStepContent1(step) {\n  switch (step) {\n    case 0:\n      return \"Select campaign settings...\";\n\n    case 1:\n      return \"What is an ad group anyways?\";\n\n    case 2:\n      return \"This is the bit I really care about!\";\n\n    default:\n      return \"Unknown step\";\n  }\n} // Example 2\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: \"90%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: \"inline-block\"\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps2() {\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\n}\n\nfunction getStepContent2(step) {\n  switch (step) {\n    case 0:\n      return \"Step 1: Select campaign settings...\";\n\n    case 1:\n      return \"Step 2: What is an ad group anyways?\";\n\n    case 2:\n      return \"Step 3: This is the bit I really care about!\";\n\n    default:\n      return \"Unknown step\";\n  }\n} // Example 3\n\n\nconst useStyles3 = makeStyles(theme => ({\n  root: {\n    width: \"90%\"\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps3() {\n  return [\"Select master blaster campaign settings\", \"Create an ad group\", \"Create an ad\"];\n}\n\nfunction getStepContent3(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return \"Select campaign settings...\";\n\n    case 1:\n      return \"What is an ad group anyways?\";\n\n    case 2:\n      return \"This is the bit I really care about!\";\n\n    default:\n      return \"Uknown stepIndex\";\n  }\n} // Example 4\n\n\nconst useStyles4 = makeStyles(theme => ({\n  root: {\n    width: \"90%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: \"inline-block\"\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps4() {\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\n}\n\nfunction getStepContent4(step) {\n  switch (step) {\n    case 0:\n      return \"Step 1: Select campaign settings...\";\n\n    case 1:\n      return \"Step 2: What is an ad group anyways?\";\n\n    case 2:\n      return \"Step 3: This is the bit I really care about!\";\n\n    default:\n      return \"Unknown step\";\n  }\n} // Example 5\n\n\nconst useStyles5 = makeStyles(theme => ({\n  root: {\n    width: \"90%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps5() {\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\n}\n\nfunction getStepContent5(step) {\n  switch (step) {\n    case 0:\n      return \"Select campaign settings...\";\n\n    case 1:\n      return \"What is an ad group anyways?\";\n\n    case 2:\n      return \"This is the bit I really care about!\";\n\n    default:\n      return \"Unknown step\";\n  }\n} // Example 6\n\n\nconst useStyles6 = makeStyles(theme => ({\n  root: {\n    width: \"90%\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction getSteps6() {\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\n}\n\nfunction getStepContent6(step) {\n  switch (step) {\n    case 0:\n      return `For each ad campaign that you create, you can control how much\n              you're willing to spend on clicks and conversions, which networks\n              and geographical locations you want your ads to show on, and more.`;\n\n    case 1:\n      return \"An ad group contains one or more ads which target a shared set of keywords.\";\n\n    case 2:\n      return `Try out different ad text to see what brings in the most customers,\n              and learn how to enhance your ads using features like ad extensions.\n              If you run into any problems with your ads, find out how to tell if\n              they're running and how to resolve approval issues.`;\n\n    default:\n      return \"Unknown step\";\n  }\n} // Example 7\n\n\nconst useStyles7 = makeStyles(theme => ({\n  root: {\n    width: \"90%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  connectorActive: {\n    \"& $connectorLine\": {\n      borderColor: theme.palette.secondary.main\n    }\n  },\n  connectorCompleted: {\n    \"& $connectorLine\": {\n      borderColor: theme.palette.primary.main\n    }\n  },\n  connectorDisabled: {\n    \"& $connectorLine\": {\n      borderColor: theme.palette.grey[100]\n    }\n  },\n  connectorLine: {\n    transition: theme.transitions.create(\"border-color\")\n  }\n}));\n\nfunction getSteps7() {\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\n}\n\nfunction getStepContent7(step) {\n  switch (step) {\n    case 0:\n      return \"Select campaign settings...\";\n\n    case 1:\n      return \"What is an ad group anyways?\";\n\n    case 2:\n      return \"This is the bit I really care about!\";\n\n    default:\n      return \"Unknown step\";\n  }\n} // Example 9\n\n\nconst AutoPlaySwipeableViews9 = autoPlay(SwipeableViews);\n_c = AutoPlaySwipeableViews9;\nconst tutorialSteps9 = [{\n  label: \"San Francisco – Oakland Bay Bridge, United States\",\n  imgPath: \"https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60\"\n}, {\n  label: \"Bird\",\n  imgPath: \"https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60\"\n}, {\n  label: \"Bali, Indonesia\",\n  imgPath: \"https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80\"\n}, {\n  label: \"NeONBRAND Digital Marketing, Las Vegas, United States\",\n  imgPath: \"https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60\"\n}, {\n  label: \"Goč, Serbia\",\n  imgPath: \"https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60\"\n}];\nconst useStyles9 = makeStyles(theme => ({\n  root: {\n    maxWidth: 400,\n    flexGrow: 1\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default\n  },\n  img: {\n    height: 255,\n    display: \"block\",\n    maxWidth: 400,\n    overflow: \"hidden\",\n    width: \"100%\"\n  }\n})); // Example 10\n\nconst useStyles10 = makeStyles({\n  root: {\n    maxWidth: 400,\n    flexGrow: 1\n  }\n}); // Example 11\n\nconst useStyles11 = makeStyles({\n  root: {\n    maxWidth: 400,\n    flexGrow: 1\n  }\n});\nexport default function SteppersExamplesPage() {\n  _s();\n\n  // Example 1\n  const classes1 = useStyles1();\n  const [activeStep1, setActiveStep1] = React.useState(0);\n  const [skipped1, setSkipped1] = React.useState(new Set());\n  const steps1 = getSteps1();\n\n  function isStepOptional1(step) {\n    return step === 1;\n  }\n\n  function isStepSkipped1(step) {\n    return skipped1.has(step);\n  }\n\n  function handleNext1() {\n    let newSkipped = skipped1;\n\n    if (isStepSkipped1(activeStep1)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep1);\n    }\n\n    setActiveStep1(prevActiveStep => prevActiveStep + 1);\n    setSkipped1(newSkipped);\n  }\n\n  function handleBack1() {\n    setActiveStep1(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleSkip1() {\n    if (!isStepOptional1(activeStep1)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep1(prevActiveStep => prevActiveStep + 1);\n    setSkipped1(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep1);\n      return newSkipped;\n    });\n  }\n\n  function handleReset1() {\n    setActiveStep1(0);\n  } // Example 2\n\n\n  const classes2 = useStyles2();\n  const [activeStep2, setActiveStep2] = React.useState(0);\n  const [completed2, setCompleted2] = React.useState({});\n  const steps2 = getSteps2();\n\n  function totalSteps2() {\n    return steps2.length;\n  }\n\n  function completedSteps2() {\n    return Object.keys(completed2).length;\n  }\n\n  function isLastStep2() {\n    return activeStep2 === totalSteps2() - 1;\n  }\n\n  function allStepsCompleted2() {\n    return completedSteps2() === totalSteps2();\n  }\n\n  function handleNext2() {\n    const newActiveStep = isLastStep2() && !allStepsCompleted2() ? // It's the last step, but not all steps have been completed,\n    // find the first step that has been completed\n    steps2.findIndex((step, i) => !(i in completed2)) : activeStep2 + 1;\n    setActiveStep2(newActiveStep);\n  }\n\n  function handleBack2() {\n    setActiveStep2(prevActiveStep => prevActiveStep - 1);\n  }\n\n  const handleStep2 = step => () => {\n    setActiveStep2(step);\n  };\n\n  function handleComplete2() {\n    const newCompleted2 = completed2;\n    newCompleted2[activeStep2] = true;\n    setCompleted2(newCompleted2);\n    handleNext2();\n  }\n\n  function handleReset2() {\n    setActiveStep2(0);\n    setCompleted2({});\n  } // Example 3\n\n\n  const classes3 = useStyles3();\n  const [activeStep3, setActiveStep3] = React.useState(0);\n  const steps3 = getSteps3();\n\n  function handleNext3() {\n    setActiveStep3(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack3() {\n    setActiveStep3(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleReset3() {\n    setActiveStep3(0);\n  } // Example 4\n\n\n  const classes4 = useStyles4();\n  const [activeStep4, setActiveStep4] = React.useState(0);\n  const [completed4, setCompleted4] = React.useState(new Set());\n  const [skipped4, setSkipped4] = React.useState(new Set());\n  const steps4 = getSteps4();\n\n  function totalSteps4() {\n    return getSteps4().length;\n  }\n\n  function isStepOptional4(step) {\n    return step === 1;\n  }\n\n  function handleSkip4() {\n    if (!isStepOptional4(activeStep4)) {\n      // You probably want to guard against something like this\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep4(prevActiveStep => prevActiveStep + 1);\n    setSkipped4(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep4);\n      return newSkipped;\n    });\n  }\n\n  function skippedSteps4() {\n    return skipped4.size;\n  }\n\n  function completedSteps4() {\n    return completed4.size;\n  }\n\n  function allStepsCompleted4() {\n    return completedSteps4() === totalSteps4() - skippedSteps4();\n  }\n\n  function isLastStep4() {\n    return activeStep4 === totalSteps4() - 1;\n  }\n\n  function handleNext4() {\n    const newActiveStep = isLastStep4() && !allStepsCompleted4() ? // It's the last step, but not all steps have been completed\n    // find the first step that has been completed\n    steps4.findIndex((step, i) => !completed4.has(i)) : activeStep4 + 1;\n    setActiveStep4(newActiveStep);\n  }\n\n  function handleBack4() {\n    setActiveStep4(prevActiveStep => prevActiveStep - 1);\n  }\n\n  const handleStep4 = step => () => {\n    setActiveStep4(step);\n  };\n\n  function handleComplete4() {\n    const newCompleted = new Set(completed4);\n    newCompleted.add(activeStep4);\n    setCompleted4(newCompleted);\n    /**\r\n     * Sigh... it would be much nicer to replace the following if conditional with\r\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\r\n     * thus we have to resort to not being very DRY.\r\n     */\n\n    if (completed4.size !== totalSteps4() - skippedSteps4()) {\n      handleNext4();\n    }\n  }\n\n  function handleReset4() {\n    setActiveStep4(0);\n    setCompleted4(new Set());\n    setSkipped4(new Set());\n  }\n\n  function isStepSkipped4(step) {\n    return skipped4.has(step);\n  }\n\n  function isStepComplete4(step) {\n    return completed4.has(step);\n  } // Example 5\n\n\n  const classes5 = useStyles5();\n  const [activeStep5, setActiveStep5] = React.useState(0);\n  const [skipped5, setSkipped5] = React.useState(new Set());\n  const steps5 = getSteps5();\n\n  function isStepOptional5(step) {\n    return step === 1;\n  }\n\n  function isStepFailed5(step) {\n    return step === 1;\n  }\n\n  function isStepSkipped5(step) {\n    return skipped5.has(step);\n  }\n\n  function handleNext5() {\n    let newSkipped = skipped5;\n\n    if (isStepSkipped5(activeStep5)) {\n      newSkipped = new Set(skipped5.values());\n      newSkipped.delete(activeStep5);\n    }\n\n    setActiveStep5(prevActiveStep => prevActiveStep + 1);\n    setSkipped5(newSkipped);\n  }\n\n  function handleBack5() {\n    setActiveStep5(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleSkip5() {\n    if (!isStepOptional5(activeStep5)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setSkipped5(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep5);\n      return newSkipped;\n    });\n    setActiveStep5(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleReset5() {\n    setActiveStep5(0);\n  } // Example 6\n\n\n  const classes6 = useStyles6();\n  const [activeStep6, setActiveStep6] = React.useState(0);\n  const steps6 = getSteps6();\n\n  function handleNext6() {\n    setActiveStep6(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack6() {\n    setActiveStep6(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleReset6() {\n    setActiveStep6(0);\n  } // Example 7\n\n\n  const classes7 = useStyles7();\n  const [activeStep7, setActiveStep7] = React.useState(0);\n  const steps7 = getSteps7();\n\n  function handleNext7() {\n    setActiveStep7(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack7() {\n    setActiveStep7(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleReset7() {\n    setActiveStep7(0);\n  }\n\n  const connector7 = /*#__PURE__*/_jsxDEV(StepConnector, {\n    classes: {\n      active: classes7.connectorActive,\n      completed: classes7.connectorCompleted,\n      disabled: classes7.connectorDisabled,\n      line: classes7.connectorLine\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 644,\n    columnNumber: 5\n  }, this); // Example 9\n\n\n  const classes9 = useStyles9();\n  const theme9 = useTheme();\n  const [activeStep9, setActiveStep9] = React.useState(0);\n  const maxSteps9 = tutorialSteps9.length;\n\n  function handleNext9() {\n    setActiveStep9(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack9() {\n    setActiveStep9(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleStepChange9(step) {\n    setActiveStep9(step);\n  } // Example 10\n\n\n  const classes10 = useStyles10();\n  const theme10 = useTheme();\n  const [activeStep10, setActiveStep10] = React.useState(0);\n\n  function handleNext10() {\n    setActiveStep10(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack10() {\n    setActiveStep10(prevActiveStep => prevActiveStep - 1);\n  } // Example 11\n\n\n  const classes11 = useStyles11();\n  const theme11 = useTheme();\n  const [activeStep11, setActiveStep11] = React.useState(0);\n\n  function handleNext11() {\n    setActiveStep11(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack11() {\n    setActiveStep11(prevActiveStep => prevActiveStep - 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notice, {\n      icon: \"flaticon-warning font-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Steppers convey progress through numbered steps. It provides a wizard-like workflow.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"font-weight-bold\",\n          rel: \"noopener noreferrer\",\n          href: \"https://material-ui.com/components/steppers/\",\n          children: \"demos & documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode1,\n          beforeCodeTitle: \"Horizontal Linear\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Stepper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 19\n            }, this), \" can be controlled by passing the current step index (zero-based) as the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"activeStep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 46\n            }, this), \" property.\", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Stepper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 15\n            }, this), \" orientation is set using the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"orientation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 15\n            }, this), \" property.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes1.root,\n            children: [/*#__PURE__*/_jsxDEV(Stepper, {\n              activeStep: activeStep1,\n              children: steps1.map((label, index) => {\n                const stepProps1 = {};\n                const labelProps1 = {};\n\n                if (isStepOptional1(index)) {\n                  labelProps1.optional = /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    children: \"Optional\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 23\n                  }, this);\n                }\n\n                if (isStepSkipped1(index)) {\n                  stepProps1.completed = false;\n                }\n\n                return /*#__PURE__*/_jsxDEV(Step, { ...stepProps1,\n                  children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps1,\n                    children: label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 747,\n                    columnNumber: 23\n                  }, this)\n                }, label, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: activeStep1 === steps1.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes1.instructions,\n                  children: \"All steps completed - you're finished\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 755,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleReset1,\n                  className: classes1.button,\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes1.instructions,\n                  children: getStepContent1(activeStep1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep1 === 0,\n                    onClick: handleBack1,\n                    className: classes1.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 768,\n                    columnNumber: 23\n                  }, this), isStepOptional1(activeStep1) && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleSkip1,\n                    className: classes1.button,\n                    children: \"Skip\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 776,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext1,\n                    className: classes1.button,\n                    children: activeStep1 === steps1.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 786,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode3,\n          beforeCodeTitle: \"Horizontal Linear - Alternative Label\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"section-sub\",\n            children: [\"Labels can be placed below the step icon by setting the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"alternativeLabel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 15\n            }, this), \" property on the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Stepper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 61\n            }, this), \" \", \"component.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes3.root,\n            children: [/*#__PURE__*/_jsxDEV(Stepper, {\n              activeStep: activeStep3,\n              alternativeLabel: true,\n              children: steps3.map(label => /*#__PURE__*/_jsxDEV(Step, {\n                children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 21\n                }, this)\n              }, label, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: activeStep3 === steps3.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes3.instructions,\n                  children: \"All steps completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleReset3,\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 826,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 822,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes3.instructions,\n                  children: getStepContent3(activeStep3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 830,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep3 === 0,\n                    onClick: handleBack3,\n                    className: classes3.backButton,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 834,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext3,\n                    children: activeStep3 === steps3.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 841,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 833,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode5,\n          beforeCodeTitle: \"Horizontal Non Linear - Error Step\",\n          codeBlockHeight: \"400px\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes5.root,\n            children: [/*#__PURE__*/_jsxDEV(Stepper, {\n              activeStep: activeStep5,\n              children: steps5.map((label, index) => {\n                const stepProps = {};\n                const labelProps = {};\n\n                if (isStepOptional5(index)) {\n                  labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"error\",\n                    children: \"Alert message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 867,\n                    columnNumber: 23\n                  }, this);\n                }\n\n                if (isStepFailed5(index)) {\n                  labelProps.error = true;\n                }\n\n                if (isStepSkipped5(index)) {\n                  stepProps.completed = false;\n                }\n\n                return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n                  children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n                    children: label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 880,\n                    columnNumber: 23\n                  }, this)\n                }, label, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 879,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: activeStep5 === steps5.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes5.instructions,\n                  children: \"All steps completed - you're finished\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleReset5,\n                  className: classes5.button,\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes5.instructions,\n                  children: getStepContent5(activeStep5)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep5 === 0,\n                    onClick: handleBack5,\n                    className: classes5.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 901,\n                    columnNumber: 23\n                  }, this), isStepOptional5(activeStep5) && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleSkip5,\n                    className: classes5.button,\n                    children: \"Skip\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 909,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext5,\n                    className: classes5.button,\n                    children: activeStep5 === steps5.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 919,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 900,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode7,\n          beforeCodeTitle: \"Customized Stepper\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Here is an example of customizing the component.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes7.root,\n            children: [/*#__PURE__*/_jsxDEV(Stepper, {\n              activeStep: activeStep7,\n              connector: connector7,\n              children: steps7.map(label => /*#__PURE__*/_jsxDEV(Step, {\n                children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 944,\n                  columnNumber: 21\n                }, this)\n              }, label, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n              alternativeLabel: true,\n              activeStep: activeStep7,\n              connector: connector7,\n              children: steps7.map(label => /*#__PURE__*/_jsxDEV(Step, {\n                children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 955,\n                  columnNumber: 21\n                }, this)\n              }, label, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: activeStep7 === steps7.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes7.instructions,\n                  children: \"All steps completed - you're finished\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 962,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleReset7,\n                  className: classes7.button,\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 965,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes7.instructions,\n                  children: getStepContent7(activeStep7)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 971,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep7 === 0,\n                    onClick: handleBack7,\n                    className: classes7.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 975,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext7,\n                    className: classes7.button,\n                    children: activeStep7 === steps7.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 982,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 974,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode10,\n          beforeCodeTitle: \"Mobile Stepper - Dots\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Use dots when the number of steps isn\\u2019t large.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MobileStepper, {\n            variant: \"dots\",\n            steps: 6,\n            position: \"static\",\n            activeStep: activeStep10,\n            className: classes10.root,\n            nextButton: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: handleNext10,\n              disabled: activeStep10 === 5,\n              children: [\"Next\", theme10.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1020,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 17\n            }, this),\n            backButton: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: handleBack10,\n              disabled: activeStep10 === 0,\n              children: [theme10.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1033,\n                columnNumber: 21\n              }, this), \"Back\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode11,\n          beforeCodeTitle: \"Mobile Stepper - Progress\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Use a progress bar when there are many steps, or if there are steps that need to be inserted during the process (based on responses to earlier steps).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1051,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MobileStepper, {\n            variant: \"progress\",\n            steps: 6,\n            position: \"static\",\n            activeStep: activeStep11,\n            className: classes11.root,\n            nextButton: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: handleNext11,\n              disabled: activeStep11 === 5,\n              children: [\"Next\", theme11.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1066,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1068,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 17\n            }, this),\n            backButton: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: handleBack11,\n              disabled: activeStep11 === 0,\n              children: [theme11.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 21\n              }, this), \"Back\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1073,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1052,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode2,\n          beforeCodeTitle: \"Horizontal Non-linear\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Non-linear steppers allow users to enter a multi-step flow at any point.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1099,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes2.root,\n            children: [/*#__PURE__*/_jsxDEV(Stepper, {\n              nonLinear: true,\n              activeStep: activeStep2,\n              children: steps2.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n                children: /*#__PURE__*/_jsxDEV(StepButton, {\n                  onClick: handleStep2(index),\n                  completed: completed2[index],\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1104,\n                  columnNumber: 21\n                }, this)\n              }, label, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1103,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: allStepsCompleted2() ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes2.instructions,\n                  children: \"All steps completed - you're finished\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1116,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleReset2,\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1119,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes2.instructions,\n                  children: getStepContent2(activeStep2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1123,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep2 === 0,\n                    onClick: handleBack2,\n                    className: classes2.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1127,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext2,\n                    className: classes2.button,\n                    children: \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1134,\n                    columnNumber: 23\n                  }, this), activeStep2 !== steps2.length && (completed2[activeStep2] ? /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    className: classes2.completed,\n                    children: [\"Step \", activeStep2 + 1, \" already completed\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1144,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleComplete2,\n                    children: completedSteps2() === totalSteps2() - 1 ? \"Finish\" : \"Complete Step\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1151,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1126,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode4,\n          beforeCodeTitle: \"Horizontal Non Linear - Alternative Label\",\n          codeBlockHeight: \"400px\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes4.root,\n            children: [/*#__PURE__*/_jsxDEV(Stepper, {\n              alternativeLabel: true,\n              nonLinear: true,\n              activeStep: activeStep4,\n              children: steps4.map((label, index) => {\n                const stepProps = {};\n                const buttonProps = {};\n\n                if (isStepOptional4(index)) {\n                  buttonProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    children: \"Optional\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1180,\n                    columnNumber: 23\n                  }, this);\n                }\n\n                if (isStepSkipped4(index)) {\n                  stepProps.completed = false;\n                }\n\n                return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n                  children: /*#__PURE__*/_jsxDEV(StepButton, {\n                    onClick: handleStep4(index),\n                    completed: isStepComplete4(index),\n                    ...buttonProps,\n                    children: label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1188,\n                    columnNumber: 23\n                  }, this)\n                }, label, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1187,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: allStepsCompleted4() ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes4.instructions,\n                  children: \"All steps completed - you're finished\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1202,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleReset4,\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1205,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1201,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes4.instructions,\n                  children: getStepContent4(activeStep4)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1209,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep4 === 0,\n                    onClick: handleBack4,\n                    className: classes4.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1213,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext4,\n                    className: classes4.button,\n                    children: \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1220,\n                    columnNumber: 23\n                  }, this), isStepOptional4(activeStep4) && !completed4.has(activeStep4) && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleSkip4,\n                    className: classes4.button,\n                    children: \"Skip\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1230,\n                    columnNumber: 27\n                  }, this), activeStep4 !== steps4.length && (completed4.has(activeStep4) ? /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    className: classes4.completed,\n                    children: [\"Step \", activeStep4 + 1, \" already completed\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1242,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleComplete4,\n                    children: completedSteps4() === totalSteps4() - 1 ? \"Finish\" : \"Complete Step\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1249,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1212,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1208,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode6,\n          beforeCodeTitle: \"Vertical Stepper\",\n          codeBlockHeight: \"400px\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes6.root,\n            children: [/*#__PURE__*/_jsxDEV(Stepper, {\n              activeStep: activeStep6,\n              orientation: \"vertical\",\n              children: steps6.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n                children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1275,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    children: getStepContent6(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1277,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes6.actionsContainer,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        disabled: activeStep6 === 0,\n                        onClick: handleBack6,\n                        className: classes6.button,\n                        children: \"Back\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1280,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"contained\",\n                        color: \"primary\",\n                        onClick: handleNext6,\n                        className: classes6.button,\n                        children: activeStep6 === steps6.length - 1 ? \"Finish\" : \"Next\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1287,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1279,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1278,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1276,\n                  columnNumber: 21\n                }, this)]\n              }, label, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1274,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1272,\n              columnNumber: 15\n            }, this), activeStep6 === steps6.length && /*#__PURE__*/_jsxDEV(Paper, {\n              square: true,\n              elevation: 0,\n              className: classes6.resetContainer,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: \"All steps completed - you're finished\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleReset6,\n                className: classes6.button,\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1308,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1304,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode9,\n          beforeCodeTitle: \"Mobile Stepper - Text with Carousel effect\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This demo is very similar to the previous, the difference is the usage of react-swipeable-views to make the transition of steps.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes9.root,\n            children: [/*#__PURE__*/_jsxDEV(Paper, {\n              square: true,\n              elevation: 0,\n              className: classes9.header,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: tutorialSteps9[activeStep9].label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1328,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AutoPlaySwipeableViews9, {\n              axis: theme9.direction === \"rtl\" ? \"x-reverse\" : \"x\",\n              index: activeStep9,\n              onChangeIndex: handleStepChange9,\n              enableMouseEvents: true,\n              children: tutorialSteps9.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: Math.abs(activeStep9 - index) <= 2 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: classes9.img,\n                  src: step.imgPath,\n                  alt: step.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1339,\n                  columnNumber: 23\n                }, this) : null\n              }, step.label, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1337,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MobileStepper, {\n              steps: maxSteps9,\n              position: \"static\",\n              variant: \"text\",\n              activeStep: activeStep9,\n              nextButton: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: handleNext9,\n                disabled: activeStep9 === maxSteps9 - 1,\n                children: [\"Next\", theme9.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1361,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1363,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1354,\n                columnNumber: 19\n              }, this),\n              backButton: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: handleBack9,\n                disabled: activeStep9 === 0,\n                children: [theme9.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1374,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1376,\n                  columnNumber: 23\n                }, this), \"Back\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1368,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1348,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SteppersExamplesPage, \"VtcOJ5fmkwkG05vV58oPDenZExA=\", false, function () {\n  return [useStyles1, useStyles2, useStyles3, useStyles4, useStyles5, useStyles6, useStyles7, useStyles9, useTheme, useStyles10, useTheme, useStyles11, useTheme];\n});\n\n_c2 = SteppersExamplesPage;\nconst jsCode1 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function HorizontalLinearStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  function isStepOptional(step) {\n    return step === 1;\n  }\n\n  function isStepSkipped(step) {\n    return skipped.has(step);\n  }\n\n  function handleNext() {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleSkip() {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              {isStepOptional(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function HorizontalNonLinearStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n  const steps = getSteps();\n\n  function totalSteps() {\n    return steps.length;\n  }\n\n  function completedSteps() {\n    return Object.keys(completed).length;\n  }\n\n  function isLastStep() {\n    return activeStep === totalSteps() - 1;\n  }\n\n  function allStepsCompleted() {\n    return completedSteps() === totalSteps();\n  }\n\n  function handleNext() {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? // It's the last step, but not all steps have been completed,\n          // find the first step that has been completed\n          steps.findIndex((step, i) => !(i in completed))\n        : activeStep + 1;\n    setActiveStep(newActiveStep);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n\n  function handleComplete() {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n    setCompleted({});\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper nonLinear activeStep={activeStep}>\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepButton onClick={handleStep(index)} completed={completed[index]}>\n              {label}\n            </StepButton>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {allStepsCompleted() ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                Next\n              </Button>\n              {activeStep !== steps.length &&\n                (completed[activeStep] ? (\n                  <Typography variant=\"caption\" className={classes.completed}>\n                    Step {activeStep + 1} already completed\n                  </Typography>\n                ) : (\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                  </Button>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n`;\nconst jsCode3 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select master blaster campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return 'Select campaign settings...';\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Uknown stepIndex';\n  }\n}\n\nexport default function HorizontalLabelPositionBelowStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>All steps completed</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n              >\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n`;\nconst jsCode4 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState(new Set());\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  function totalSteps() {\n    return getSteps().length;\n  }\n\n  function isStepOptional(step) {\n    return step === 1;\n  }\n\n  function handleSkip() {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  }\n\n  function skippedSteps() {\n    return skipped.size;\n  }\n\n  function completedSteps() {\n    return completed.size;\n  }\n\n  function allStepsCompleted() {\n    return completedSteps() === totalSteps() - skippedSteps();\n  }\n\n  function isLastStep() {\n    return activeStep === totalSteps() - 1;\n  }\n\n  function handleNext() {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? // It's the last step, but not all steps have been completed\n          // find the first step that has been completed\n          steps.findIndex((step, i) => !completed.has(i))\n        : activeStep + 1;\n\n    setActiveStep(newActiveStep);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n\n  function handleComplete() {\n    const newCompleted = new Set(completed);\n    newCompleted.add(activeStep);\n    setCompleted(newCompleted);\n\n    /**\n     * Sigh... it would be much nicer to replace the following if conditional with\n     * \\`if (!this.allStepsComplete())\\` however state is not set when we do this,\n     * thus we have to resort to not being very DRY.\n     */\n    if (completed.size !== totalSteps() - skippedSteps()) {\n      handleNext();\n    }\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n    setCompleted(new Set());\n    setSkipped(new Set());\n  }\n\n  function isStepSkipped(step) {\n    return skipped.has(step);\n  }\n\n  function isStepComplete(step) {\n    return completed.has(step);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const buttonProps = {};\n          if (isStepOptional(index)) {\n            buttonProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepButton\n                onClick={handleStep(index)}\n                completed={isStepComplete(index)}\n                {...buttonProps}\n              >\n                {label}\n              </StepButton>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {allStepsCompleted() ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                Next\n              </Button>\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n\n              {activeStep !== steps.length &&\n                (completed.has(activeStep) ? (\n                  <Typography variant=\"caption\" className={classes.completed}>\n                    Step {activeStep + 1} already completed\n                  </Typography>\n                ) : (\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                  </Button>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n`;\nconst jsCode5 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function HorizontalNonLinearStepperWithError() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  function isStepOptional(step) {\n    return step === 1;\n  }\n\n  function isStepFailed(step) {\n    return step === 1;\n  }\n\n  function isStepSkipped(step) {\n    return skipped.has(step);\n  }\n\n  function handleNext() {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(skipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleSkip() {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = (\n              <Typography variant=\"caption\" color=\"error\">\n                Alert message\n              </Typography>\n            );\n          }\n          if (isStepFailed(index)) {\n            labelProps.error = true;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              {isStepOptional(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n`;\nconst jsCode6 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return \\`For each ad campaign that you create, you can control how much\n              you're willing to spend on clicks and conversions, which networks\n              and geographical locations you want your ads to show on, and more.\\`;\n    case 1:\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\n    case 2:\n      return \\`Try out different ad text to see what brings in the most customers,\n              and learn how to enhance your ads using features like ad extensions.\n              If you run into any problems with your ads, find out how to tell if\n              they're running and how to resolve approval issues.\\`;\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function VerticalLinearStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                  </Button>\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>All steps completed - you&apos;re finished</Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n}\n`;\nconst jsCode7 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  connectorActive: {\n    '& $connectorLine': {\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n  connectorCompleted: {\n    '& $connectorLine': {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  connectorDisabled: {\n    '& $connectorLine': {\n      borderColor: theme.palette.grey[100],\n    },\n  },\n  connectorLine: {\n    transition: theme.transitions.create('border-color'),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function CustomizedSteppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  const connector = (\n    <StepConnector\n      classes={{\n        active: classes.connectorActive,\n        completed: classes.connectorCompleted,\n        disabled: classes.connectorDisabled,\n        line: classes.connectorLine,\n      }}\n    />\n  );\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} connector={connector}>\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <Stepper alternativeLabel activeStep={activeStep} connector={connector}>\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n`;\nconst jsCode9 = `\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst tutorialSteps = [\n  {\n    label: 'San Francisco – Oakland Bay Bridge, United States',\n    imgPath:\n      'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\n  },\n  {\n    label: 'Bird',\n    imgPath:\n      'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\n  },\n  {\n    label: 'Bali, Indonesia',\n    imgPath:\n      'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\n  },\n  {\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\n    imgPath:\n      'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\n  },\n  {\n    label: 'Goč, Serbia',\n    imgPath:\n      'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 400,\n    flexGrow: 1,\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default,\n  },\n  img: {\n    height: 255,\n    display: 'block',\n    maxWidth: 400,\n    overflow: 'hidden',\n    width: '100%',\n  },\n}));\n\nfunction SwipeableTextMobileStepper() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const maxSteps = tutorialSteps.length;\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleStepChange(step) {\n    setActiveStep(step);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper square elevation={0} className={classes.header}>\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\n      </Paper>\n      <AutoPlaySwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {tutorialSteps.map((step, index) => (\n          <div key={step.label}>\n            {Math.abs(activeStep - index) <= 2 ? (\n              <img className={classes.img} src={step.imgPath} alt={step.label} />\n            ) : null}\n          </div>\n        ))}\n      </AutoPlaySwipeableViews>\n      <MobileStepper\n        steps={maxSteps}\n        position=\"static\"\n        variant=\"text\"\n        activeStep={activeStep}\n        nextButton={\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n            Next\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </Button>\n        }\n        backButton={\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            Back\n          </Button>\n        }\n      />\n    </div>\n  );\n}\n\nexport default SwipeableTextMobileStepper;\n`;\nconst jsCode10 = `\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400,\n    flexGrow: 1,\n  },\n});\n\nexport default function DotsMobileStepper() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  return (\n    <MobileStepper\n      variant=\"dots\"\n      steps={6}\n      position=\"static\"\n      activeStep={activeStep}\n      className={classes.root}\n      nextButton={\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === 5}>\n          Next\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </Button>\n      }\n      backButton={\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n          Back\n        </Button>\n      }\n    />\n  );\n}\n`;\nconst jsCode11 = `\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400,\n    flexGrow: 1,\n  },\n});\n\nexport default function ProgressMobileStepper() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  return (\n    <MobileStepper\n      variant=\"progress\"\n      steps={6}\n      position=\"static\"\n      activeStep={activeStep}\n      className={classes.root}\n      nextButton={\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === 5}>\n          Next\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </Button>\n      }\n      backButton={\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n          Back\n        </Button>\n      }\n    />\n  );\n}\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AutoPlaySwipeableViews9\");\n$RefreshReg$(_c2, \"SteppersExamplesPage\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/GoogleMaterialExamples/navigation/SteppersExamplesPage.js"],"names":["React","makeStyles","useTheme","Stepper","Typography","Step","StepLabel","Button","StepButton","StepContent","Paper","StepConnector","MobileStepper","KeyboardArrowLeft","KeyboardArrowRight","autoPlay","SwipeableViews","Notice","KTCodeExample","useStyles1","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps1","getStepContent1","step","useStyles2","completed","display","getSteps2","getStepContent2","useStyles3","backButton","getSteps3","getStepContent3","stepIndex","useStyles4","getSteps4","getStepContent4","useStyles5","getSteps5","getStepContent5","useStyles6","actionsContainer","resetContainer","padding","getSteps6","getStepContent6","useStyles7","connectorActive","borderColor","palette","secondary","main","connectorCompleted","primary","connectorDisabled","grey","connectorLine","transition","transitions","create","getSteps7","getStepContent7","AutoPlaySwipeableViews9","tutorialSteps9","label","imgPath","useStyles9","maxWidth","flexGrow","header","alignItems","height","paddingLeft","backgroundColor","background","default","img","overflow","useStyles10","useStyles11","SteppersExamplesPage","classes1","activeStep1","setActiveStep1","useState","skipped1","setSkipped1","Set","steps1","isStepOptional1","isStepSkipped1","has","handleNext1","newSkipped","values","delete","prevActiveStep","handleBack1","handleSkip1","Error","prevSkipped","add","handleReset1","classes2","activeStep2","setActiveStep2","completed2","setCompleted2","steps2","totalSteps2","length","completedSteps2","Object","keys","isLastStep2","allStepsCompleted2","handleNext2","newActiveStep","findIndex","i","handleBack2","handleStep2","handleComplete2","newCompleted2","handleReset2","classes3","activeStep3","setActiveStep3","steps3","handleNext3","handleBack3","handleReset3","classes4","activeStep4","setActiveStep4","completed4","setCompleted4","skipped4","setSkipped4","steps4","totalSteps4","isStepOptional4","handleSkip4","skippedSteps4","size","completedSteps4","allStepsCompleted4","isLastStep4","handleNext4","handleBack4","handleStep4","handleComplete4","newCompleted","handleReset4","isStepSkipped4","isStepComplete4","classes5","activeStep5","setActiveStep5","skipped5","setSkipped5","steps5","isStepOptional5","isStepFailed5","isStepSkipped5","handleNext5","handleBack5","handleSkip5","handleReset5","classes6","activeStep6","setActiveStep6","steps6","handleNext6","handleBack6","handleReset6","classes7","activeStep7","setActiveStep7","steps7","handleNext7","handleBack7","handleReset7","connector7","active","disabled","line","classes9","theme9","activeStep9","setActiveStep9","maxSteps9","handleNext9","handleBack9","handleStepChange9","classes10","theme10","activeStep10","setActiveStep10","handleNext10","handleBack10","classes11","theme11","activeStep11","setActiveStep11","handleNext11","handleBack11","jsCode1","map","index","stepProps1","labelProps1","optional","jsCode3","jsCode5","stepProps","labelProps","error","jsCode7","jsCode10","direction","jsCode11","jsCode2","jsCode4","buttonProps","jsCode6","jsCode9","Math","abs"],"mappings":"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BJ;AAAA;AAAA;AAAA;AAAA,oBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnOF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBADF;AAkrBD;;GAnhCuB5I,oB;UAELrE,U,EAgDAa,U,EAoDAK,U,EAiBAK,U,EA8FAG,U,EAoDAG,U,EAiBAM,U,EA4BAoB,U,EACFxE,Q,EAiBGoF,W,EACFpF,Q,EAYEqF,W,EACFrF,Q;;;MAtVMsF,oB;AAqhCxB,MAAM+H,OAAO,GAAI;AACjrJA;AAsJA,MAAMe,OAAO,GAAI;AACjjJA;AAkJA,MAAMT,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5FA;AA6FA,MAAMU,OAAO,GAAI;AACjvNA;AAwNA,MAAMT,OAAO,GAAI;AACjhKA;AAiKA,MAAMW,OAAO,GAAI;AACjjtIA;AAwIA,MAAMQ,OAAO,GAAI;AACjlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlDA;AAmDA,MAAME,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlDA","sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {\r\n  Stepper,\r\n  Typography,\r\n  Step,\r\n  StepLabel,\r\n  Button,\r\n  StepButton,\r\n  StepContent,\r\n  Paper,\r\n  StepConnector,\r\n  MobileStepper\r\n} from \"@material-ui/core\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport {autoPlay} from \"react-swipeable-views-utils\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps1() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent1(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Select campaign settings...\";\r\n    case 1:\r\n      return \"What is an ad group anyways?\";\r\n    case 2:\r\n      return \"This is the bit I really care about!\";\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  completed: {\r\n    display: \"inline-block\"\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps2() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent2(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Step 1: Select campaign settings...\";\r\n    case 1:\r\n      return \"Step 2: What is an ad group anyways?\";\r\n    case 2:\r\n      return \"Step 3: This is the bit I really care about!\";\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps3() {\r\n  return [\r\n    \"Select master blaster campaign settings\",\r\n    \"Create an ad group\",\r\n    \"Create an ad\"\r\n  ];\r\n}\r\n\r\nfunction getStepContent3(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return \"Select campaign settings...\";\r\n    case 1:\r\n      return \"What is an ad group anyways?\";\r\n    case 2:\r\n      return \"This is the bit I really care about!\";\r\n    default:\r\n      return \"Uknown stepIndex\";\r\n  }\r\n}\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  completed: {\r\n    display: \"inline-block\"\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps4() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent4(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Step 1: Select campaign settings...\";\r\n    case 1:\r\n      return \"Step 2: What is an ad group anyways?\";\r\n    case 2:\r\n      return \"Step 3: This is the bit I really care about!\";\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps5() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent5(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Select campaign settings...\";\r\n    case 1:\r\n      return \"What is an ad group anyways?\";\r\n    case 2:\r\n      return \"This is the bit I really care about!\";\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction getSteps6() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent6(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `For each ad campaign that you create, you can control how much\r\n              you're willing to spend on clicks and conversions, which networks\r\n              and geographical locations you want your ads to show on, and more.`;\r\n    case 1:\r\n      return \"An ad group contains one or more ads which target a shared set of keywords.\";\r\n    case 2:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\n// Example 7\r\nconst useStyles7 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  connectorActive: {\r\n    \"& $connectorLine\": {\r\n      borderColor: theme.palette.secondary.main\r\n    }\r\n  },\r\n  connectorCompleted: {\r\n    \"& $connectorLine\": {\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  },\r\n  connectorDisabled: {\r\n    \"& $connectorLine\": {\r\n      borderColor: theme.palette.grey[100]\r\n    }\r\n  },\r\n  connectorLine: {\r\n    transition: theme.transitions.create(\"border-color\")\r\n  }\r\n}));\r\n\r\nfunction getSteps7() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent7(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Select campaign settings...\";\r\n    case 1:\r\n      return \"What is an ad group anyways?\";\r\n    case 2:\r\n      return \"This is the bit I really care about!\";\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n// Example 9\r\nconst AutoPlaySwipeableViews9 = autoPlay(SwipeableViews);\r\n\r\nconst tutorialSteps9 = [\r\n  {\r\n    label: \"San Francisco – Oakland Bay Bridge, United States\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60\"\r\n  },\r\n  {\r\n    label: \"Bird\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60\"\r\n  },\r\n  {\r\n    label: \"Bali, Indonesia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80\"\r\n  },\r\n  {\r\n    label: \"NeONBRAND Digital Marketing, Las Vegas, United States\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60\"\r\n  },\r\n  {\r\n    label: \"Goč, Serbia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60\"\r\n  }\r\n];\r\n\r\nconst useStyles9 = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  img: {\r\n    height: 255,\r\n    display: \"block\",\r\n    maxWidth: 400,\r\n    overflow: \"hidden\",\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\n// Example 10\r\nconst useStyles10 = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 11\r\nconst useStyles11 = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\nexport default function SteppersExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [activeStep1, setActiveStep1] = React.useState(0);\r\n  const [skipped1, setSkipped1] = React.useState(new Set());\r\n  const steps1 = getSteps1();\r\n\r\n  function isStepOptional1(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepSkipped1(step) {\r\n    return skipped1.has(step);\r\n  }\r\n\r\n  function handleNext1() {\r\n    let newSkipped = skipped1;\r\n    if (isStepSkipped1(activeStep1)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep1);\r\n    }\r\n\r\n    setActiveStep1(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped1(newSkipped);\r\n  }\r\n\r\n  function handleBack1() {\r\n    setActiveStep1(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleSkip1() {\r\n    if (!isStepOptional1(activeStep1)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep1(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped1(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep1);\r\n      return newSkipped;\r\n    });\r\n  }\r\n\r\n  function handleReset1() {\r\n    setActiveStep1(0);\r\n  }\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [activeStep2, setActiveStep2] = React.useState(0);\r\n  const [completed2, setCompleted2] = React.useState({});\r\n  const steps2 = getSteps2();\r\n\r\n  function totalSteps2() {\r\n    return steps2.length;\r\n  }\r\n\r\n  function completedSteps2() {\r\n    return Object.keys(completed2).length;\r\n  }\r\n\r\n  function isLastStep2() {\r\n    return activeStep2 === totalSteps2() - 1;\r\n  }\r\n\r\n  function allStepsCompleted2() {\r\n    return completedSteps2() === totalSteps2();\r\n  }\r\n\r\n  function handleNext2() {\r\n    const newActiveStep =\r\n      isLastStep2() && !allStepsCompleted2()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps2.findIndex((step, i) => !(i in completed2))\r\n        : activeStep2 + 1;\r\n    setActiveStep2(newActiveStep);\r\n  }\r\n\r\n  function handleBack2() {\r\n    setActiveStep2(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  const handleStep2 = step => () => {\r\n    setActiveStep2(step);\r\n  };\r\n\r\n  function handleComplete2() {\r\n    const newCompleted2 = completed2;\r\n    newCompleted2[activeStep2] = true;\r\n    setCompleted2(newCompleted2);\r\n    handleNext2();\r\n  }\r\n\r\n  function handleReset2() {\r\n    setActiveStep2(0);\r\n    setCompleted2({});\r\n  }\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [activeStep3, setActiveStep3] = React.useState(0);\r\n  const steps3 = getSteps3();\r\n\r\n  function handleNext3() {\r\n    setActiveStep3(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack3() {\r\n    setActiveStep3(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset3() {\r\n    setActiveStep3(0);\r\n  }\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n  const [activeStep4, setActiveStep4] = React.useState(0);\r\n  const [completed4, setCompleted4] = React.useState(new Set());\r\n  const [skipped4, setSkipped4] = React.useState(new Set());\r\n  const steps4 = getSteps4();\r\n\r\n  function totalSteps4() {\r\n    return getSteps4().length;\r\n  }\r\n\r\n  function isStepOptional4(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function handleSkip4() {\r\n    if (!isStepOptional4(activeStep4)) {\r\n      // You probably want to guard against something like this\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep4(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped4(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep4);\r\n      return newSkipped;\r\n    });\r\n  }\r\n\r\n  function skippedSteps4() {\r\n    return skipped4.size;\r\n  }\r\n\r\n  function completedSteps4() {\r\n    return completed4.size;\r\n  }\r\n\r\n  function allStepsCompleted4() {\r\n    return completedSteps4() === totalSteps4() - skippedSteps4();\r\n  }\r\n\r\n  function isLastStep4() {\r\n    return activeStep4 === totalSteps4() - 1;\r\n  }\r\n\r\n  function handleNext4() {\r\n    const newActiveStep =\r\n      isLastStep4() && !allStepsCompleted4()\r\n        ? // It's the last step, but not all steps have been completed\r\n          // find the first step that has been completed\r\n          steps4.findIndex((step, i) => !completed4.has(i))\r\n        : activeStep4 + 1;\r\n\r\n    setActiveStep4(newActiveStep);\r\n  }\r\n\r\n  function handleBack4() {\r\n    setActiveStep4(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  const handleStep4 = step => () => {\r\n    setActiveStep4(step);\r\n  };\r\n\r\n  function handleComplete4() {\r\n    const newCompleted = new Set(completed4);\r\n    newCompleted.add(activeStep4);\r\n    setCompleted4(newCompleted);\r\n\r\n    /**\r\n     * Sigh... it would be much nicer to replace the following if conditional with\r\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\r\n     * thus we have to resort to not being very DRY.\r\n     */\r\n    if (completed4.size !== totalSteps4() - skippedSteps4()) {\r\n      handleNext4();\r\n    }\r\n  }\r\n\r\n  function handleReset4() {\r\n    setActiveStep4(0);\r\n    setCompleted4(new Set());\r\n    setSkipped4(new Set());\r\n  }\r\n\r\n  function isStepSkipped4(step) {\r\n    return skipped4.has(step);\r\n  }\r\n\r\n  function isStepComplete4(step) {\r\n    return completed4.has(step);\r\n  }\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n  const [activeStep5, setActiveStep5] = React.useState(0);\r\n  const [skipped5, setSkipped5] = React.useState(new Set());\r\n  const steps5 = getSteps5();\r\n\r\n  function isStepOptional5(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepFailed5(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepSkipped5(step) {\r\n    return skipped5.has(step);\r\n  }\r\n\r\n  function handleNext5() {\r\n    let newSkipped = skipped5;\r\n    if (isStepSkipped5(activeStep5)) {\r\n      newSkipped = new Set(skipped5.values());\r\n      newSkipped.delete(activeStep5);\r\n    }\r\n\r\n    setActiveStep5(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped5(newSkipped);\r\n  }\r\n\r\n  function handleBack5() {\r\n    setActiveStep5(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleSkip5() {\r\n    if (!isStepOptional5(activeStep5)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setSkipped5(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep5);\r\n      return newSkipped;\r\n    });\r\n    setActiveStep5(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleReset5() {\r\n    setActiveStep5(0);\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n  const [activeStep6, setActiveStep6] = React.useState(0);\r\n  const steps6 = getSteps6();\r\n\r\n  function handleNext6() {\r\n    setActiveStep6(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack6() {\r\n    setActiveStep6(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset6() {\r\n    setActiveStep6(0);\r\n  }\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n  const [activeStep7, setActiveStep7] = React.useState(0);\r\n  const steps7 = getSteps7();\r\n\r\n  function handleNext7() {\r\n    setActiveStep7(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack7() {\r\n    setActiveStep7(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset7() {\r\n    setActiveStep7(0);\r\n  }\r\n\r\n  const connector7 = (\r\n    <StepConnector\r\n      classes={{\r\n        active: classes7.connectorActive,\r\n        completed: classes7.connectorCompleted,\r\n        disabled: classes7.connectorDisabled,\r\n        line: classes7.connectorLine\r\n      }}\r\n    />\r\n  );\r\n\r\n  // Example 9\r\n  const classes9 = useStyles9();\r\n  const theme9 = useTheme();\r\n  const [activeStep9, setActiveStep9] = React.useState(0);\r\n  const maxSteps9 = tutorialSteps9.length;\r\n\r\n  function handleNext9() {\r\n    setActiveStep9(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack9() {\r\n    setActiveStep9(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleStepChange9(step) {\r\n    setActiveStep9(step);\r\n  }\r\n\r\n  // Example 10\r\n  const classes10 = useStyles10();\r\n  const theme10 = useTheme();\r\n  const [activeStep10, setActiveStep10] = React.useState(0);\r\n\r\n  function handleNext10() {\r\n    setActiveStep10(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack10() {\r\n    setActiveStep10(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  // Example 11\r\n  const classes11 = useStyles11();\r\n  const theme11 = useTheme();\r\n  const [activeStep11, setActiveStep11] = React.useState(0);\r\n\r\n  function handleNext11() {\r\n    setActiveStep11(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack11() {\r\n    setActiveStep11(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Steppers convey progress through numbered steps. It provides a\r\n          wizard-like workflow.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/steppers/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Horizontal Linear\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The <code>Stepper</code> can be controlled by passing the current\r\n              step index (zero-based) as the <code>activeStep</code> property.\r\n              <code>Stepper</code> orientation is set using the{\" \"}\r\n              <code>orientation</code> property.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes1.root}>\r\n              <Stepper activeStep={activeStep1}>\r\n                {steps1.map((label, index) => {\r\n                  const stepProps1 = {};\r\n                  const labelProps1 = {};\r\n                  if (isStepOptional1(index)) {\r\n                    labelProps1.optional = (\r\n                      <Typography variant=\"caption\">Optional</Typography>\r\n                    );\r\n                  }\r\n                  if (isStepSkipped1(index)) {\r\n                    stepProps1.completed = false;\r\n                  }\r\n                  return (\r\n                    <Step key={label} {...stepProps1}>\r\n                      <StepLabel {...labelProps1}>{label}</StepLabel>\r\n                    </Step>\r\n                  );\r\n                })}\r\n              </Stepper>\r\n              <div>\r\n                {activeStep1 === steps1.length ? (\r\n                  <div>\r\n                    <Typography className={classes1.instructions}>\r\n                      All steps completed - you&apos;re finished\r\n                    </Typography>\r\n                    <Button onClick={handleReset1} className={classes1.button}>\r\n                      Reset\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes1.instructions}>\r\n                      {getStepContent1(activeStep1)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep1 === 0}\r\n                        onClick={handleBack1}\r\n                        className={classes1.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      {isStepOptional1(activeStep1) && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={handleSkip1}\r\n                          className={classes1.button}\r\n                        >\r\n                          Skip\r\n                        </Button>\r\n                      )}\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext1}\r\n                        className={classes1.button}\r\n                      >\r\n                        {activeStep1 === steps1.length - 1 ? \"Finish\" : \"Next\"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Horizontal Linear - Alternative Label\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span className=\"section-sub\">\r\n              Labels can be placed below the step icon by setting the{\" \"}\r\n              <code>alternativeLabel</code> property on the <code>Stepper</code>{\" \"}\r\n              component.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes3.root}>\r\n              <Stepper activeStep={activeStep3} alternativeLabel>\r\n                {steps3.map(label => (\r\n                  <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              <div>\r\n                {activeStep3 === steps3.length ? (\r\n                  <div>\r\n                    <Typography className={classes3.instructions}>\r\n                      All steps completed\r\n                    </Typography>\r\n                    <Button onClick={handleReset3}>Reset</Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes3.instructions}>\r\n                      {getStepContent3(activeStep3)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep3 === 0}\r\n                        onClick={handleBack3}\r\n                        className={classes3.backButton}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext3}\r\n                      >\r\n                        {activeStep3 === steps3.length - 1 ? \"Finish\" : \"Next\"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Horizontal Non Linear - Error Step\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes5.root}>\r\n              <Stepper activeStep={activeStep5}>\r\n                {steps5.map((label, index) => {\r\n                  const stepProps = {};\r\n                  const labelProps = {};\r\n                  if (isStepOptional5(index)) {\r\n                    labelProps.optional = (\r\n                      <Typography variant=\"caption\" color=\"error\">\r\n                        Alert message\r\n                      </Typography>\r\n                    );\r\n                  }\r\n                  if (isStepFailed5(index)) {\r\n                    labelProps.error = true;\r\n                  }\r\n                  if (isStepSkipped5(index)) {\r\n                    stepProps.completed = false;\r\n                  }\r\n                  return (\r\n                    <Step key={label} {...stepProps}>\r\n                      <StepLabel {...labelProps}>{label}</StepLabel>\r\n                    </Step>\r\n                  );\r\n                })}\r\n              </Stepper>\r\n              <div>\r\n                {activeStep5 === steps5.length ? (\r\n                  <div>\r\n                    <Typography className={classes5.instructions}>\r\n                      All steps completed - you&apos;re finished\r\n                    </Typography>\r\n                    <Button onClick={handleReset5} className={classes5.button}>\r\n                      Reset\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes5.instructions}>\r\n                      {getStepContent5(activeStep5)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep5 === 0}\r\n                        onClick={handleBack5}\r\n                        className={classes5.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      {isStepOptional5(activeStep5) && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={handleSkip5}\r\n                          className={classes5.button}\r\n                        >\r\n                          Skip\r\n                        </Button>\r\n                      )}\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext5}\r\n                        className={classes5.button}\r\n                      >\r\n                        {activeStep5 === steps5.length - 1 ? \"Finish\" : \"Next\"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode7}\r\n            beforeCodeTitle=\"Customized Stepper\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className={classes7.root}>\r\n              <Stepper activeStep={activeStep7} connector={connector7}>\r\n                {steps7.map(label => (\r\n                  <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              <Stepper\r\n                alternativeLabel\r\n                activeStep={activeStep7}\r\n                connector={connector7}\r\n              >\r\n                {steps7.map(label => (\r\n                  <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              <div>\r\n                {activeStep7 === steps7.length ? (\r\n                  <div>\r\n                    <Typography className={classes7.instructions}>\r\n                      All steps completed - you&apos;re finished\r\n                    </Typography>\r\n                    <Button onClick={handleReset7} className={classes7.button}>\r\n                      Reset\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes7.instructions}>\r\n                      {getStepContent7(activeStep7)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep7 === 0}\r\n                        onClick={handleBack7}\r\n                        className={classes7.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext7}\r\n                        className={classes7.button}\r\n                      >\r\n                        {activeStep7 === steps7.length - 1 ? \"Finish\" : \"Next\"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode10}\r\n            beforeCodeTitle=\"Mobile Stepper - Dots\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Use dots when the number of steps isn’t large.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <MobileStepper\r\n              variant=\"dots\"\r\n              steps={6}\r\n              position=\"static\"\r\n              activeStep={activeStep10}\r\n              className={classes10.root}\r\n              nextButton={\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={handleNext10}\r\n                  disabled={activeStep10 === 5}\r\n                >\r\n                  Next\r\n                  {theme10.direction === \"rtl\" ? (\r\n                    <KeyboardArrowLeft />\r\n                  ) : (\r\n                    <KeyboardArrowRight />\r\n                  )}\r\n                </Button>\r\n              }\r\n              backButton={\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={handleBack10}\r\n                  disabled={activeStep10 === 0}\r\n                >\r\n                  {theme10.direction === \"rtl\" ? (\r\n                    <KeyboardArrowRight />\r\n                  ) : (\r\n                    <KeyboardArrowLeft />\r\n                  )}\r\n                  Back\r\n                </Button>\r\n              }\r\n            />\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode11}\r\n            beforeCodeTitle=\"Mobile Stepper - Progress\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Use a progress bar when there are many steps, or if there are\r\n              steps that need to be inserted during the process (based on\r\n              responses to earlier steps).\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <MobileStepper\r\n              variant=\"progress\"\r\n              steps={6}\r\n              position=\"static\"\r\n              activeStep={activeStep11}\r\n              className={classes11.root}\r\n              nextButton={\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={handleNext11}\r\n                  disabled={activeStep11 === 5}\r\n                >\r\n                  Next\r\n                  {theme11.direction === \"rtl\" ? (\r\n                    <KeyboardArrowLeft />\r\n                  ) : (\r\n                    <KeyboardArrowRight />\r\n                  )}\r\n                </Button>\r\n              }\r\n              backButton={\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={handleBack11}\r\n                  disabled={activeStep11 === 0}\r\n                >\r\n                  {theme11.direction === \"rtl\" ? (\r\n                    <KeyboardArrowRight />\r\n                  ) : (\r\n                    <KeyboardArrowLeft />\r\n                  )}\r\n                  Back\r\n                </Button>\r\n              }\r\n            />\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Horizontal Non-linear\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Non-linear steppers allow users to enter a multi-step flow at any\r\n              point.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <Stepper nonLinear activeStep={activeStep2}>\r\n                {steps2.map((label, index) => (\r\n                  <Step key={label}>\r\n                    <StepButton\r\n                      onClick={handleStep2(index)}\r\n                      completed={completed2[index]}\r\n                    >\r\n                      {label}\r\n                    </StepButton>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              <div>\r\n                {allStepsCompleted2() ? (\r\n                  <div>\r\n                    <Typography className={classes2.instructions}>\r\n                      All steps completed - you&apos;re finished\r\n                    </Typography>\r\n                    <Button onClick={handleReset2}>Reset</Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes2.instructions}>\r\n                      {getStepContent2(activeStep2)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep2 === 0}\r\n                        onClick={handleBack2}\r\n                        className={classes2.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext2}\r\n                        className={classes2.button}\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                      {activeStep2 !== steps2.length &&\r\n                        (completed2[activeStep2] ? (\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            className={classes2.completed}\r\n                          >\r\n                            Step {activeStep2 + 1} already completed\r\n                          </Typography>\r\n                        ) : (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleComplete2}\r\n                          >\r\n                            {completedSteps2() === totalSteps2() - 1\r\n                              ? \"Finish\"\r\n                              : \"Complete Step\"}\r\n                          </Button>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Horizontal Non Linear - Alternative Label\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes4.root}>\r\n              <Stepper alternativeLabel nonLinear activeStep={activeStep4}>\r\n                {steps4.map((label, index) => {\r\n                  const stepProps = {};\r\n                  const buttonProps = {};\r\n                  if (isStepOptional4(index)) {\r\n                    buttonProps.optional = (\r\n                      <Typography variant=\"caption\">Optional</Typography>\r\n                    );\r\n                  }\r\n                  if (isStepSkipped4(index)) {\r\n                    stepProps.completed = false;\r\n                  }\r\n                  return (\r\n                    <Step key={label} {...stepProps}>\r\n                      <StepButton\r\n                        onClick={handleStep4(index)}\r\n                        completed={isStepComplete4(index)}\r\n                        {...buttonProps}\r\n                      >\r\n                        {label}\r\n                      </StepButton>\r\n                    </Step>\r\n                  );\r\n                })}\r\n              </Stepper>\r\n              <div>\r\n                {allStepsCompleted4() ? (\r\n                  <div>\r\n                    <Typography className={classes4.instructions}>\r\n                      All steps completed - you&apos;re finished\r\n                    </Typography>\r\n                    <Button onClick={handleReset4}>Reset</Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes4.instructions}>\r\n                      {getStepContent4(activeStep4)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep4 === 0}\r\n                        onClick={handleBack4}\r\n                        className={classes4.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext4}\r\n                        className={classes4.button}\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                      {isStepOptional4(activeStep4) &&\r\n                        !completed4.has(activeStep4) && (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleSkip4}\r\n                            className={classes4.button}\r\n                          >\r\n                            Skip\r\n                          </Button>\r\n                        )}\r\n\r\n                      {activeStep4 !== steps4.length &&\r\n                        (completed4.has(activeStep4) ? (\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            className={classes4.completed}\r\n                          >\r\n                            Step {activeStep4 + 1} already completed\r\n                          </Typography>\r\n                        ) : (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleComplete4}\r\n                          >\r\n                            {completedSteps4() === totalSteps4() - 1\r\n                              ? \"Finish\"\r\n                              : \"Complete Step\"}\r\n                          </Button>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Vertical Stepper\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes6.root}>\r\n              <Stepper activeStep={activeStep6} orientation=\"vertical\">\r\n                {steps6.map((label, index) => (\r\n                  <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                    <StepContent>\r\n                      <Typography>{getStepContent6(index)}</Typography>\r\n                      <div className={classes6.actionsContainer}>\r\n                        <div>\r\n                          <Button\r\n                            disabled={activeStep6 === 0}\r\n                            onClick={handleBack6}\r\n                            className={classes6.button}\r\n                          >\r\n                            Back\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleNext6}\r\n                            className={classes6.button}\r\n                          >\r\n                            {activeStep6 === steps6.length - 1\r\n                              ? \"Finish\"\r\n                              : \"Next\"}\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </StepContent>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              {activeStep6 === steps6.length && (\r\n                <Paper square elevation={0} className={classes6.resetContainer}>\r\n                  <Typography>\r\n                    All steps completed - you&apos;re finished\r\n                  </Typography>\r\n                  <Button onClick={handleReset6} className={classes6.button}>\r\n                    Reset\r\n                  </Button>\r\n                </Paper>\r\n              )}\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode9}\r\n            beforeCodeTitle=\"Mobile Stepper - Text with Carousel effect\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              This demo is very similar to the previous, the difference is the\r\n              usage of react-swipeable-views to make the transition of steps.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes9.root}>\r\n              <Paper square elevation={0} className={classes9.header}>\r\n                <Typography>{tutorialSteps9[activeStep9].label}</Typography>\r\n              </Paper>\r\n              <AutoPlaySwipeableViews9\r\n                axis={theme9.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n                index={activeStep9}\r\n                onChangeIndex={handleStepChange9}\r\n                enableMouseEvents\r\n              >\r\n                {tutorialSteps9.map((step, index) => (\r\n                  <div key={step.label}>\r\n                    {Math.abs(activeStep9 - index) <= 2 ? (\r\n                      <img\r\n                        className={classes9.img}\r\n                        src={step.imgPath}\r\n                        alt={step.label}\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n                ))}\r\n              </AutoPlaySwipeableViews9>\r\n              <MobileStepper\r\n                steps={maxSteps9}\r\n                position=\"static\"\r\n                variant=\"text\"\r\n                activeStep={activeStep9}\r\n                nextButton={\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={handleNext9}\r\n                    disabled={activeStep9 === maxSteps9 - 1}\r\n                  >\r\n                    Next\r\n                    {theme9.direction === \"rtl\" ? (\r\n                      <KeyboardArrowLeft />\r\n                    ) : (\r\n                      <KeyboardArrowRight />\r\n                    )}\r\n                  </Button>\r\n                }\r\n                backButton={\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={handleBack9}\r\n                    disabled={activeStep9 === 0}\r\n                  >\r\n                    {theme9.direction === \"rtl\" ? (\r\n                      <KeyboardArrowRight />\r\n                    ) : (\r\n                      <KeyboardArrowLeft />\r\n                    )}\r\n                    Back\r\n                  </Button>\r\n                }\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  function isStepOptional(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepSkipped(step) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function handleNext() {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleSkip() {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Step 1: Select campaign settings...';\r\n    case 1:\r\n      return 'Step 2: What is an ad group anyways?';\r\n    case 2:\r\n      return 'Step 3: This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n  const steps = getSteps();\r\n\r\n  function totalSteps() {\r\n    return steps.length;\r\n  }\r\n\r\n  function completedSteps() {\r\n    return Object.keys(completed).length;\r\n  }\r\n\r\n  function isLastStep() {\r\n    return activeStep === totalSteps() - 1;\r\n  }\r\n\r\n  function allStepsCompleted() {\r\n    return completedSteps() === totalSteps();\r\n  }\r\n\r\n  function handleNext() {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  const handleStep = step => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  function handleComplete() {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepButton onClick={handleStep(index)} completed={completed[index]}>\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n              {activeStep !== steps.length &&\r\n                (completed[activeStep] ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select master blaster campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Uknown stepIndex';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>All steps completed</Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Step 1: Select campaign settings...';\r\n    case 1:\r\n      return 'Step 2: What is an ad group anyways?';\r\n    case 2:\r\n      return 'Step 3: This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState(new Set());\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  function totalSteps() {\r\n    return getSteps().length;\r\n  }\r\n\r\n  function isStepOptional(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function handleSkip() {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  }\r\n\r\n  function skippedSteps() {\r\n    return skipped.size;\r\n  }\r\n\r\n  function completedSteps() {\r\n    return completed.size;\r\n  }\r\n\r\n  function allStepsCompleted() {\r\n    return completedSteps() === totalSteps() - skippedSteps();\r\n  }\r\n\r\n  function isLastStep() {\r\n    return activeStep === totalSteps() - 1;\r\n  }\r\n\r\n  function handleNext() {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !completed.has(i))\r\n        : activeStep + 1;\r\n\r\n    setActiveStep(newActiveStep);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  const handleStep = step => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  function handleComplete() {\r\n    const newCompleted = new Set(completed);\r\n    newCompleted.add(activeStep);\r\n    setCompleted(newCompleted);\r\n\r\n    /**\r\n     * Sigh... it would be much nicer to replace the following if conditional with\r\n     * \\`if (!this.allStepsComplete())\\` however state is not set when we do this,\r\n     * thus we have to resort to not being very DRY.\r\n     */\r\n    if (completed.size !== totalSteps() - skippedSteps()) {\r\n      handleNext();\r\n    }\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n    setCompleted(new Set());\r\n    setSkipped(new Set());\r\n  }\r\n\r\n  function isStepSkipped(step) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function isStepComplete(step) {\r\n    return completed.has(step);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const buttonProps = {};\r\n          if (isStepOptional(index)) {\r\n            buttonProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepButton\r\n                onClick={handleStep(index)}\r\n                completed={isStepComplete(index)}\r\n                {...buttonProps}\r\n              >\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              {activeStep !== steps.length &&\r\n                (completed.has(activeStep) ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearStepperWithError() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  function isStepOptional(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepFailed(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepSkipped(step) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function handleNext() {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(skipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleSkip() {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setSkipped(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant=\"caption\" color=\"error\">\r\n                Alert message\r\n              </Typography>\r\n            );\r\n          }\r\n          if (isStepFailed(index)) {\r\n            labelProps.error = true;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \\`For each ad campaign that you create, you can control how much\r\n              you're willing to spend on clicks and conversions, which networks\r\n              and geographical locations you want your ads to show on, and more.\\`;\r\n    case 1:\r\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\r\n    case 2:\r\n      return \\`Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.\\`;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function VerticalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              <Typography>{getStepContent(index)}</Typography>\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                    disabled={activeStep === 0}\r\n                    onClick={handleBack}\r\n                    className={classes.button}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} className={classes.resetContainer}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n          <Button onClick={handleReset} className={classes.button}>\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  connectorActive: {\r\n    '& $connectorLine': {\r\n      borderColor: theme.palette.secondary.main,\r\n    },\r\n  },\r\n  connectorCompleted: {\r\n    '& $connectorLine': {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  connectorDisabled: {\r\n    '& $connectorLine': {\r\n      borderColor: theme.palette.grey[100],\r\n    },\r\n  },\r\n  connectorLine: {\r\n    transition: theme.transitions.create('border-color'),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function CustomizedSteppers() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  const connector = (\r\n    <StepConnector\r\n      classes={{\r\n        active: classes.connectorActive,\r\n        completed: classes.connectorCompleted,\r\n        disabled: classes.connectorDisabled,\r\n        line: classes.connectorLine,\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} connector={connector}>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Stepper alternativeLabel activeStep={activeStep} connector={connector}>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'San Francisco – Oakland Bay Bridge, United States',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bird',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bali, Indonesia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\r\n  },\r\n  {\r\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Goč, Serbia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: 255,\r\n    display: 'block',\r\n    maxWidth: 400,\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nfunction SwipeableTextMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleStepChange(step) {\r\n    setActiveStep(step);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper square elevation={0} className={classes.header}>\r\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\r\n      </Paper>\r\n      <AutoPlaySwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {tutorialSteps.map((step, index) => (\r\n          <div key={step.label}>\r\n            {Math.abs(activeStep - index) <= 2 ? (\r\n              <img className={classes.img} src={step.imgPath} alt={step.label} />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </AutoPlaySwipeableViews>\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position=\"static\"\r\n        variant=\"text\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n            Next\r\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function DotsMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant=\"dots\"\r\n      steps={6}\r\n      position=\"static\"\r\n      activeStep={activeStep}\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === 5}>\r\n          Next\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function ProgressMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant=\"progress\"\r\n      steps={6}\r\n      position=\"static\"\r\n      activeStep={activeStep}\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === 5}>\r\n          Next\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}