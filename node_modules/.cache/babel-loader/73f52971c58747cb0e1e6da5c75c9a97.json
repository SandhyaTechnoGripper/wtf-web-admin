{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\layout\\\\GridListExamplesPage.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport { GridList, GridListTile, ListSubheader, GridListTileBar, IconButton } from \"@material-ui/core\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tileData = [{\n  img: \"https://material-ui.com/static/images/grid-list/breakfast.jpg\",\n  title: \"Breakfast\",\n  author: \"jill111\",\n  cols: 2,\n  featured: true\n}, {\n  img: \"https://material-ui.com/static/images/grid-list/burgers.jpg\",\n  title: \"Tasty burger\",\n  author: \"director90\"\n}, {\n  img: \"https://material-ui.com/static/images/grid-list/camera.jpg\",\n  title: \"Camera\",\n  author: \"Danson67\"\n}, {\n  img: \"https://material-ui.com/static/images/grid-list/morning.jpg\",\n  title: \"Morning\",\n  author: \"fancycrave1\",\n  featured: true\n}, {\n  img: \"https://material-ui.com/static/images/grid-list/hats.jpg\",\n  title: \"Hats\",\n  author: \"Hans\"\n}, {\n  img: \"https://material-ui.com/static/images/grid-list/honey.jpg\",\n  title: \"Honey\",\n  author: \"fancycravel\"\n}, {\n  img: \"https://material-ui.com/static/images/grid-list/vegetables.jpg\",\n  title: \"Vegetables\",\n  author: \"jill111\",\n  cols: 2\n}, {\n  img: \"https://material-ui.com/static/images/grid-list/plant.jpg\",\n  title: \"Water plant\",\n  author: \"BkrmadtyaKarki\"\n}, {\n  img: \"https://material-ui.com/static/images/grid-list/mushroom.jpg\",\n  title: \"Mushrooms\",\n  author: \"PublicDomainPictures\"\n}, {\n  img: \"https://material-ui.com/static/images/grid-list/olive.jpg\",\n  title: \"Olive oil\",\n  author: \"congerdesign\"\n}, {\n  img: \"https://material-ui.com/static/images/grid-list/star.jpg\",\n  title: \"Sea star\",\n  cols: 2,\n  author: \"821292\"\n}, {\n  img: \"https://material-ui.com/static/images/grid-list/bike.jpg\",\n  title: \"Bike\",\n  author: \"danfador\"\n}];\nconst jsCode1 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     cols: 2,\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function ImageGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={160} className={classes.gridList} cols={3}>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\n            <img src={tile.img} alt={tile.title} />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function TitlebarGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\">December</ListSubheader>\n        </GridListTile>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>by: {tile.author}</span>}\n              actionIcon={\n                <IconButton aria-label={\\`info about \\${tile.title}\\`} className={classes.icon}>\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n`;\nconst jsCode3 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function SingleLineGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={\\`star \\${tile.title}\\`}>\n                  <StarBorderIcon className={classes.title} />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n`;\nconst jsCode4 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n  icon: {\n    color: 'white',\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     featured: true,\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function AdvancedGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={200} spacing={1} className={classes.gridList}>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img} cols={tile.featured ? 2 : 1} rows={tile.featured ? 2 : 1}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              titlePosition=\"top\"\n              actionIcon={\n                <IconButton aria-label={\\`star \\${tile.title}\\`} className={classes.icon}>\n                  <StarBorderIcon />\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.titleBar}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\"\n  }\n}));\nconst useStyles3 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\"\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n  }\n}));\nconst useStyles4 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 1200,\n    height: 450,\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\"\n  },\n  titleBar: {\n    background: \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" + \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n  },\n  icon: {\n    color: \"white\"\n  }\n}));\nexport default function GridListExamplesPage() {\n  _s();\n\n  const classes = useStyles();\n  const classes3 = useStyles3();\n  const classes4 = useStyles4();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notice, {\n      icon: \"flaticon-warning font-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Grid lists display a collection of images in an organized grid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"font-weight-bold\",\n          rel: \"noopener noreferrer\",\n          href: \"https://material-ui.com/components/grid-list/\",\n          children: \"demos & documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode1,\n          beforeCodeTitle: \"Image-only grid list\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"A simple example of a scrollable image \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"GridList\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 54\n            }, this), \" .\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.root,\n            children: /*#__PURE__*/_jsxDEV(GridList, {\n              cellHeight: 160,\n              className: classes.gridList,\n              cols: 3,\n              children: tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n                cols: tile.cols || 1,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: tile.img,\n                  alt: tile.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, this)\n              }, tile.img, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode2,\n          beforeCodeTitle: \"Grid list with titlebars\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"This example demonstrates the use of the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"GridListTileBar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this), \" to add an overlay to each\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"GridListTile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this), \". The overlay can accommodate a\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"subtitle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 35\n            }, this), \" and secondary action - in this example an \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"IconButton\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 34\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.root,\n            children: /*#__PURE__*/_jsxDEV(GridList, {\n              cellHeight: 180,\n              className: classes.gridList,\n              children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n                cols: 2,\n                style: {\n                  height: \"auto\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n                  component: \"div\",\n                  children: \"December\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 19\n                }, this)\n              }, \"Subheader\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this), tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: tile.img,\n                  alt: tile.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n                  title: tile.title,\n                  subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"by: \", tile.author]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 33\n                  }, this),\n                  actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": `info about ${tile.title}`,\n                    className: classes.icon,\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"flaticon-information\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 21\n                }, this)]\n              }, tile.img, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n      jsCode: jsCode3,\n      beforeCodeTitle: \"Single line Grid list\",\n      codeBlockHeight: \"400px\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This example demonstrates a horizontal scrollable single-line grid list of images. Horizontally scrolling grid lists are discouraged because the scrolling interferes with typical reading patterns, affecting comprehension. One notable exception is a horizontally-scrolling, single-line grid list of images, such as a gallery.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"separator separator-dashed my-7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes3.root,\n        children: /*#__PURE__*/_jsxDEV(GridList, {\n          className: classes3.gridList,\n          cols: 2.5,\n          children: tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: tile.img,\n              alt: tile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n              title: tile.title,\n              classes: {\n                root: classes3.titleBar,\n                title: classes3.title\n              },\n              actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": `star ${tile.title}`,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"flaticon-star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this)]\n          }, tile.img, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n      jsCode: jsCode4,\n      beforeCodeTitle: \"Advanced Grid list\",\n      codeBlockHeight: \"400px\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"This example demonstrates \\\"featured\\\" tiles, using the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"rows\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"cols\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 33\n        }, this), \" props to adjust the size of the tile, and the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"padding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 29\n        }, this), \" prop to adjust the spacing. The tiles have a customized titlebar, positioned at the top and with a custom gradient \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"titleBackground\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 27\n        }, this), \". The secondary action\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"IconButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this), \" is positioned on the left.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"separator separator-dashed my-7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes4.root,\n        children: /*#__PURE__*/_jsxDEV(GridList, {\n          cellHeight: 200,\n          spacing: 1,\n          className: classes4.gridList,\n          children: tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n            cols: tile.featured ? 2 : 1,\n            rows: tile.featured ? 2 : 1,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: tile.img,\n              alt: tile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n              title: tile.title,\n              titlePosition: \"top\",\n              actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": `star ${tile.title}`,\n                className: classes4.icon,\n                children: /*#__PURE__*/_jsxDEV(StarBorderIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 21\n              }, this),\n              actionPosition: \"left\",\n              className: classes4.titleBar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this)]\n          }, tile.img, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GridListExamplesPage, \"ets1oiI/p3FuAgvMNOIGu4GgpGQ=\", false, function () {\n  return [useStyles, useStyles3, useStyles4];\n});\n\n_c = GridListExamplesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridListExamplesPage\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/GoogleMaterialExamples/layout/GridListExamplesPage.js"],"names":["React","makeStyles","StarBorderIcon","GridList","GridListTile","ListSubheader","GridListTileBar","IconButton","Notice","KTCodeExample","tileData","img","title","author","cols","featured","jsCode1","jsCode2","jsCode3","jsCode4","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","useStyles3","transform","primary","light","titleBar","useStyles4","GridListExamplesPage","classes","classes3","classes4","map","tile"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SACEC,QADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,eAJF,EAKEC,UALF,QAMO,mBANP;AAOA,SAAQC,MAAR,EAAgBC,aAAhB,QAAoC,0CAApC;;;AAEA,MAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,GAAG,EAAE,+DADP;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,MAAM,EAAE,SAHV;AAIEC,EAAAA,IAAI,EAAE,CAJR;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CADe,EAQf;AACEJ,EAAAA,GAAG,EAAE,6DADP;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CARe,EAaf;AACEF,EAAAA,GAAG,EAAE,4DADP;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAbe,EAkBf;AACEF,EAAAA,GAAG,EAAE,6DADP;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,MAAM,EAAE,aAHV;AAIEE,EAAAA,QAAQ,EAAE;AAJZ,CAlBe,EAwBf;AACEJ,EAAAA,GAAG,EAAE,0DADP;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAxBe,EA6Bf;AACEF,EAAAA,GAAG,EAAE,2DADP;AAEEC,EAAAA,KAAK,EAAE,OAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CA7Be,EAkCf;AACEF,EAAAA,GAAG,EAAE,gEADP;AAEEC,EAAAA,KAAK,EAAE,YAFT;AAGEC,EAAAA,MAAM,EAAE,SAHV;AAIEC,EAAAA,IAAI,EAAE;AAJR,CAlCe,EAwCf;AACEH,EAAAA,GAAG,EAAE,2DADP;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAxCe,EA6Cf;AACEF,EAAAA,GAAG,EAAE,8DADP;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CA7Ce,EAkDf;AACEF,EAAAA,GAAG,EAAE,2DADP;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAlDe,EAuDf;AACEF,EAAAA,GAAG,EAAE,0DADP;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEE,EAAAA,IAAI,EAAE,CAHR;AAIED,EAAAA,MAAM,EAAE;AAJV,CAvDe,EA6Df;AACEF,EAAAA,GAAG,EAAE,0DADP;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CA7De,CAAjB;AAmEA,MAAMG,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtDA;AAuDA,MAAMC,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxEA;AAyEA,MAAMC,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5EA;AA6EA,MAAMC,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9EA;AAgFA,MAAMC,SAAS,GAAGnB,UAAU,CAACoB,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALtC,GAD+B;AAQrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,GADC;AAERC,IAAAA,MAAM,EAAE;AAFA,GAR2B;AAYrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AAZ+B,CAAL,CAAN,CAA5B;AAiBA,MAAMC,UAAU,GAAGnC,UAAU,CAACoB,KAAK,KAAK;AACtCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,e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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport {\r\n  GridList,\r\n  GridListTile,\r\n  ListSubheader,\r\n  GridListTileBar,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst tileData = [\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/breakfast.jpg\",\r\n    title: \"Breakfast\",\r\n    author: \"jill111\",\r\n    cols: 2,\r\n    featured: true\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/burgers.jpg\",\r\n    title: \"Tasty burger\",\r\n    author: \"director90\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/camera.jpg\",\r\n    title: \"Camera\",\r\n    author: \"Danson67\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/morning.jpg\",\r\n    title: \"Morning\",\r\n    author: \"fancycrave1\",\r\n    featured: true\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/hats.jpg\",\r\n    title: \"Hats\",\r\n    author: \"Hans\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/honey.jpg\",\r\n    title: \"Honey\",\r\n    author: \"fancycravel\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/vegetables.jpg\",\r\n    title: \"Vegetables\",\r\n    author: \"jill111\",\r\n    cols: 2\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/plant.jpg\",\r\n    title: \"Water plant\",\r\n    author: \"BkrmadtyaKarki\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/mushroom.jpg\",\r\n    title: \"Mushrooms\",\r\n    author: \"PublicDomainPictures\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/olive.jpg\",\r\n    title: \"Olive oil\",\r\n    author: \"congerdesign\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/star.jpg\",\r\n    title: \"Sea star\",\r\n    cols: 2,\r\n    author: \"821292\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/bike.jpg\",\r\n    title: \"Bike\",\r\n    author: \"danfador\"\r\n  }\r\n];\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport tileData from './tileData';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *     cols: 2,\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function ImageGridList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n            <img src={tile.img} alt={tile.title} />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport tileData from './tileData';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function TitlebarGridList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={180} className={classes.gridList}>\r\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n          <ListSubheader component=\"div\">December</ListSubheader>\r\n        </GridListTile>\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              subtitle={<span>by: {tile.author}</span>}\r\n              actionIcon={\r\n                <IconButton aria-label={\\`info about \\${tile.title}\\`} className={classes.icon}>\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport tileData from './tileData';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function SingleLineGridList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList className={classes.gridList} cols={2.5}>\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n              actionIcon={\r\n                <IconButton aria-label={\\`star \\${tile.title}\\`}>\r\n                  <StarBorderIcon className={classes.title} />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport tileData from './tileData';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\r\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  icon: {\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *     featured: true,\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function AdvancedGridList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={200} spacing={1} className={classes.gridList}>\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img} cols={tile.featured ? 2 : 1} rows={tile.featured ? 2 : 1}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              titlePosition=\"top\"\r\n              actionIcon={\r\n                <IconButton aria-label={\\`star \\${tile.title}\\`} className={classes.icon}>\r\n                  <StarBorderIcon />\r\n                </IconButton>\r\n              }\r\n              actionPosition=\"left\"\r\n              className={classes.titleBar}\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    flexWrap: \"nowrap\",\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: \"translateZ(0)\"\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\r\n  }\r\n}));\r\n\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 1200,\r\n    height: 450,\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: \"translateZ(0)\"\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" +\r\n      \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\r\n  },\r\n  icon: {\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\nexport default function GridListExamplesPage() {\r\n  const classes = useStyles();\r\n  const classes3 = useStyles3();\r\n  const classes4 = useStyles4();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Grid lists display a collection of images in an organized grid.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/grid-list/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Image-only grid list\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              A simple example of a scrollable image <code>GridList</code> .\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes.root}>\r\n              <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n                {tileData.map(tile => (\r\n                  <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n                    <img src={tile.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                ))}\r\n              </GridList>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Grid list with titlebars\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              This example demonstrates the use of the{\" \"}\r\n              <code>GridListTileBar</code> to add an overlay to each{\" \"}\r\n              <code>GridListTile</code>. The overlay can accommodate a{\" \"}\r\n              <code>title</code>, <code>subtitle</code> and secondary action -\r\n              in this example an <code>IconButton</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes.root}>\r\n              <GridList cellHeight={180} className={classes.gridList}>\r\n                <GridListTile\r\n                  key=\"Subheader\"\r\n                  cols={2}\r\n                  style={{ height: \"auto\" }}\r\n                >\r\n                  <ListSubheader component=\"div\">December</ListSubheader>\r\n                </GridListTile>\r\n                {tileData.map(tile => (\r\n                  <GridListTile key={tile.img}>\r\n                    <img src={tile.img} alt={tile.title} />\r\n                    <GridListTileBar\r\n                      title={tile.title}\r\n                      subtitle={<span>by: {tile.author}</span>}\r\n                      actionIcon={\r\n                        <IconButton\r\n                          aria-label={`info about ${tile.title}`}\r\n                          className={classes.icon}\r\n                        >\r\n                          <i className=\"flaticon-information\"></i>\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </GridListTile>\r\n                ))}\r\n              </GridList>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n\r\n      <KTCodeExample\r\n        jsCode={jsCode3}\r\n        beforeCodeTitle=\"Single line Grid list\"\r\n        codeBlockHeight=\"400px\"\r\n      >\r\n        <span>\r\n          This example demonstrates a horizontal scrollable single-line grid\r\n          list of images. Horizontally scrolling grid lists are discouraged\r\n          because the scrolling interferes with typical reading patterns,\r\n          affecting comprehension. One notable exception is a\r\n          horizontally-scrolling, single-line grid list of images, such as a\r\n          gallery.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div className={classes3.root}>\r\n          <GridList className={classes3.gridList} cols={2.5}>\r\n            {tileData.map(tile => (\r\n              <GridListTile key={tile.img}>\r\n                <img src={tile.img} alt={tile.title} />\r\n                <GridListTileBar\r\n                  title={tile.title}\r\n                  classes={{\r\n                    root: classes3.titleBar,\r\n                    title: classes3.title\r\n                  }}\r\n                  actionIcon={\r\n                    <IconButton aria-label={`star ${tile.title}`}>\r\n                      <i className=\"flaticon-star\"></i>\r\n                    </IconButton>\r\n                  }\r\n                />\r\n              </GridListTile>\r\n            ))}\r\n          </GridList>\r\n        </div>\r\n      </KTCodeExample>\r\n      <KTCodeExample\r\n        jsCode={jsCode4}\r\n        beforeCodeTitle=\"Advanced Grid list\"\r\n        codeBlockHeight=\"400px\"\r\n      >\r\n        <span>\r\n          This example demonstrates \"featured\" tiles, using the{\" \"}\r\n          <code>rows</code> and <code>cols</code> props to adjust the size of\r\n          the tile, and the <code>padding</code> prop to adjust the spacing. The\r\n          tiles have a customized titlebar, positioned at the top and with a\r\n          custom gradient <code>titleBackground</code>. The secondary action{\" \"}\r\n          <code>IconButton</code> is positioned on the left.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div className={classes4.root}>\r\n          <GridList cellHeight={200} spacing={1} className={classes4.gridList}>\r\n            {tileData.map(tile => (\r\n              <GridListTile\r\n                key={tile.img}\r\n                cols={tile.featured ? 2 : 1}\r\n                rows={tile.featured ? 2 : 1}\r\n              >\r\n                <img src={tile.img} alt={tile.title} />\r\n                <GridListTileBar\r\n                  title={tile.title}\r\n                  titlePosition=\"top\"\r\n                  actionIcon={\r\n                    <IconButton\r\n                      aria-label={`star ${tile.title}`}\r\n                      className={classes4.icon}\r\n                    >\r\n                      <StarBorderIcon />\r\n                    </IconButton>\r\n                  }\r\n                  actionPosition=\"left\"\r\n                  className={classes4.titleBar}\r\n                />\r\n              </GridListTile>\r\n            ))}\r\n          </GridList>\r\n        </div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}