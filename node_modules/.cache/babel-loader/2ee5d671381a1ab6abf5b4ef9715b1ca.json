{"ast":null,"code":"import _defineProperty from \"D:\\\\GCC\\\\wtf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\GCC\\\\wtf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\GCC\\\\wtf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\GCC\\\\wtf\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\inputs\\\\EquipmentManagement.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { TextField, InputBase, Button } from \"@material-ui/core\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { green } from \"@material-ui/core/colors\";\nimport { fade, withStyles, makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nvar currencies = [{\n  value: \"Active\",\n  label: \"Active\"\n}, {\n  value: \"Inactive\",\n  label: \"Inactive\"\n}]; // update user\n\nvar useStyles3 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    dense: {\n      marginTop: theme.spacing(2)\n    },\n    menu: {\n      width: 200\n    }\n  };\n}); //view user\n\nvar useStyles4 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\"\n    },\n    table: {\n      minWidth: 650\n    }\n  };\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar rows = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Eclair\", 262, 16.0, 24, 6.0), createData(\"Cupcake\", 305, 3.7, 67, 4.3), createData(\"Gingerbread\", 356, 16.0, 49, 3.9)]; // add user\n\nvar useStyles2 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    dense: {\n      marginTop: theme.spacing(2)\n    },\n    menu: {\n      width: 200\n    }\n  };\n});\nexport default function EquipmentManagement() {\n  var _this = this;\n\n  var _useSelector = useSelector(function (_ref) {\n    var auth = _ref.auth;\n    return {\n      authToken: auth.authToken\n    };\n  }, shallowEqual),\n      authToken = _useSelector.authToken; //update user\n\n\n  var classes3 = useStyles3();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      getData = _React$useState2[0],\n      setGetData = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      values3 = _React$useState4[0],\n      setValues3 = _React$useState4[1];\n\n  var handleChange3 = function handleChange3(name) {\n    return function (event) {\n      setValues3(_objectSpread(_objectSpread({}, values3), {}, _defineProperty({}, name, event.target.value)));\n    };\n  }; //view equipment\n\n\n  var classes4 = useStyles4(); // add equipment\n\n  var classes2 = useStyles2();\n\n  var fetchGetData = function fetchGetData() {\n    fetch(\"http://13.232.102.139:9000/user/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \".concat(authToken)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setGetData(responseJson.data);\n      console.log(\"Success GetData :\", responseJson);\n    });\n  };\n\n  useEffect(function () {\n    if (authToken) {\n      fetchGetData();\n    }\n  }, []);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mobile = _useState6[0],\n      setMobile = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      account_type = _useState10[0],\n      setAccount_type = _useState10[1]; // const history = useHistory();\n\n\n  function Useradd(e) {\n    e.preventDefault();\n    var postData = {\n      name: name,\n      email: email,\n      mobile: mobile,\n      password: password,\n      account_type: account_type\n    };\n    console.log(typeof postData);\n    console.log(postData); // POST request using fetch inside useEffect React hook\n\n    var requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postData)\n    };\n    fetch(\"http://13.232.102.139:9000/user/add\", requestOptions).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return postData;\n    });\n  }\n\n  var handleChange2 = function handleChange2(name) {\n    return function (event) {\n      setValues2(_objectSpread(_objectSpread({}, values2), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 55\n    }\n  }, \"Text fields let users enter and edit text.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 55\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/text-fields/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 57\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 55\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Add Equipment\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 61\n    }\n  }, \"TextField\"), \" \", \"supports outlined styling.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 59\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes2.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"Equipment Id\",\n    className: classes2.textField,\n    value: values2.currency,\n    onChange: handleChange2(\"currency\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes2.menu\n      }\n    },\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 61\n    }\n  }, currencies.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 67\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    error: true,\n    id: \"outlined-error\",\n    label: \"Equipment\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: true,\n    id: \"outlined-error\",\n    label: \"Quantity\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: true,\n    id: \"outlined-error\",\n    label: \"Brand\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes3.button,\n    onClick: Useradd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 61\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Update User\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 61\n    }\n  }, \"TextField\"), \" \", \"supports outlined styling.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 59\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes2.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-name\",\n    label: \"Name\",\n    className: classes3.textField,\n    value: values3.name,\n    onChange: handleChange3(\"name\"),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: true,\n    id: \"outlined-error\",\n    label: \"Account type\",\n    className: classes3.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input\",\n    label: \"Email\",\n    className: classes3.textField,\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-password-input\",\n    label: \"Password\",\n    className: classes3.textField,\n    type: \"password\",\n    autoComplete: \"current-password\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-read-only-input\",\n    label: \"Phone\",\n    type: \"number\",\n    className: classes3.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"Status\",\n    className: classes3.textField,\n    value: values3.currency,\n    onChange: handleChange3(\"currency\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes3.menu\n      }\n    },\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 61\n    }\n  }, currencies.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 67\n      }\n    }, option.label);\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 55\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"View Equipment\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes4.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes4.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 63\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 67\n    }\n  }, \"Equipment Id\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 67\n    }\n  }, \"Equipment\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 67\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 67\n    }\n  }, \"Brand\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 67\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 63\n    }\n  }, rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 71\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 71\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 71\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 71\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 71\n      }\n    }, row.protein));\n  }))))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n    width: 200,\\n  },\\n  dense: {\\n    marginTop: 19,\\n  },\\n  menu: {\\n    width: 200,\\n  },\\n}));\\n\\nconst currencies = [\\n  {\\n    value: 'USD',\\n    label: '$',\\n  },\\n  {\\n    value: 'EUR',\\n    label: '\\u20AC',\\n  },\\n  {\\n    value: 'BTC',\\n    label: '\\u0E3F',\\n  },\\n  {\\n    value: 'JPY',\\n    label: '\\xA5',\\n  },\\n];\\n\\nexport default function TextFields() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    name: 'Cat in the Hat',\\n    age: '',\\n    multiline: 'Controlled',\\n    currency: 'EUR',\\n  });\\n\\n  const handleChange = name => event => {\\n    setValues({ ...values, [name]: event.target.value });\\n  };\\n\\n  return (\\n    <form className={classes.container} noValidate autoComplete=\\\"off\\\">\\n      <TextField\\n        id=\\\"standard-name\\\"\\n        label=\\\"Name\\\"\\n        className={classes.textField}\\n        value={values.name}\\n        onChange={handleChange('name')}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-uncontrolled\\\"\\n        label=\\\"Uncontrolled\\\"\\n        defaultValue=\\\"foo\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        required\\n        id=\\\"standard-required\\\"\\n        label=\\\"Required\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        error\\n        id=\\\"standard-error\\\"\\n        label=\\\"Error\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        disabled\\n        id=\\\"standard-disabled\\\"\\n        label=\\\"Disabled\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-password-input\\\"\\n        label=\\\"Password\\\"\\n        className={classes.textField}\\n        type=\\\"password\\\"\\n        autoComplete=\\\"current-password\\\"\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-read-only-input\\\"\\n        label=\\\"Read Only\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        InputProps={{\\n          readOnly: true,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"standard-dense\\\"\\n        label=\\\"Dense\\\"\\n        className={clsx(classes.textField, classes.dense)}\\n        margin=\\\"dense\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-multiline-flexible\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rowsMax=\\\"4\\\"\\n        value={values.multiline}\\n        onChange={handleChange('multiline')}\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-multiline-static\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rows=\\\"4\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-helperText\\\"\\n        label=\\\"Helper text\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-with-placeholder\\\"\\n        label=\\\"With placeholder\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-textarea\\\"\\n        label=\\\"With placeholder multiline\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        multiline\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-number\\\"\\n        label=\\\"Number\\\"\\n        value={values.age}\\n        onChange={handleChange('age')}\\n        type=\\\"number\\\"\\n        className={classes.textField}\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-search\\\"\\n        label=\\\"Search field\\\"\\n        type=\\\"search\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-select-currency\\\"\\n        select\\n        label=\\\"Select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n      >\\n        {currencies.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"standard-select-currency-native\\\"\\n        select\\n        label=\\\"Native select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          native: true,\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n      >\\n        {currencies.map(option => (\\n          <option key={option.value} value={option.value}>\\n            {option.label}\\n          </option>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"standard-full-width\\\"\\n        label=\\\"Label\\\"\\n        style={{ margin: 8 }}\\n        placeholder=\\\"Placeholder\\\"\\n        helperText=\\\"Full width!\\\"\\n        fullWidth\\n        margin=\\\"normal\\\"\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"standard-bare\\\"\\n        className={classes.textField}\\n        defaultValue=\\\"Bare\\\"\\n        margin=\\\"normal\\\"\\n        inputProps={{ 'aria-label': 'bare' }}\\n      />\\n    </form>\\n  );\\n}\\n\";","map":{"version":3,"sources":["D:/GCC/wtf/src/app/modules/GoogleMaterialExamples/inputs/EquipmentManagement.js"],"names":["React","useState","useEffect","clsx","TextField","InputBase","Button","shallowEqual","useSelector","green","fade","withStyles","makeStyles","createMuiTheme","Notice","KTCodeExample","MenuItem","Table","TableBody","TableCell","TableHead","TableRow","Paper","currencies","value","label","useStyles3","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","useStyles4","root","overflowX","table","minWidth","createData","name","calories","fat","carbs","protein","rows","useStyles2","EquipmentManagement","auth","authToken","classes3","getData","setGetData","age","multiline","currency","values3","setValues3","handleChange3","event","target","classes4","classes2","fetchGetData","fetch","method","headers","Authorization","then","response","json","responseJson","data","console","log","setName","email","setEmail","mobile","setMobile","password","setPassword","account_type","setAccount_type","Useradd","e","preventDefault","postData","requestOptions","body","JSON","stringify","handleChange2","setValues2","values2","jsCode1","MenuProps","className","map","option","button","row"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { TextField, InputBase, Button } from \"@material-ui/core\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport {\r\n  fade,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Notice,\r\n  KTCodeExample,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst currencies = [\r\n  {\r\n    value: \"Active\",\r\n    label: \"Active\",\r\n  },\r\n  {\r\n    value: \"Inactive\",\r\n    label: \"Inactive\",\r\n  },\r\n];\r\n// update user\r\nconst useStyles3 = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\n//view user\r\nconst useStyles4 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n// add user\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function EquipmentManagement() {\r\n                                                const {\r\n                                                  authToken,\r\n                                                } = useSelector(\r\n                                                  ({ auth }) => ({\r\n                                                    authToken: auth.authToken,\r\n                                                  }),\r\n                                                  shallowEqual\r\n                                                );\r\n                                                //update user\r\n                                                const classes3 = useStyles3();\r\n                                                const [\r\n                                                  getData,\r\n                                                  setGetData,\r\n                                                ] = React.useState([]);\r\n                                                const [\r\n                                                  values3,\r\n                                                  setValues3,\r\n                                                ] = React.useState({\r\n                                                  name: \"Cat in the Hat\",\r\n                                                  age: \"\",\r\n                                                  multiline: \"Controlled\",\r\n                                                  currency: \"EUR\",\r\n                                                });\r\n\r\n                                                const handleChange3 = (\r\n                                                  name\r\n                                                ) => (event) => {\r\n                                                  setValues3({\r\n                                                    ...values3,\r\n                                                    [name]: event.target.value,\r\n                                                  });\r\n                                                };\r\n\r\n                                                //view equipment\r\n                                                const classes4 = useStyles4();\r\n                                                // add equipment\r\n                                                const classes2 = useStyles2();\r\n\r\n                                                const fetchGetData = () => {\r\n                                                  fetch(\r\n                                                    \"http://13.232.102.139:9000/user/\",\r\n                                                    {\r\n                                                      method: \"GET\",\r\n                                                      headers: {\r\n                                                        \"Content-Type\":\r\n                                                          \"application/json\",\r\n                                                        Authorization: `Bearer ${authToken}`,\r\n                                                      },\r\n                                                    }\r\n                                                  )\r\n                                                    .then((response) =>\r\n                                                      response.json()\r\n                                                    )\r\n                                                    .then((responseJson) => {\r\n                                                      setGetData(\r\n                                                        responseJson.data\r\n                                                      );\r\n                                                      console.log(\r\n                                                        \"Success GetData :\",\r\n                                                        responseJson\r\n                                                      );\r\n                                                    });\r\n                                                };\r\n\r\n                                                useEffect(() => {\r\n                                                  if (authToken) {\r\n                                                    fetchGetData();\r\n                                                  }\r\n                                                }, []);\r\n\r\n                                                const [\r\n                                                  name,\r\n                                                  setName,\r\n                                                ] = useState(\"\");\r\n                                                const [\r\n                                                  email,\r\n                                                  setEmail,\r\n                                                ] = useState(\"\");\r\n                                                const [\r\n                                                  mobile,\r\n                                                  setMobile,\r\n                                                ] = useState(\"\");\r\n                                                const [\r\n                                                  password,\r\n                                                  setPassword,\r\n                                                ] = useState(\"\");\r\n                                                const [\r\n                                                  account_type,\r\n                                                  setAccount_type,\r\n                                                ] = useState(\"\");\r\n\r\n                                                // const history = useHistory();\r\n\r\n                                                function Useradd(e) {\r\n                                                  e.preventDefault();\r\n                                                  const postData = {\r\n                                                    name,\r\n                                                    email,\r\n                                                    mobile,\r\n                                                    password,\r\n                                                    account_type,\r\n                                                  };\r\n\r\n                                                  console.log(typeof postData);\r\n                                                  console.log(postData);\r\n\r\n                                                  // POST request using fetch inside useEffect React hook\r\n                                                  const requestOptions = {\r\n                                                    method: \"POST\",\r\n                                                    headers: {\r\n                                                      \"Content-Type\":\r\n                                                        \"application/json\",\r\n                                                    },\r\n                                                    body: JSON.stringify(\r\n                                                      postData\r\n                                                    ),\r\n                                                  };\r\n                                                  fetch(\r\n                                                    \"http://13.232.102.139:9000/user/add\",\r\n                                                    requestOptions\r\n                                                  )\r\n                                                    .then((response) =>\r\n                                                      response.json()\r\n                                                    )\r\n                                                    .then((data) => postData);\r\n                                                }\r\n\r\n                                                const handleChange2 = (\r\n                                                  name\r\n                                                ) => (event) => {\r\n                                                  setValues2({\r\n                                                    ...values2,\r\n                                                    [name]: event.target.value,\r\n                                                  });\r\n                                                };\r\n\r\n                                                return (\r\n                                                  <>\r\n                                                    <Notice icon=\"flaticon-warning font-primary\">\r\n                                                      <span>\r\n                                                        Text fields let users\r\n                                                        enter and edit text.\r\n                                                      </span>{\" \"}\r\n                                                      <span>\r\n                                                        For more info please\r\n                                                        check the components's\r\n                                                        official{\" \"}\r\n                                                        <a\r\n                                                          target=\"_blank\"\r\n                                                          className=\"font-weight-bold\"\r\n                                                          rel=\"noopener noreferrer\"\r\n                                                          href=\"https://material-ui.com/components/text-fields/\"\r\n                                                        >\r\n                                                          demos & documentation\r\n                                                        </a>\r\n                                                      </span>\r\n                                                    </Notice>\r\n                                                    <div className=\"row\">\r\n                                                      <div className=\"col-md-4\">\r\n                                                        <KTCodeExample\r\n                                                          jsCode={jsCode1}\r\n                                                          beforeCodeTitle=\"Add Equipment\"\r\n                                                          codeBlockHeight=\"400px\"\r\n                                                        >\r\n                                                          <span>\r\n                                                            <code>\r\n                                                              TextField\r\n                                                            </code>{\" \"}\r\n                                                            supports outlined\r\n                                                            styling.\r\n                                                          </span>\r\n                                                          <div className=\"separator separator-dashed my-7\"></div>\r\n                                                          <form\r\n                                                            className={\r\n                                                              classes2.container\r\n                                                            }\r\n                                                            noValidate\r\n                                                            autoComplete=\"off\"\r\n                                                          >\r\n                                                            <TextField\r\n                                                              id=\"outlined-select-currency\"\r\n                                                              select\r\n                                                              label=\"Equipment Id\"\r\n                                                              className={\r\n                                                                classes2.textField\r\n                                                              }\r\n                                                              value={\r\n                                                                values2.currency\r\n                                                              }\r\n                                                              onChange={handleChange2(\r\n                                                                \"currency\"\r\n                                                              )}\r\n                                                              SelectProps={{\r\n                                                                MenuProps: {\r\n                                                                  className:\r\n                                                                    classes2.menu,\r\n                                                                },\r\n                                                              }}\r\n                                                              margin=\"normal\"\r\n                                                              variant=\"outlined\"\r\n                                                            >\r\n                                                              {currencies.map(\r\n                                                                (option) => (\r\n                                                                  <MenuItem\r\n                                                                    key={\r\n                                                                      option.value\r\n                                                                    }\r\n                                                                    value={\r\n                                                                      option.value\r\n                                                                    }\r\n                                                                  >\r\n                                                                    {\r\n                                                                      option.label\r\n                                                                    }\r\n                                                                  </MenuItem>\r\n                                                                )\r\n                                                              )}\r\n                                                            </TextField>\r\n\r\n                                                            <TextField\r\n                                                              error\r\n                                                              id=\"outlined-error\"\r\n                                                              label=\"Equipment\"\r\n                                                              className={\r\n                                                                classes2.textField\r\n                                                              }\r\n                                                              margin=\"normal\"\r\n                                                              variant=\"outlined\"\r\n                                                            />\r\n                                                            <TextField\r\n                                                              error\r\n                                                              id=\"outlined-error\"\r\n                                                              label=\"Quantity\"\r\n                                                              className={\r\n                                                                classes2.textField\r\n                                                              }\r\n                                                              margin=\"normal\"\r\n                                                              variant=\"outlined\"\r\n                                                            />\r\n\r\n                                                            <TextField\r\n                                                              error\r\n                                                              id=\"outlined-error\"\r\n                                                              label=\"Brand\"\r\n                                                              className={\r\n                                                                classes2.textField\r\n                                                              }\r\n                                                              margin=\"normal\"\r\n                                                              variant=\"outlined\"\r\n                                                            />\r\n                                                            <Button\r\n                                                              variant=\"contained\"\r\n                                                              className={\r\n                                                                classes3.button\r\n                                                              }\r\n                                                              onClick={Useradd}\r\n                                                            >\r\n                                                              Submit\r\n                                                            </Button>\r\n                                                          </form>\r\n                                                        </KTCodeExample>\r\n\r\n                                                        <KTCodeExample\r\n                                                          jsCode={jsCode1}\r\n                                                          beforeCodeTitle=\"Update User\"\r\n                                                          codeBlockHeight=\"400px\"\r\n                                                        >\r\n                                                          <span>\r\n                                                            <code>\r\n                                                              TextField\r\n                                                            </code>{\" \"}\r\n                                                            supports outlined\r\n                                                            styling.\r\n                                                          </span>\r\n                                                          <div className=\"separator separator-dashed my-7\"></div>\r\n                                                          <form\r\n                                                            className={\r\n                                                              classes2.container\r\n                                                            }\r\n                                                            noValidate\r\n                                                            autoComplete=\"off\"\r\n                                                          >\r\n                                                            <TextField\r\n                                                              id=\"outlined-name\"\r\n                                                              label=\"Name\"\r\n                                                              className={\r\n                                                                classes3.textField\r\n                                                              }\r\n                                                              value={\r\n                                                                values3.name\r\n                                                              }\r\n                                                              onChange={handleChange3(\r\n                                                                \"name\"\r\n                                                              )}\r\n                                                              margin=\"normal\"\r\n                                                              variant=\"outlined\"\r\n                                                            />\r\n\r\n                                                            <TextField\r\n                                                              error\r\n                                                              id=\"outlined-error\"\r\n                                                              label=\"Account type\"\r\n                                                              className={\r\n                                                                classes3.textField\r\n                                                              }\r\n                                                              margin=\"normal\"\r\n                                                              variant=\"outlined\"\r\n                                                            />\r\n\r\n                                                            <TextField\r\n                                                              id=\"outlined-email-input\"\r\n                                                              label=\"Email\"\r\n                                                              className={\r\n                                                                classes3.textField\r\n                                                              }\r\n                                                              type=\"email\"\r\n                                                              name=\"email\"\r\n                                                              autoComplete=\"email\"\r\n                                                              margin=\"normal\"\r\n                                                              variant=\"outlined\"\r\n                                                            />\r\n                                                            <TextField\r\n                                                              id=\"outlined-password-input\"\r\n                                                              label=\"Password\"\r\n                                                              className={\r\n                                                                classes3.textField\r\n                                                              }\r\n                                                              type=\"password\"\r\n                                                              autoComplete=\"current-password\"\r\n                                                              margin=\"normal\"\r\n                                                              variant=\"outlined\"\r\n                                                            />\r\n                                                            <TextField\r\n                                                              id=\"outlined-read-only-input\"\r\n                                                              label=\"Phone\"\r\n                                                              type=\"number\"\r\n                                                              className={\r\n                                                                classes3.textField\r\n                                                              }\r\n                                                              margin=\"normal\"\r\n                                                              variant=\"outlined\"\r\n                                                            />\r\n                                                            <TextField\r\n                                                              id=\"outlined-select-currency\"\r\n                                                              select\r\n                                                              label=\"Status\"\r\n                                                              className={\r\n                                                                classes3.textField\r\n                                                              }\r\n                                                              value={\r\n                                                                values3.currency\r\n                                                              }\r\n                                                              onChange={handleChange3(\r\n                                                                \"currency\"\r\n                                                              )}\r\n                                                              SelectProps={{\r\n                                                                MenuProps: {\r\n                                                                  className:\r\n                                                                    classes3.menu,\r\n                                                                },\r\n                                                              }}\r\n                                                              margin=\"normal\"\r\n                                                              variant=\"outlined\"\r\n                                                            >\r\n                                                              {currencies.map(\r\n                                                                (option) => (\r\n                                                                  <MenuItem\r\n                                                                    key={\r\n                                                                      option.value\r\n                                                                    }\r\n                                                                    value={\r\n                                                                      option.value\r\n                                                                    }\r\n                                                                  >\r\n                                                                    {\r\n                                                                      option.label\r\n                                                                    }\r\n                                                                  </MenuItem>\r\n                                                                )\r\n                                                              )}\r\n                                                            </TextField>\r\n                                                          </form>\r\n                                                        </KTCodeExample>\r\n                                                      </div>\r\n\r\n                                                      <div className=\"col-md-8\">\r\n                                                        <KTCodeExample\r\n                                                          jsCode={jsCode1}\r\n                                                          beforeCodeTitle=\"View Equipment\"\r\n                                                          codeBlockHeight=\"400px\"\r\n                                                        >\r\n                                                          <Paper\r\n                                                            className={\r\n                                                              classes4.root\r\n                                                            }\r\n                                                          >\r\n                                                            <Table\r\n                                                              className={\r\n                                                                classes4.table\r\n                                                              }\r\n                                                            >\r\n                                                              <TableHead>\r\n                                                                <TableRow>\r\n                                                                  <TableCell>\r\n                                                                    Equipment Id\r\n                                                                  </TableCell>\r\n                                                                  <TableCell align=\"right\">\r\n                                                                    Equipment\r\n                                                                  </TableCell>\r\n                                                                  <TableCell align=\"right\">\r\n                                                                    Quantity\r\n                                                                  </TableCell>\r\n                                                                  <TableCell align=\"right\">\r\n                                                                    Brand\r\n                                                                  </TableCell>\r\n                                                                  <TableCell align=\"right\">\r\n                                                                    Action\r\n                                                                  </TableCell>\r\n                                                                </TableRow>\r\n                                                              </TableHead>\r\n                                                              <TableBody>\r\n                                                                {rows.map(\r\n                                                                  (row) => (\r\n                                                                    <TableRow\r\n                                                                      key={\r\n                                                                        row.name\r\n                                                                      }\r\n                                                                    >\r\n                                                                      <TableCell\r\n                                                                        component=\"th\"\r\n                                                                        scope=\"row\"\r\n                                                                      >\r\n                                                                        {\r\n                                                                          row.name\r\n                                                                        }\r\n                                                                      </TableCell>\r\n                                                                      <TableCell align=\"right\">\r\n                                                                        {\r\n                                                                          row.calories\r\n                                                                        }\r\n                                                                      </TableCell>\r\n                                                                      <TableCell align=\"right\">\r\n                                                                        {\r\n                                                                          row.fat\r\n                                                                        }\r\n                                                                      </TableCell>\r\n                                                                      <TableCell align=\"right\">\r\n                                                                        {\r\n                                                                          row.carbs\r\n                                                                        }\r\n                                                                      </TableCell>\r\n                                                                      <TableCell align=\"right\">\r\n                                                                        {\r\n                                                                          row.protein\r\n                                                                        }\r\n                                                                      </TableCell>\r\n                                                                    </TableRow>\r\n                                                                  )\r\n                                                                )}\r\n                                                              </TableBody>\r\n                                                            </Table>\r\n                                                          </Paper>\r\n                                                        </KTCodeExample>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  </>\r\n                                                );\r\n                                              }\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nexport default function TextFields() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: 'Cat in the Hat',\r\n    age: '',\r\n    multiline: 'Controlled',\r\n    currency: 'EUR',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"standard-name\"\r\n        label=\"Name\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange('name')}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-uncontrolled\"\r\n        label=\"Uncontrolled\"\r\n        defaultValue=\"foo\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"standard-required\"\r\n        label=\"Required\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        error\r\n        id=\"standard-error\"\r\n        label=\"Error\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        disabled\r\n        id=\"standard-disabled\"\r\n        label=\"Disabled\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-password-input\"\r\n        label=\"Password\"\r\n        className={classes.textField}\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-read-only-input\"\r\n        label=\"Read Only\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"standard-dense\"\r\n        label=\"Dense\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n      />\r\n      <TextField\r\n        id=\"standard-multiline-flexible\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={values.multiline}\r\n        onChange={handleChange('multiline')}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-multiline-static\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rows=\"4\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-helperText\"\r\n        label=\"Helper text\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-with-placeholder\"\r\n        label=\"With placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-textarea\"\r\n        label=\"With placeholder multiline\"\r\n        placeholder=\"Placeholder\"\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-number\"\r\n        label=\"Number\"\r\n        value={values.age}\r\n        onChange={handleChange('age')}\r\n        type=\"number\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-select-currency\"\r\n        select\r\n        label=\"Select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"standard-select-currency-native\"\r\n        select\r\n        label=\"Native select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n      >\r\n        {currencies.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"standard-full-width\"\r\n        label=\"Label\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"Placeholder\"\r\n        helperText=\"Full width!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"standard-bare\"\r\n        className={classes.textField}\r\n        defaultValue=\"Bare\"\r\n        margin=\"normal\"\r\n        inputProps={{ 'aria-label': 'bare' }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}