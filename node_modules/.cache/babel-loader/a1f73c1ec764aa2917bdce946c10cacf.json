{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\ReactBootstrapExamples\\\\ToastsExamplesPage.js\";\nimport React from \"react\";\nimport { Button, Toast, Col, Row } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showA: true,\n      showB: true\n    };\n  }\n\n  render() {\n    const {\n      showA,\n      showB\n    } = this.state;\n\n    const toggleShowA = () => this.setState({\n      showA: !showA\n    });\n\n    const toggleShowB = () => this.setState({\n      showB: !showB\n    });\n\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Toast, {\n          show: showA,\n          onClose: toggleShowA,\n          children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"holder.js/20x20?text=%20\",\n              className: \"rounded mr-2\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"mr-auto\",\n              children: \"Bootstrap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"11 mins ago\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: \"Woohoo, you're reading this text in a Toast!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleShowA,\n          children: [\"Toggle Toast \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"with\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 26\n          }, this), \" Animation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        className: \"my-1\",\n        children: /*#__PURE__*/_jsxDEV(Toast, {\n          onClose: toggleShowB,\n          show: showB,\n          animation: false,\n          children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"holder.js/20x20?text=%20\",\n              className: \"rounded mr-2\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"mr-auto\",\n              children: \"Bootstrap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"11 mins ago\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: \"Woohoo, you're reading this text in a Toast!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleShowB,\n          children: [\"Toggle Toast \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"without\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 26\n          }, this), \" Animation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Example1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false\n    };\n  }\n\n  render() {\n    const {\n      show\n    } = this.state;\n\n    const handleShow = () => this.setState({\n      show: true\n    });\n\n    const handleClose = () => this.setState({\n      show: false\n    });\n\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Toast, {\n          onClose: handleClose,\n          show: show,\n          delay: 3000,\n          autohide: true,\n          children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"holder.js/20x20?text=%20\",\n              className: \"rounded mr-2\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"mr-auto\",\n              children: \"Bootstrap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"11 mins ago\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: \"Woohoo, you're reading this text in a Toast!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleShow,\n          children: \"Show Toast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default class ToastsExamplesPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            className: \"font-weight-bold\",\n            rel: \"noopener noreferrer\",\n            href: \"https://react-bootstrap.github.io/components/toasts/\",\n            children: \"demos & documentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode1,\n            beforeCodeTitle: \"Basic\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"section-sub\",\n                children: \"To encourage extensible and predictable toasts, we recommend a header and body. Toast headers use display: flex, allowing easy alignment of content thanks to our margin and flexbox utilities.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"section-sub\",\n                children: \"Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your \\u201Ctoasted\\u201D content and strongly encourage a dismiss button.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"separator separator-dashed my-7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Toast, {\n                children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"holder.js/20x20?text=%20\",\n                    className: \"rounded mr-2\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    className: \"mr-auto\",\n                    children: \"Bootstrap\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"11 mins ago\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                  children: \"Hello, world! This is a toast message.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode3,\n            beforeCodeTitle: \"Stacking\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"When you have multiple toasts, we default to vertically stacking them in a readable manner.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Toast, {\n                children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"holder.js/20x20?text=%20\",\n                    className: \"rounded mr-2\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    className: \"mr-auto\",\n                    children: \"Bootstrap\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"just now\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                  children: \"See? Just like this.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Toast, {\n                children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"holder.js/20x20?text=%20\",\n                    className: \"rounded mr-2\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    className: \"mr-auto\",\n                    children: \"Bootstrap\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"2 seconds ago\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                  children: \"Heads up, toasts will stack automatically\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode5,\n            beforeCodeTitle: \"Autohide\",\n            codeBlockHeight: \"400px\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"A Toast can also automatically hide after X milliseconds. For that, use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"autohide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 31\n              }, this), \" prop in combination with\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"delay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), \" the prop to sepecify the delay. But be aware, that it will only trigger the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"onClose\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 47\n              }, this), \" function, you have to set manually the show property.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Example1, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode2,\n            beforeCodeTitle: \"Dismissible\",\n            codeBlockHeight: \"400px\",\n            children: /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode4,\n            beforeCodeTitle: \"Placement\",\n            codeBlockHeight: \"400px\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Place toasts with custom CSS as you need them. The top right is often used for notifications, as is the top middle.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              \"aria-live\": \"polite\",\n              \"aria-atomic\": \"true\",\n              style: {\n                position: \"relative\",\n                minHeight: \"200px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: \"absolute\",\n                  top: 0,\n                  right: 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(Toast, {\n                  children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"holder.js/20x20?text=%20\",\n                      className: \"rounded mr-2\",\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      className: \"mr-auto\",\n                      children: \"Bootstrap\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"just now\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                    children: \"See? Just like this.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Toast, {\n                  children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"holder.js/20x20?text=%20\",\n                      className: \"rounded mr-2\",\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      className: \"mr-auto\",\n                      children: \"Bootstrap\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"2 seconds ago\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                    children: \"Heads up, toasts will stack automatically\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nconst jsCode1 = `\n<Toast>\n  <Toast.Header>\n    <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n    <strong className=\"mr-auto\">Bootstrap</strong>\n    <small>11 mins ago</small>\n  </Toast.Header>\n  <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n</Toast>\n`;\nconst jsCode2 = `\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showA: true,\n      showB: true,\n    };\n  }\n\n  render() {\n    const { showA, showB } = this.state;\n    const toggleShowA = () => this.setState({ showA: !showA });\n    const toggleShowB = () => this.setState({ showB: !showB });\n    return (\n      <Row>\n        <Col xs={6}>\n          <Toast show={showA} onClose={toggleShowA}>\n            <Toast.Header>\n              <img\n                src=\"holder.js/20x20?text=%20\"\n                className=\"rounded mr-2\"\n                alt=\"\"\n              />\n              <strong className=\"mr-auto\">Bootstrap</strong>\n              <small>11 mins ago</small>\n            </Toast.Header>\n            <Toast.Body>\n              Woohoo, you're reading this text in a Toast!\n            </Toast.Body>\n          </Toast>\n        </Col>\n        <Col xs={6}>\n          <Button onClick={toggleShowA}>\n            Toggle Toast <strong>with</strong> Animation\n          </Button>\n        </Col>\n        <Col xs={6} className=\"my-1\">\n          <Toast onClose={toggleShowB} show={showB} animation={false}>\n            <Toast.Header>\n              <img\n                src=\"holder.js/20x20?text=%20\"\n                className=\"rounded mr-2\"\n                alt=\"\"\n              />\n              <strong className=\"mr-auto\">Bootstrap</strong>\n              <small>11 mins ago</small>\n            </Toast.Header>\n            <Toast.Body>\n              Woohoo, you're reading this text in a Toast!\n            </Toast.Body>\n          </Toast>\n        </Col>\n        <Col xs={6}>\n          <Button onClick={toggleShowB}>\n            Toggle Toast <strong>without</strong> Animation\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nrender(<Example />);\n`;\nconst jsCode3 = `\n<>\n  <Toast>\n    <Toast.Header>\n      <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n      <strong className=\"mr-auto\">Bootstrap</strong>\n      <small>just now</small>\n    </Toast.Header>\n    <Toast.Body>See? Just like this.</Toast.Body>\n  </Toast>\n  <Toast>\n    <Toast.Header>\n      <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n      <strong className=\"mr-auto\">Bootstrap</strong>\n      <small>2 seconds ago</small>\n    </Toast.Header>\n    <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\n  </Toast>\n</>\n`;\nconst jsCode4 = `\n<div\n  aria-live=\"polite\"\n  aria-atomic=\"true\"\n  style={{\n    position: 'relative',\n    minHeight: '200px',\n  }}\n>\n  <div\n    style={{\n      position: 'absolute',\n      top: 0,\n      right: 0,\n    }}\n  >\n    <Toast>\n      <Toast.Header>\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n        <strong className=\"mr-auto\">Bootstrap</strong>\n        <small>just now</small>\n      </Toast.Header>\n      <Toast.Body>See? Just like this.</Toast.Body>\n    </Toast>\n    <Toast>\n      <Toast.Header>\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n        <strong className=\"mr-auto\">Bootstrap</strong>\n        <small>2 seconds ago</small>\n      </Toast.Header>\n      <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\n    </Toast>\n  </div>\n</div>\n`;\nconst jsCode5 = `\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n    };\n  }\n\n  render() {\n    const { show } = this.state;\n    const handleShow = () => this.setState({ show: true });\n    const handleClose = () => this.setState({ show: false });\n    return (\n      <Row>\n        <Col xs={6}>\n          <Toast onClose={handleClose} show={show} delay={3000} autohide>\n            <Toast.Header>\n              <img\n                src=\"holder.js/20x20?text=%20\"\n                className=\"rounded mr-2\"\n                alt=\"\"\n              />\n              <strong className=\"mr-auto\">Bootstrap</strong>\n              <small>11 mins ago</small>\n            </Toast.Header>\n            <Toast.Body>\n              Woohoo, you're reading this text in a Toast!\n            </Toast.Body>\n          </Toast>\n        </Col>\n        <Col xs={6}>\n          <Button onClick={handleShow}>Show Toast</Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nrender(<Example />);\n`;","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/ReactBootstrapExamples/ToastsExamplesPage.js"],"names":["React","Button","Toast","Col","Row","Notice","KTCodeExample","Example","Component","constructor","props","state","showA","showB","render","toggleShowA","setState","toggleShowB","Example1","show","handleShow","handleClose","ToastsExamplesPage","jsCode1","jsCode3","jsCode5","jsCode2","jsCode4","position","minHeight","top","right"],"mappings":"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ADF,eAME;AAAQ,sBAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAUE,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA,oBADF;AA6KD;;AA/K6D;AAkLhE,MAAMR,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAUA,MAAMG,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhEA;AAiEA,MAAMF,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAoBA,MAAMG,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlCA;AAmCA,MAAMF,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxCA","sourcesContent":["import React from \"react\";\r\nimport {Button, Toast, Col, Row} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showA: true,\r\n      showB: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { showA, showB } = this.state;\r\n    const toggleShowA = () => this.setState({ showA: !showA });\r\n    const toggleShowB = () => this.setState({ showB: !showB });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast show={showA} onClose={toggleShowA}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowA}>\r\n            Toggle Toast <strong>with</strong> Animation\r\n          </Button>\r\n        </Col>\r\n        <Col xs={6} className=\"my-1\">\r\n          <Toast onClose={toggleShowB} show={showB} animation={false}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowB}>\r\n            Toggle Toast <strong>without</strong> Animation\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nclass Example1 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.state;\r\n    const handleShow = () => this.setState({ show: true });\r\n    const handleClose = () => this.setState({ show: false });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast onClose={handleClose} show={show} delay={3000} autohide>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={handleShow}>Show Toast</Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class ToastsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Push notifications to your visitors with a toast, a lightweight and\r\n            easily customizable alert message.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/toasts/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic\">\r\n              <div className=\"section\">\r\n                <span className=\"section-sub\">\r\n                  To encourage extensible and predictable toasts, we recommend a\r\n                  header and body. Toast headers use display: flex, allowing\r\n                  easy alignment of content thanks to our margin and flexbox\r\n                  utilities.\r\n                </span>\r\n                <p className=\"section-sub\">\r\n                  Toasts are as flexible as you need and have very little\r\n                  required markup. At a minimum, we require a single element to\r\n                  contain your “toasted” content and strongly encourage a\r\n                  dismiss button.\r\n                </p>\r\n                <div className=\"separator separator-dashed my-7\"></div>\r\n                <Toast>\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Bootstrap</strong>\r\n                    <small>11 mins ago</small>\r\n                  </Toast.Header>\r\n                  <Toast.Body>\r\n                    Hello, world! This is a toast message.\r\n                  </Toast.Body>\r\n                </Toast>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Stacking\">\r\n              <span>\r\n                When you have multiple toasts, we default to vertically stacking\r\n                them in a readable manner.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Toast>\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Bootstrap</strong>\r\n                    <small>just now</small>\r\n                  </Toast.Header>\r\n                  <Toast.Body>See? Just like this.</Toast.Body>\r\n                </Toast>\r\n                <Toast>\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Bootstrap</strong>\r\n                    <small>2 seconds ago</small>\r\n                  </Toast.Header>\r\n                  <Toast.Body>\r\n                    Heads up, toasts will stack automatically\r\n                  </Toast.Body>\r\n                </Toast>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode5}\r\n              beforeCodeTitle=\"Autohide\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                A Toast can also automatically hide after X milliseconds. For\r\n                that, use the <code>autohide</code> prop in combination with{\" \"}\r\n                <code>delay</code> the prop to sepecify the delay. But be aware,\r\n                that it will only trigger the <code>onClose</code> function, you\r\n                have to set manually the show property.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example1 />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Dismissible\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <Example />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode4}\r\n              beforeCodeTitle=\"Placement\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                Place toasts with custom CSS as you need them. The top right is\r\n                often used for notifications, as is the top middle.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div\r\n                aria-live=\"polite\"\r\n                aria-atomic=\"true\"\r\n                style={{\r\n                  position: \"relative\",\r\n                  minHeight: \"200px\"\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    right: 0\r\n                  }}\r\n                >\r\n                  <Toast>\r\n                    <Toast.Header>\r\n                      <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                      />\r\n                      <strong className=\"mr-auto\">Bootstrap</strong>\r\n                      <small>just now</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>See? Just like this.</Toast.Body>\r\n                  </Toast>\r\n                  <Toast>\r\n                    <Toast.Header>\r\n                      <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                      />\r\n                      <strong className=\"mr-auto\">Bootstrap</strong>\r\n                      <small>2 seconds ago</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>\r\n                      Heads up, toasts will stack automatically\r\n                    </Toast.Body>\r\n                  </Toast>\r\n                </div>\r\n              </div>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Toast>\r\n  <Toast.Header>\r\n    <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n    <strong className=\"mr-auto\">Bootstrap</strong>\r\n    <small>11 mins ago</small>\r\n  </Toast.Header>\r\n  <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\r\n</Toast>\r\n`;\r\nconst jsCode2 = `\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showA: true,\r\n      showB: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { showA, showB } = this.state;\r\n    const toggleShowA = () => this.setState({ showA: !showA });\r\n    const toggleShowB = () => this.setState({ showB: !showB });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast show={showA} onClose={toggleShowA}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowA}>\r\n            Toggle Toast <strong>with</strong> Animation\r\n          </Button>\r\n        </Col>\r\n        <Col xs={6} className=\"my-1\">\r\n          <Toast onClose={toggleShowB} show={showB} animation={false}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowB}>\r\n            Toggle Toast <strong>without</strong> Animation\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <Toast>\r\n    <Toast.Header>\r\n      <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n      <strong className=\"mr-auto\">Bootstrap</strong>\r\n      <small>just now</small>\r\n    </Toast.Header>\r\n    <Toast.Body>See? Just like this.</Toast.Body>\r\n  </Toast>\r\n  <Toast>\r\n    <Toast.Header>\r\n      <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n      <strong className=\"mr-auto\">Bootstrap</strong>\r\n      <small>2 seconds ago</small>\r\n    </Toast.Header>\r\n    <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\r\n  </Toast>\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<div\r\n  aria-live=\"polite\"\r\n  aria-atomic=\"true\"\r\n  style={{\r\n    position: 'relative',\r\n    minHeight: '200px',\r\n  }}\r\n>\r\n  <div\r\n    style={{\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n    }}\r\n  >\r\n    <Toast>\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n        <strong className=\"mr-auto\">Bootstrap</strong>\r\n        <small>just now</small>\r\n      </Toast.Header>\r\n      <Toast.Body>See? Just like this.</Toast.Body>\r\n    </Toast>\r\n    <Toast>\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n        <strong className=\"mr-auto\">Bootstrap</strong>\r\n        <small>2 seconds ago</small>\r\n      </Toast.Header>\r\n      <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\r\n    </Toast>\r\n  </div>\r\n</div>\r\n`;\r\nconst jsCode5 = `\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.state;\r\n    const handleShow = () => this.setState({ show: true });\r\n    const handleClose = () => this.setState({ show: false });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast onClose={handleClose} show={show} delay={3000} autohide>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={handleShow}>Show Toast</Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}