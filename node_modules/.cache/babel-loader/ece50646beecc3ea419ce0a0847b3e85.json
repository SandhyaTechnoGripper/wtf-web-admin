{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\data-displays\\\\TablesExamplesPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, lighten, withStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, Checkbox, Toolbar, Typography, Tooltip, IconButton, TableSortLabel, TablePagination, Switch, FormControlLabel, TableFooter } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 650\n  }\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Eclair\", 262, 16.0, 24, 6.0), createData(\"Cupcake\", 305, 3.7, 67, 4.3), createData(\"Gingerbread\", 356, 16.0, 49, 3.9)]; // Example 2\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    width: \"100%\",\n    overflowX: \"auto\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 650\n  }\n})); // Example 3\n\nfunction desc3(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort3(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc3(a, b, orderBy) : (a, b) => -desc3(a, b, orderBy);\n}\n\nconst headRows3 = [{\n  id: \"name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Dessert (100g serving)\"\n}, {\n  id: \"calories\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Calories\"\n}, {\n  id: \"fat\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Fat (g)\"\n}, {\n  id: \"carbs\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Carbs (g)\"\n}, {\n  id: \"protein\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Protein (g)\"\n}];\n\nfunction EnhancedTableHead3(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            \"aria-label\": \"Select all desserts\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), headRows3.map(row => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: row.numeric ? \"right\" : \"left\",\n        padding: row.disablePadding ? \"none\" : \"default\",\n        sortDirection: orderBy === row.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === row.id,\n          direction: order,\n          onClick: createSortHandler(row.id),\n          children: row.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, row.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead3;\nEnhancedTableHead3.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles3 = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n}));\n\nconst EnhancedTableToolbar3 = props => {\n  _s();\n\n  const classes = useToolbarStyles3();\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"inherit\",\n        variant: \"subtitle1\",\n        children: [numSelected, \" selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        id: \"tableTitle\",\n        children: \"Nutrition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.spacer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Delete\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Delete\",\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Filter list\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Filter list\",\n          children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EnhancedTableToolbar3, \"2fzXaSRIZ5/GTILPQbk/TngsU1A=\", false, function () {\n  return [useToolbarStyles3];\n});\n\n_c2 = EnhancedTableToolbar3;\nEnhancedTableToolbar3.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles3 = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  }\n})); // Example 4\n\nconst useStyles4 = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  }\n}));\nconst StyledTableCell4 = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow4 = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow); // Example 5\n\nconst useStyles52 = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  table: {\n    minWidth: 500\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  }\n}));\nconst useStyles51 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions5(props) {\n  _s2();\n\n  const classes = useStyles51();\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onChangePage\n  } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"First Page\",\n      children: theme.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"Previous Page\",\n      children: theme.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"Next Page\",\n      children: theme.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"Last Page\",\n      children: theme.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TablePaginationActions5, \"3Z0oy8ayEIsFtI02N3gJFplHE8s=\", false, function () {\n  return [useStyles51, useTheme];\n});\n\n_c3 = TablePaginationActions5;\nTablePaginationActions5.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction createData5(name, calories, fat) {\n  return {\n    name,\n    calories,\n    fat\n  };\n}\n\nconst rows5 = [createData5(\"Cupcake\", 305, 3.7), createData5(\"Donut\", 452, 25.0), createData5(\"Eclair\", 262, 16.0), createData5(\"Frozen yoghurt\", 159, 6.0), createData5(\"Gingerbread\", 356, 16.0), createData5(\"Honeycomb\", 408, 3.2), createData5(\"Ice cream sandwich\", 237, 9.0), createData5(\"Jelly Bean\", 375, 0.0), createData5(\"KitKat\", 518, 26.0), createData5(\"Lollipop\", 392, 0.2), createData5(\"Marshmallow\", 318, 0), createData5(\"Nougat\", 360, 19.0), createData5(\"Oreo\", 437, 18.0)].sort((a, b) => a.calories < b.calories ? -1 : 1); // Example 6\n\nconst TAX_RATE = 0.07;\nconst useStyles6 = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  }\n}));\n\nfunction ccyFormat6(num) {\n  return `${num.toFixed(2)}`;\n}\n\nfunction priceRow6(qty, unit) {\n  return qty * unit;\n}\n\nfunction createRow6(desc, qty, unit) {\n  const price = priceRow6(qty, unit);\n  return {\n    desc,\n    qty,\n    unit,\n    price\n  };\n}\n\nfunction subtotal6(items) {\n  return items.map(({\n    price\n  }) => price).reduce((sum, i) => sum + i, 0);\n}\n\nconst rows6 = [createRow6(\"Paperclips (Box)\", 100, 1.15), createRow6(\"Paper (Case)\", 10, 45.99), createRow6(\"Waste Basket\", 2, 17.99)];\nconst invoiceSubtotal6 = subtotal6(rows6);\nconst invoiceTaxes6 = TAX_RATE * invoiceSubtotal6;\nconst invoiceTotal6 = invoiceTaxes6 + invoiceSubtotal6;\nexport default function TablesExamplesPage() {\n  _s3();\n\n  // Example 1\n  const classes1 = useStyles1(); // Example 2\n\n  const classes2 = useStyles2(); // Example 3\n\n  const classes3 = useStyles3();\n  const [order3, setOrder3] = React.useState(\"asc\");\n  const [orderBy3, setOrderBy3] = React.useState(\"calories\");\n  const [selected3, setSelected3] = React.useState([]);\n  const [page3, setPage3] = React.useState(0);\n  const [dense3, setDense3] = React.useState(false);\n  const [rowsPerPage3, setRowsPerPage3] = React.useState(5);\n\n  function handleRequestSort3(event, property) {\n    const isDesc = orderBy3 === property && order3 === \"desc\";\n    setOrder3(isDesc ? \"asc\" : \"desc\");\n    setOrderBy3(property);\n  }\n\n  function handleSelectAllClick3(event) {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected3(newSelecteds);\n      return;\n    }\n\n    setSelected3([]);\n  }\n\n  function handleClick3(event, name) {\n    const selectedIndex = selected3.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected3, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected3.slice(1));\n    } else if (selectedIndex === selected3.length - 1) {\n      newSelected = newSelected.concat(selected3.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected3.slice(0, selectedIndex), selected3.slice(selectedIndex + 1));\n    }\n\n    setSelected3(newSelected);\n  }\n\n  function handleChangePage3(event, newPage) {\n    setPage3(newPage);\n  }\n\n  function handleChangeRowsPerPage3(event) {\n    setRowsPerPage3(+event.target.value);\n  }\n\n  function handleChangeDense3(event) {\n    setDense3(event.target.checked);\n  }\n\n  const isSelected3 = name => selected3.indexOf(name) !== -1;\n\n  const emptyRows3 = rowsPerPage3 - Math.min(rowsPerPage3, rows.length - page3 * rowsPerPage3); // Example 4\n\n  const classes4 = useStyles4(); // Example 5\n\n  const classes5 = useStyles52();\n  const [page5, setPage5] = React.useState(0);\n  const [rowsPerPage5, setRowsPerPage5] = React.useState(5);\n  const emptyRows5 = rowsPerPage5 - Math.min(rowsPerPage5, rows5.length - page5 * rowsPerPage5);\n\n  function handleChangePage5(event, newPage) {\n    setPage5(newPage);\n  }\n\n  function handleChangeRowsPerPage5(event) {\n    setRowsPerPage5(parseInt(event.target.value, 10));\n  } // Example 6\n\n\n  const classes6 = useStyles6();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notice, {\n      icon: \"flaticon-warning font-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Data tables display sets of data. They can be fully customized.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"font-weight-bold\",\n          rel: \"noopener noreferrer\",\n          href: \"https://material-ui.com/components/tables/\",\n          children: \"demos & documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode1,\n          beforeCodeTitle: \"Simple Table\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"A simple example with no frills.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes1.root,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: classes1.table,\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Dessert (100g serving)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Calories\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Fat\\xA0(g)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Carbs\\xA0(g)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Protein\\xA0(g)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: row.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.calories\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.fat\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 577,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.carbs\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.protein\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 23\n                  }, this)]\n                }, row.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode3,\n          beforeCodeTitle: \"Sorting & Selecting\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"This example demonstrates the use of \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 52\n            }, this), \" and clickable rows for selection, with a custom \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Toolbar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 59\n            }, this), \". It uses the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"TableSortLabel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 27\n            }, this), \" component to help style column headings.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes3.root,\n            children: [/*#__PURE__*/_jsxDEV(Paper, {\n              className: classes3.paper,\n              children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar3, {\n                numSelected: selected3.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes3.tableWrapper,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  className: classes3.table,\n                  \"aria-labelledby\": \"tableTitle\",\n                  size: dense3 ? \"small\" : \"medium\",\n                  children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead3, {\n                    numSelected: selected3.length,\n                    order: order3,\n                    orderBy: orderBy3,\n                    onSelectAllClick: handleSelectAllClick3,\n                    onRequestSort: handleRequestSort3,\n                    rowCount: rows.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: [stableSort3(rows, getSorting(order3, orderBy3)).slice(page3 * rowsPerPage3, page3 * rowsPerPage3 + rowsPerPage3).map((row, index) => {\n                      const isItemSelected = isSelected3(row.name);\n                      const labelId = `enhanced-table-checkbox-${index}`;\n                      return /*#__PURE__*/_jsxDEV(TableRow, {\n                        hover: true,\n                        onClick: event => handleClick3(event, row.name),\n                        role: \"checkbox\",\n                        \"aria-checked\": isItemSelected,\n                        tabIndex: -1,\n                        selected: isItemSelected,\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          padding: \"checkbox\",\n                          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                            checked: isItemSelected,\n                            inputProps: {\n                              \"aria-labelledby\": labelId\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 637,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 636,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          component: \"th\",\n                          id: labelId,\n                          scope: \"row\",\n                          padding: \"none\",\n                          children: row.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 644,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"right\",\n                          children: row.calories\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 652,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"right\",\n                          children: row.fat\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 655,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"right\",\n                          children: row.carbs\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 656,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"right\",\n                          children: row.protein\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 657,\n                          columnNumber: 31\n                        }, this)]\n                      }, row.name, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 627,\n                        columnNumber: 29\n                      }, this);\n                    }), emptyRows3 > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                      style: {\n                        height: 49 * emptyRows3\n                      },\n                      children: /*#__PURE__*/_jsxDEV(TableCell, {\n                        colSpan: 6\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 663,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n                rowsPerPageOptions: [5, 10, 25],\n                component: \"div\",\n                count: rows.length,\n                rowsPerPage: rowsPerPage3,\n                page: page3,\n                backIconButtonProps: {\n                  \"aria-label\": \"Previous Page\"\n                },\n                nextIconButtonProps: {\n                  \"aria-label\": \"Next Page\"\n                },\n                onChangePage: handleChangePage3,\n                onChangeRowsPerPage: handleChangeRowsPerPage3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: dense3,\n                onChange: handleChangeDense3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this),\n              label: \"Dense padding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode5,\n          beforeCodeTitle: \"Custom Table Pagination Action\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 19\n            }, this), \" property of the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"TablePagination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 15\n            }, this), \" component allows the implementation of custom actions.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes5.root,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes5.tableWrapper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                className: classes5.table,\n                children: [/*#__PURE__*/_jsxDEV(TableBody, {\n                  children: [rows5.slice(page5 * rowsPerPage5, page5 * rowsPerPage5 + rowsPerPage5).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      children: row.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 716,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.calories\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 719,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.fat\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 720,\n                      columnNumber: 27\n                    }, this)]\n                  }, row.name, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 715,\n                    columnNumber: 25\n                  }, this)), emptyRows5 > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                    style: {\n                      height: 48 * emptyRows5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TableCell, {\n                      colSpan: 6\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 725,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: /*#__PURE__*/_jsxDEV(TablePagination, {\n                      rowsPerPageOptions: [5, 10, 25],\n                      colSpan: 3,\n                      count: rows5.length,\n                      rowsPerPage: rowsPerPage5,\n                      page: page5,\n                      SelectProps: {\n                        inputProps: {\n                          \"aria-label\": \"Rows per page\"\n                        },\n                        native: true\n                      },\n                      onChangePage: handleChangePage5,\n                      onChangeRowsPerPage: handleChangeRowsPerPage5,\n                      ActionsComponent: TablePaginationActions5\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 732,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode2,\n          beforeCodeTitle: \"Dense Table\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"A simple example of a dense table with no frills.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes2.root,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes2.paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                className: classes2.table,\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Dessert (100g serving)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 766,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Calories\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 767,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Fat\\xA0(g)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 768,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Carbs\\xA0(g)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 769,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Protein\\xA0(g)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 770,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 765,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      children: row.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 776,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.calories\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 779,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.fat\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 780,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.carbs\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 781,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.protein\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 782,\n                      columnNumber: 25\n                    }, this)]\n                  }, row.name, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 775,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode4,\n          beforeCodeTitle: \"Customized tables\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Here is an example of customizing the component.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes4.root,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: classes4.table,\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(StyledTableCell4, {\n                    children: \"Dessert (100g serving)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 802,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell4, {\n                    align: \"right\",\n                    children: \"Calories\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 803,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell4, {\n                    align: \"right\",\n                    children: \"Fat\\xA0(g)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell4, {\n                    align: \"right\",\n                    children: \"Carbs\\xA0(g)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 807,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell4, {\n                    align: \"right\",\n                    children: \"Protein\\xA0(g)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 801,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: rows.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow4, {\n                  children: [/*#__PURE__*/_jsxDEV(StyledTableCell4, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: row.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell4, {\n                    align: \"right\",\n                    children: row.calories\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 821,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell4, {\n                    align: \"right\",\n                    children: row.fat\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 824,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell4, {\n                    align: \"right\",\n                    children: row.carbs\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 827,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell4, {\n                    align: \"right\",\n                    children: row.protein\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 830,\n                    columnNumber: 23\n                  }, this)]\n                }, row.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode6,\n          beforeCodeTitle: \"Spanning Table\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"A simple example with spanning rows & columns.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes6.root,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: classes6.table,\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Desc\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 851,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Qty.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 852,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"@\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 853,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 854,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 850,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [rows6.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: row.desc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 860,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.qty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 861,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.unit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 862,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: ccyFormat6(row.price)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 863,\n                    columnNumber: 23\n                  }, this)]\n                }, row.desc, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 859,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    rowSpan: 3\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 870,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 2,\n                    children: \"Subtotal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 871,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: ccyFormat6(invoiceSubtotal6)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 872,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 869,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Tax\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 877,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: `${(TAX_RATE * 100).toFixed(0)} %`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 878,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: ccyFormat6(invoiceTaxes6)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 876,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 2,\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 886,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: ccyFormat6(invoiceTotal6)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 887,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 885,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s3(TablesExamplesPage, \"im5KaXmzipwCO2p/oAb0FnAut5Y=\", false, function () {\n  return [useStyles1, useStyles2, useStyles3, useStyles4, useStyles52, useStyles6];\n});\n\n_c4 = TablesExamplesPage;\nconst jsCode1 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nexport default function SimpleTable() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Dessert (100g serving)</TableCell>\n            <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    width: '100%',\n    overflowX: 'auto',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nexport default function DenseTable() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Table className={classes.table} size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n}\n`;\nconst jsCode3 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headRows = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'Select all desserts' }}\n          />\n        </TableCell>\n        {headRows.map(row => (\n          <TableCell\n            key={row.id}\n            align={row.numeric ? 'right' : 'left'}\n            padding={row.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === row.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === row.id}\n              direction={order}\n              onClick={createSortHandler(row.id)}\n            >\n              {row.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"Delete\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"Filter list\">\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }\n\n  function handleClick(event, name) {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n  }\n\n  function handleChangeDense(event) {\n    setDense(event.target.checked);\n  }\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = \\`enhanced-table-checkbox-\\${index}\\`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n`;\nconst jsCode4 = `\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n}));\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\n            <StyledTableCell align=\"right\">Calories</StyledTableCell>\n            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\n            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\n            <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n`;\nconst jsCode5 = `\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"First Page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"Next Page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"Last Page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7),\n  createData('Donut', 452, 25.0),\n  createData('Eclair', 262, 16.0),\n  createData('Frozen yoghurt', 159, 6.0),\n  createData('Gingerbread', 356, 16.0),\n  createData('Honeycomb', 408, 3.2),\n  createData('Ice cream sandwich', 237, 9.0),\n  createData('Jelly Bean', 375, 0.0),\n  createData('KitKat', 518, 26.0),\n  createData('Lollipop', 392, 0.2),\n  createData('Marshmallow', 318, 0),\n  createData('Nougat', 360, 19.0),\n  createData('Oreo', 437, 18.0),\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function CustomPaginationActionsTable() {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'Rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n`;\nconst jsCode6 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst TAX_RATE = 0.07;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n}));\n\nfunction ccyFormat(num) {\n  return \\`\\${num.toFixed(2)}\\`;\n}\n\nfunction priceRow(qty, unit) {\n  return qty * unit;\n}\n\nfunction createRow(desc, qty, unit) {\n  const price = priceRow(qty, unit);\n  return { desc, qty, unit, price };\n}\n\nfunction subtotal(items) {\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\n}\n\nconst rows = [\n  createRow('Paperclips (Box)', 100, 1.15),\n  createRow('Paper (Case)', 10, 45.99),\n  createRow('Waste Basket', 2, 17.99),\n];\n\nconst invoiceSubtotal = subtotal(rows);\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\n\nexport default function SpanningTable() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Desc</TableCell>\n            <TableCell align=\"right\">Qty.</TableCell>\n            <TableCell align=\"right\">@</TableCell>\n            <TableCell align=\"right\">Price</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.desc}>\n              <TableCell>{row.desc}</TableCell>\n              <TableCell align=\"right\">{row.qty}</TableCell>\n              <TableCell align=\"right\">{row.unit}</TableCell>\n              <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={3} />\n            <TableCell colSpan={2}>Subtotal</TableCell>\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Tax</TableCell>\n            <TableCell align=\"right\">{\\`\\${(TAX_RATE * 100).toFixed(0)} %\\`}</TableCell>\n            <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell colSpan={2}>Total</TableCell>\n            <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n`;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EnhancedTableHead3\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar3\");\n$RefreshReg$(_c3, \"TablePaginationActions5\");\n$RefreshReg$(_c4, \"TablesExamplesPage\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/GoogleMaterialExamples/data-displays/TablesExamplesPage.js"],"names":["React","clsx","PropTypes","makeStyles","lighten","withStyles","useTheme","Paper","Table","TableHead","TableRow","TableCell","TableBody","Checkbox","Toolbar","Typography","Tooltip","IconButton","TableSortLabel","TablePagination","Switch","FormControlLabel","TableFooter","DeleteIcon","FilterListIcon","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","Notice","KTCodeExample","useStyles1","theme","root","width","marginTop","spacing","overflowX","table","minWidth","createData","name","calories","fat","carbs","protein","rows","useStyles2","paper","marginBottom","desc3","a","b","orderBy","stableSort3","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headRows3","id","numeric","disablePadding","label","EnhancedTableHead3","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","row","propTypes","number","isRequired","func","string","useToolbarStyles3","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar3","classes","useStyles3","tableWrapper","useStyles4","StyledTableCell4","head","common","black","white","body","fontSize","StyledTableRow4","background","default","useStyles52","useStyles51","flexShrink","marginLeft","TablePaginationActions5","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","createData5","rows5","TAX_RATE","useStyles6","ccyFormat6","num","toFixed","priceRow6","qty","unit","createRow6","desc","price","subtotal6","items","reduce","sum","i","rows6","invoiceSubtotal6","invoiceTaxes6","invoiceTotal6","TablesExamplesPage","classes1","classes2","classes3","order3","setOrder3","useState","orderBy3","setOrderBy3","selected3","setSelected3","page3","setPage3","dense3","setDense3","rowsPerPage3","setRowsPerPage3","handleRequestSort3","isDesc","handleSelectAllClick3","target","checked","newSelecteds","n","handleClick3","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage3","newPage","handleChangeRowsPerPage3","value","handleChangeDense3","isSelected3","emptyRows3","min","classes4","classes5","page5","setPage5","rowsPerPage5","setRowsPerPage5","emptyRows5","handleChangePage5","handleChangeRowsPerPage5","parseInt","classes6","jsCode1","jsCode3","isItemSelected","labelId","height","jsCode5","inputProps","native","jsCode2","jsCode4","jsCode6"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjEA;AAkEA,MAAMQ,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvEA;AAwEA,MAAMP,OAAO,GAAI;AACjhWA;AAiWA,MAAMQ,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnFA;AAoFA,MAAMJ,OAAO,GAAI;AACjgLA,MAAMK,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7FA","sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  makeStyles,\r\n  lighten,\r\n  withStyles,\r\n  useTheme\r\n} from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Checkbox,\r\n  Toolbar,\r\n  Typography,\r\n  Tooltip,\r\n  IconButton,\r\n  TableSortLabel,\r\n  TablePagination,\r\n  Switch,\r\n  FormControlLabel,\r\n  TableFooter\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9)\r\n];\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    width: \"100%\",\r\n    overflowX: \"auto\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\n// Example 3\r\nfunction desc3(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort3(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc3(a, b, orderBy)\r\n    : (a, b) => -desc3(a, b, orderBy);\r\n}\r\n\r\nconst headRows3 = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\"\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" }\r\n];\r\n\r\nfunction EnhancedTableHead3(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"Select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headRows3.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? \"right\" : \"left\"}\r\n            padding={row.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead3.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  spacer: {\r\n    flex: \"1 1 100%\"\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary\r\n  },\r\n  title: {\r\n    flex: \"0 0 auto\"\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar3 = props => {\r\n  const classes = useToolbarStyles3();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar3.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nconst StyledTableCell4 = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow4 = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\n// Example 5\r\nconst useStyles52 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  table: {\r\n    minWidth: 500\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  }\r\n}));\r\n\r\nconst useStyles51 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5)\r\n  }\r\n}));\r\n\r\nfunction TablePaginationActions5(props) {\r\n  const classes = useStyles51();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"First Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"Previous Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Next Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Last Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions5.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired\r\n};\r\n\r\nfunction createData5(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows5 = [\r\n  createData5(\"Cupcake\", 305, 3.7),\r\n  createData5(\"Donut\", 452, 25.0),\r\n  createData5(\"Eclair\", 262, 16.0),\r\n  createData5(\"Frozen yoghurt\", 159, 6.0),\r\n  createData5(\"Gingerbread\", 356, 16.0),\r\n  createData5(\"Honeycomb\", 408, 3.2),\r\n  createData5(\"Ice cream sandwich\", 237, 9.0),\r\n  createData5(\"Jelly Bean\", 375, 0.0),\r\n  createData5(\"KitKat\", 518, 26.0),\r\n  createData5(\"Lollipop\", 392, 0.2),\r\n  createData5(\"Marshmallow\", 318, 0),\r\n  createData5(\"Nougat\", 360, 19.0),\r\n  createData5(\"Oreo\", 437, 18.0)\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\n// Example 6\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles6 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nfunction ccyFormat6(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow6(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow6(desc, qty, unit) {\r\n  const price = priceRow6(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal6(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows6 = [\r\n  createRow6(\"Paperclips (Box)\", 100, 1.15),\r\n  createRow6(\"Paper (Case)\", 10, 45.99),\r\n  createRow6(\"Waste Basket\", 2, 17.99)\r\n];\r\n\r\nconst invoiceSubtotal6 = subtotal6(rows6);\r\nconst invoiceTaxes6 = TAX_RATE * invoiceSubtotal6;\r\nconst invoiceTotal6 = invoiceTaxes6 + invoiceSubtotal6;\r\n\r\nexport default function TablesExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [order3, setOrder3] = React.useState(\"asc\");\r\n  const [orderBy3, setOrderBy3] = React.useState(\"calories\");\r\n  const [selected3, setSelected3] = React.useState([]);\r\n  const [page3, setPage3] = React.useState(0);\r\n  const [dense3, setDense3] = React.useState(false);\r\n  const [rowsPerPage3, setRowsPerPage3] = React.useState(5);\r\n\r\n  function handleRequestSort3(event, property) {\r\n    const isDesc = orderBy3 === property && order3 === \"desc\";\r\n    setOrder3(isDesc ? \"asc\" : \"desc\");\r\n    setOrderBy3(property);\r\n  }\r\n\r\n  function handleSelectAllClick3(event) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected3(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected3([]);\r\n  }\r\n\r\n  function handleClick3(event, name) {\r\n    const selectedIndex = selected3.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected3, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected3.slice(1));\r\n    } else if (selectedIndex === selected3.length - 1) {\r\n      newSelected = newSelected.concat(selected3.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected3.slice(0, selectedIndex),\r\n        selected3.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected3(newSelected);\r\n  }\r\n\r\n  function handleChangePage3(event, newPage) {\r\n    setPage3(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage3(event) {\r\n    setRowsPerPage3(+event.target.value);\r\n  }\r\n\r\n  function handleChangeDense3(event) {\r\n    setDense3(event.target.checked);\r\n  }\r\n\r\n  const isSelected3 = name => selected3.indexOf(name) !== -1;\r\n\r\n  const emptyRows3 =\r\n    rowsPerPage3 - Math.min(rowsPerPage3, rows.length - page3 * rowsPerPage3);\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  // Example 5\r\n  const classes5 = useStyles52();\r\n  const [page5, setPage5] = React.useState(0);\r\n  const [rowsPerPage5, setRowsPerPage5] = React.useState(5);\r\n\r\n  const emptyRows5 =\r\n    rowsPerPage5 - Math.min(rowsPerPage5, rows5.length - page5 * rowsPerPage5);\r\n\r\n  function handleChangePage5(event, newPage) {\r\n    setPage5(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage5(event) {\r\n    setRowsPerPage5(parseInt(event.target.value, 10));\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Data tables display sets of data. They can be fully customized.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/tables/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example with no frills.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes1.root}>\r\n              <Table className={classes1.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Dessert (100g serving)</TableCell>\r\n                    <TableCell align=\"right\">Calories</TableCell>\r\n                    <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                    <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                    <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map(row => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Sorting & Selecting\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              This example demonstrates the use of <code>Checkbox</code> and\r\n              clickable rows for selection, with a custom <code>Toolbar</code>.\r\n              It uses the <code>TableSortLabel</code> component to help style\r\n              column headings.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes3.root}>\r\n              <Paper className={classes3.paper}>\r\n                <EnhancedTableToolbar3 numSelected={selected3.length} />\r\n                <div className={classes3.tableWrapper}>\r\n                  <Table\r\n                    className={classes3.table}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    size={dense3 ? \"small\" : \"medium\"}\r\n                  >\r\n                    <EnhancedTableHead3\r\n                      numSelected={selected3.length}\r\n                      order={order3}\r\n                      orderBy={orderBy3}\r\n                      onSelectAllClick={handleSelectAllClick3}\r\n                      onRequestSort={handleRequestSort3}\r\n                      rowCount={rows.length}\r\n                    />\r\n                    <TableBody>\r\n                      {stableSort3(rows, getSorting(order3, orderBy3))\r\n                        .slice(\r\n                          page3 * rowsPerPage3,\r\n                          page3 * rowsPerPage3 + rowsPerPage3\r\n                        )\r\n                        .map((row, index) => {\r\n                          const isItemSelected = isSelected3(row.name);\r\n                          const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              onClick={event => handleClick3(event, row.name)}\r\n                              role=\"checkbox\"\r\n                              aria-checked={isItemSelected}\r\n                              tabIndex={-1}\r\n                              key={row.name}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                  checked={isItemSelected}\r\n                                  inputProps={{\r\n                                    \"aria-labelledby\": labelId\r\n                                  }}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell\r\n                                component=\"th\"\r\n                                id={labelId}\r\n                                scope=\"row\"\r\n                                padding=\"none\"\r\n                              >\r\n                                {row.name}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">\r\n                                {row.calories}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">{row.fat}</TableCell>\r\n                              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                              <TableCell align=\"right\">{row.protein}</TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      {emptyRows3 > 0 && (\r\n                        <TableRow style={{ height: 49 * emptyRows3 }}>\r\n                          <TableCell colSpan={6} />\r\n                        </TableRow>\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </div>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={rows.length}\r\n                  rowsPerPage={rowsPerPage3}\r\n                  page={page3}\r\n                  backIconButtonProps={{\r\n                    \"aria-label\": \"Previous Page\"\r\n                  }}\r\n                  nextIconButtonProps={{\r\n                    \"aria-label\": \"Next Page\"\r\n                  }}\r\n                  onChangePage={handleChangePage3}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage3}\r\n                />\r\n              </Paper>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch checked={dense3} onChange={handleChangeDense3} />\r\n                }\r\n                label=\"Dense padding\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Custom Table Pagination Action\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The <code>Action</code> property of the{\" \"}\r\n              <code>TablePagination</code> component allows the implementation\r\n              of custom actions.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes5.root}>\r\n              <div className={classes5.tableWrapper}>\r\n                <Table className={classes5.table}>\r\n                  <TableBody>\r\n                    {rows5\r\n                      .slice(\r\n                        page5 * rowsPerPage5,\r\n                        page5 * rowsPerPage5 + rowsPerPage5\r\n                      )\r\n                      .map(row => (\r\n                        <TableRow key={row.name}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{row.calories}</TableCell>\r\n                          <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n\r\n                    {emptyRows5 > 0 && (\r\n                      <TableRow style={{ height: 48 * emptyRows5 }}>\r\n                        <TableCell colSpan={6} />\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        colSpan={3}\r\n                        count={rows5.length}\r\n                        rowsPerPage={rowsPerPage5}\r\n                        page={page5}\r\n                        SelectProps={{\r\n                          inputProps: { \"aria-label\": \"Rows per page\" },\r\n                          native: true\r\n                        }}\r\n                        onChangePage={handleChangePage5}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage5}\r\n                        ActionsComponent={TablePaginationActions5}\r\n                      />\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                </Table>\r\n              </div>\r\n            </Paper>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Dense Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example of a dense table with no frills.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <Paper className={classes2.paper}>\r\n                <Table className={classes2.table} size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Dessert (100g serving)</TableCell>\r\n                      <TableCell align=\"right\">Calories</TableCell>\r\n                      <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                      <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                      <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows.map(row => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </Paper>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Customized tables\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes4.root}>\r\n              <Table className={classes4.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell4>Dessert (100g serving)</StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">Calories</StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Fat&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Carbs&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Protein&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map(row => (\r\n                    <StyledTableRow4 key={row.name}>\r\n                      <StyledTableCell4 component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.calories}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.fat}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.carbs}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.protein}\r\n                      </StyledTableCell4>\r\n                    </StyledTableRow4>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Spanning Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example with spanning rows & columns.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes6.root}>\r\n              <Table className={classes6.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Desc</TableCell>\r\n                    <TableCell align=\"right\">Qty.</TableCell>\r\n                    <TableCell align=\"right\">@</TableCell>\r\n                    <TableCell align=\"right\">Price</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows6.map(row => (\r\n                    <TableRow key={row.desc}>\r\n                      <TableCell>{row.desc}</TableCell>\r\n                      <TableCell align=\"right\">{row.qty}</TableCell>\r\n                      <TableCell align=\"right\">{row.unit}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {ccyFormat6(row.price)}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n\r\n                  <TableRow>\r\n                    <TableCell rowSpan={3} />\r\n                    <TableCell colSpan={2}>Subtotal</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceSubtotal6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Tax</TableCell>\r\n                    <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(\r\n                      0\r\n                    )} %`}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceTaxes6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell colSpan={2}>Total</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceTotal6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function DenseTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Table className={classes.table} size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headRows = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'Select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headRows.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? 'right' : 'left'}\r\n            padding={row.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  function handleRequestSort(event, property) {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  }\r\n\r\n  function handleSelectAllClick(event) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }\r\n\r\n  function handleClick(event, name) {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(+event.target.value);\r\n  }\r\n\r\n  function handleChangeDense(event) {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = \\`enhanced-table-checkbox-\\${index}\\`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Calories</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"First Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Next Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Last Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7),\r\n  createData('Donut', 452, 25.0),\r\n  createData('Eclair', 262, 16.0),\r\n  createData('Frozen yoghurt', 159, 6.0),\r\n  createData('Gingerbread', 356, 16.0),\r\n  createData('Honeycomb', 408, 3.2),\r\n  createData('Ice cream sandwich', 237, 9.0),\r\n  createData('Jelly Bean', 375, 0.0),\r\n  createData('KitKat', 518, 26.0),\r\n  createData('Lollipop', 392, 0.2),\r\n  createData('Marshmallow', 318, 0),\r\n  createData('Nougat', 360, 19.0),\r\n  createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                colSpan={3}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'Rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nfunction ccyFormat(num) {\r\n  return \\`\\${num.toFixed(2)}\\`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow('Paperclips (Box)', 100, 1.15),\r\n  createRow('Paper (Case)', 10, 45.99),\r\n  createRow('Waste Basket', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nexport default function SpanningTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Desc</TableCell>\r\n            <TableCell align=\"right\">Qty.</TableCell>\r\n            <TableCell align=\"right\">@</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.desc}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align=\"right\">{row.qty}</TableCell>\r\n              <TableCell align=\"right\">{row.unit}</TableCell>\r\n              <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align=\"right\">{\\`\\${(TAX_RATE * 100).toFixed(0)} %\\`}</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}