{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\inputs\\\\TextFieldsExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { TextField, MenuItem, FormControl, Input, InputLabel, FormHelperText, OutlinedInput, FilledInput, InputBase, Paper, IconButton, Divider, InputAdornment, Grid } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { fade, withStyles, makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 2\n\nvar useStyles2 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    dense: {\n      marginTop: theme.spacing(2)\n    },\n    menu: {\n      width: 200\n    }\n  };\n}); // Example 3\n\nvar useStyles3 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    }\n  };\n}); // Example 4\n\nvar useStyles4 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      margin: theme.spacing(1)\n    }\n  };\n}); // Example 5\n\nvar useStyles5 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    input: {\n      margin: theme.spacing(1)\n    }\n  };\n}); // Example 6\n\nvar useStyles6 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    }\n  };\n}); // Example 7\n\nvar CssTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"green\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"red\"\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"yellow\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\"\n      }\n    }\n  }\n})(TextField);\nvar BootstrapInput = withStyles(function (theme) {\n  return {\n    root: {\n      \"label + &\": {\n        marginTop: theme.spacing(3)\n      }\n    },\n    input: {\n      borderRadius: 4,\n      position: \"relative\",\n      backgroundColor: theme.palette.common.white,\n      border: \"1px solid #ced4da\",\n      fontSize: 16,\n      width: \"auto\",\n      padding: \"10px 12px\",\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n      \"&:focus\": {\n        boxShadow: \"\".concat(fade(theme.palette.primary.main, 0.25), \" 0 0 0 0.2rem\"),\n        borderColor: theme.palette.primary.main\n      }\n    }\n  };\n})(InputBase);\nvar useStylesReddit = makeStyles(function (theme) {\n  return {\n    root: {\n      border: \"1px solid #e2e2e1\",\n      overflow: \"hidden\",\n      borderRadius: 4,\n      backgroundColor: \"#fcfcfb\",\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      \"&:hover\": {\n        backgroundColor: \"#fff\"\n      },\n      \"&$focused\": {\n        backgroundColor: \"#fff\",\n        boxShadow: \"\".concat(fade(theme.palette.primary.main, 0.25), \" 0 0 0 2px\"),\n        borderColor: theme.palette.primary.main\n      }\n    },\n    focused: {}\n  };\n});\n\nfunction RedditTextField(props) {\n  var classes = useStylesReddit();\n  return /*#__PURE__*/React.createElement(TextField, Object.assign({\n    InputProps: {\n      classes: classes,\n      disableUnderline: true\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }));\n}\n\nvar useStyles7 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    margin: {\n      margin: theme.spacing(1)\n    }\n  };\n});\nvar theme7 = createMuiTheme({\n  palette: {\n    primary: green\n  }\n}); // Example 8\n\nvar useStyles8 = makeStyles({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 400\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}); // Example 9\n\nvar ranges = [{\n  value: \"0-20\",\n  label: \"0 to 20\"\n}, {\n  value: \"21-50\",\n  label: \"21 to 50\"\n}, {\n  value: \"51-100\",\n  label: \"51 to 100\"\n}];\nvar useStyles9 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3)\n    },\n    textField: {\n      flexBasis: 200\n    }\n  };\n}); // Example 10\n\nvar useStyles10 = makeStyles(function (theme) {\n  return {\n    margin: {\n      margin: theme.spacing(1)\n    }\n  };\n}); // Example 11\n\nvar useStyles11 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    textField: {\n      flexBasis: 200\n    }\n  };\n}); // Example 12\n\nvar useStyles12 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    textField: {\n      flexBasis: 200\n    }\n  };\n});\nexport default function TextFieldsExamplesPage() {\n  // Example 2\n  var classes2 = useStyles2();\n\n  var _React$useState = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values2 = _React$useState2[0],\n      setValues2 = _React$useState2[1];\n\n  var handleChange2 = function handleChange2(name) {\n    return function (event) {\n      setValues2(_objectSpread(_objectSpread({}, values2), {}, _defineProperty({}, name, event.target.value)));\n    };\n  }; // Example 3\n\n\n  var classes3 = useStyles3();\n\n  var _React$useState3 = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      values3 = _React$useState4[0],\n      setValues3 = _React$useState4[1];\n\n  var handleChange3 = function handleChange3(name) {\n    return function (event) {\n      setValues3(_objectSpread(_objectSpread({}, values3), {}, _defineProperty({}, name, event.target.value)));\n    };\n  }; // Example 4\n\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      labelWidth4 = _React$useState6[0],\n      setLabelWidth4 = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"Composed TextField\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      name4 = _React$useState8[0],\n      setName4 = _React$useState8[1];\n\n  var labelRef4 = React.useRef(null);\n  var classes4 = useStyles4();\n\n  function handleChange4(event) {\n    setName4(event.target.value);\n  } // Example 5\n\n\n  var classes5 = useStyles5(); // Example 6\n\n  var classes6 = useStyles6(); // Example 7\n\n  var classes7 = useStyles7(); // Example 8\n\n  var classes8 = useStyles8(); // Example 9\n\n  var classes9 = useStyles9();\n\n  var _React$useState9 = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      values9 = _React$useState10[0],\n      setValues9 = _React$useState10[1];\n\n  var handleChange9 = function handleChange9(prop) {\n    return function (event) {\n      setValues9(_objectSpread(_objectSpread({}, values9), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  };\n\n  var handleClickShowPassword9 = function handleClickShowPassword9() {\n    setValues9(_objectSpread(_objectSpread({}, values9), {}, {\n      showPassword: !values9.showPassword\n    }));\n  }; // Example 10\n\n\n  var classes10 = useStyles10(); // Example 11\n\n  var classes11 = useStyles11();\n\n  var _React$useState11 = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      values11 = _React$useState12[0],\n      setValues11 = _React$useState12[1];\n\n  var handleChange11 = function handleChange11(prop) {\n    return function (event) {\n      setValues11(_objectSpread(_objectSpread({}, values11), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  };\n\n  var handleClickShowPassword11 = function handleClickShowPassword11() {\n    setValues11(_objectSpread(_objectSpread({}, values11), {}, {\n      showPassword: !values11.showPassword\n    }));\n  }; // Example 12\n\n\n  var classes12 = useStyles12();\n\n  var _React$useState13 = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      values12 = _React$useState14[0],\n      setValues12 = _React$useState14[1];\n\n  var handleChange12 = function handleChange12(prop) {\n    return function (event) {\n      setValues12(_objectSpread(_objectSpread({}, values12), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }\n  }, \"Text fields let users enter and edit text.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/text-fields/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Outlined\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 15\n    }\n  }, \"TextField\"), \" supports outlined styling.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes2.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-name\",\n    label: \"Name\",\n    className: classes2.textField,\n    value: values2.name,\n    onChange: handleChange2(\"name\"),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: true,\n    id: \"outlined-error\",\n    label: \"account_type\",\n    defaultValue: \"Account Type\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input\",\n    label: \"Email\",\n    className: classes2.textField,\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-password-input\",\n    label: \"Password\",\n    className: classes2.textField,\n    type: \"password\",\n    autoComplete: \"current-password\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-read-only-input\",\n    label: \"Phone\",\n    defaultValue: \"123456789\",\n    type: true,\n    className: classes2.textField,\n    margin: \"normal\",\n    InputProps: {\n      readOnly: true\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-dense\",\n    label: \"Dense\",\n    className: clsx(classes2.textField, classes2.dense),\n    margin: \"dense\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-dense-multiline\",\n    label: \"Dense multiline\",\n    className: clsx(classes2.textField, classes2.dense),\n    margin: \"dense\",\n    variant: \"outlined\",\n    multiline: true,\n    rowsMax: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-flexible\",\n    label: \"Multiline\",\n    multiline: true,\n    rowsMax: \"4\",\n    value: values2.multiline,\n    onChange: handleChange2(\"multiline\"),\n    className: classes2.textField,\n    margin: \"normal\",\n    helperText: \"hello\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Multiline\",\n    multiline: true,\n    rows: \"4\",\n    defaultValue: \"Default Value\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-helperText\",\n    label: \"Helper text\",\n    defaultValue: \"Default Value\",\n    className: classes2.textField,\n    helperText: \"Some important text\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-with-placeholder\",\n    label: \"With placeholder\",\n    placeholder: \"Placeholder\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-textarea\",\n    label: \"Multiline Placeholder\",\n    placeholder: \"Placeholder\",\n    multiline: true,\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-number\",\n    label: \"Number\",\n    value: values2.age,\n    onChange: handleChange2(\"age\"),\n    type: \"number\",\n    className: classes2.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-search\",\n    label: \"Search field\",\n    type: \"search\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-full-width\",\n    label: \"Label\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Placeholder\",\n    helperText: \"Full width!\",\n    fullWidth: true,\n    margin: \"normal\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-bare\",\n    className: classes2.textField,\n    defaultValue: \"Bare\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    inputProps: {\n      \"aria-label\": \"bare\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 15\n    }\n  }))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n    width: 200,\\n  },\\n  dense: {\\n    marginTop: 19,\\n  },\\n  menu: {\\n    width: 200,\\n  },\\n}));\\n\\nconst currencies = [\\n  {\\n    value: 'USD',\\n    label: '$',\\n  },\\n  {\\n    value: 'EUR',\\n    label: '\\u20AC',\\n  },\\n  {\\n    value: 'BTC',\\n    label: '\\u0E3F',\\n  },\\n  {\\n    value: 'JPY',\\n    label: '\\xA5',\\n  },\\n];\\n\\nexport default function TextFields() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    name: 'Cat in the Hat',\\n    age: '',\\n    multiline: 'Controlled',\\n    currency: 'EUR',\\n  });\\n\\n  const handleChange = name => event => {\\n    setValues({ ...values, [name]: event.target.value });\\n  };\\n\\n  return (\\n    <form className={classes.container} noValidate autoComplete=\\\"off\\\">\\n      <TextField\\n        id=\\\"standard-name\\\"\\n        label=\\\"Name\\\"\\n        className={classes.textField}\\n        value={values.name}\\n        onChange={handleChange('name')}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-uncontrolled\\\"\\n        label=\\\"Uncontrolled\\\"\\n        defaultValue=\\\"foo\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        required\\n        id=\\\"standard-required\\\"\\n        label=\\\"Required\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        error\\n        id=\\\"standard-error\\\"\\n        label=\\\"Error\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        disabled\\n        id=\\\"standard-disabled\\\"\\n        label=\\\"Disabled\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-password-input\\\"\\n        label=\\\"Password\\\"\\n        className={classes.textField}\\n        type=\\\"password\\\"\\n        autoComplete=\\\"current-password\\\"\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-read-only-input\\\"\\n        label=\\\"Read Only\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        InputProps={{\\n          readOnly: true,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"standard-dense\\\"\\n        label=\\\"Dense\\\"\\n        className={clsx(classes.textField, classes.dense)}\\n        margin=\\\"dense\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-multiline-flexible\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rowsMax=\\\"4\\\"\\n        value={values.multiline}\\n        onChange={handleChange('multiline')}\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-multiline-static\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rows=\\\"4\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-helperText\\\"\\n        label=\\\"Helper text\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-with-placeholder\\\"\\n        label=\\\"With placeholder\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-textarea\\\"\\n        label=\\\"With placeholder multiline\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        multiline\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-number\\\"\\n        label=\\\"Number\\\"\\n        value={values.age}\\n        onChange={handleChange('age')}\\n        type=\\\"number\\\"\\n        className={classes.textField}\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-search\\\"\\n        label=\\\"Search field\\\"\\n        type=\\\"search\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-select-currency\\\"\\n        select\\n        label=\\\"Select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n      >\\n        {currencies.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"standard-select-currency-native\\\"\\n        select\\n        label=\\\"Native select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          native: true,\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n      >\\n        {currencies.map(option => (\\n          <option key={option.value} value={option.value}>\\n            {option.label}\\n          </option>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"standard-full-width\\\"\\n        label=\\\"Label\\\"\\n        style={{ margin: 8 }}\\n        placeholder=\\\"Placeholder\\\"\\n        helperText=\\\"Full width!\\\"\\n        fullWidth\\n        margin=\\\"normal\\\"\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"standard-bare\\\"\\n        className={classes.textField}\\n        defaultValue=\\\"Bare\\\"\\n        margin=\\\"normal\\\"\\n        inputProps={{ 'aria-label': 'bare' }}\\n      />\\n    </form>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst currencies = [\\n  {\\n    value: 'USD',\\n    label: '$',\\n  },\\n  {\\n    value: 'EUR',\\n    label: '\\u20AC',\\n  },\\n  {\\n    value: 'BTC',\\n    label: '\\u0E3F',\\n  },\\n  {\\n    value: 'JPY',\\n    label: '\\xA5',\\n  },\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n  },\\n  dense: {\\n    marginTop: theme.spacing(2),\\n  },\\n  menu: {\\n    width: 200,\\n  },\\n}));\\n\\nexport default function OutlinedTextFields() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    name: 'Cat in the Hat',\\n    age: '',\\n    multiline: 'Controlled',\\n    currency: 'EUR',\\n  });\\n\\n  const handleChange = name => event => {\\n    setValues({ ...values, [name]: event.target.value });\\n  };\\n\\n  return (\\n    <form className={classes.container} noValidate autoComplete=\\\"off\\\">\\n      <TextField\\n        id=\\\"outlined-name\\\"\\n        label=\\\"Name\\\"\\n        className={classes.textField}\\n        value={values.name}\\n        onChange={handleChange('name')}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-uncontrolled\\\"\\n        label=\\\"Uncontrolled\\\"\\n        defaultValue=\\\"foo\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        required\\n        id=\\\"outlined-required\\\"\\n        label=\\\"Required\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        error\\n        id=\\\"outlined-error\\\"\\n        label=\\\"Error\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        disabled\\n        id=\\\"outlined-disabled\\\"\\n        label=\\\"Disabled\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-email-input\\\"\\n        label=\\\"Email\\\"\\n        className={classes.textField}\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        autoComplete=\\\"email\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-password-input\\\"\\n        label=\\\"Password\\\"\\n        className={classes.textField}\\n        type=\\\"password\\\"\\n        autoComplete=\\\"current-password\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-read-only-input\\\"\\n        label=\\\"Read Only\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        InputProps={{\\n          readOnly: true,\\n        }}\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-dense\\\"\\n        label=\\\"Dense\\\"\\n        className={clsx(classes.textField, classes.dense)}\\n        margin=\\\"dense\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-dense-multiline\\\"\\n        label=\\\"Dense multiline\\\"\\n        className={clsx(classes.textField, classes.dense)}\\n        margin=\\\"dense\\\"\\n        variant=\\\"outlined\\\"\\n        multiline\\n        rowsMax=\\\"4\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-multiline-flexible\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rowsMax=\\\"4\\\"\\n        value={values.multiline}\\n        onChange={handleChange('multiline')}\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        helperText=\\\"hello\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-multiline-static\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rows=\\\"4\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-helperText\\\"\\n        label=\\\"Helper text\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-with-placeholder\\\"\\n        label=\\\"With placeholder\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-textarea\\\"\\n        label=\\\"Multiline Placeholder\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        multiline\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-number\\\"\\n        label=\\\"Number\\\"\\n        value={values.age}\\n        onChange={handleChange('age')}\\n        type=\\\"number\\\"\\n        className={classes.textField}\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-search\\\"\\n        label=\\\"Search field\\\"\\n        type=\\\"search\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-select-currency\\\"\\n        select\\n        label=\\\"Select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      >\\n        {currencies.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"outlined-select-currency-native\\\"\\n        select\\n        label=\\\"Native select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          native: true,\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      >\\n        {currencies.map(option => (\\n          <option key={option.value} value={option.value}>\\n            {option.label}\\n          </option>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"outlined-full-width\\\"\\n        label=\\\"Label\\\"\\n        style={{ margin: 8 }}\\n        placeholder=\\\"Placeholder\\\"\\n        helperText=\\\"Full width!\\\"\\n        fullWidth\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"outlined-bare\\\"\\n        className={classes.textField}\\n        defaultValue=\\\"Bare\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n        inputProps={{ 'aria-label': 'bare' }}\\n      />\\n    </form>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst currencies = [\\n  {\\n    value: 'USD',\\n    label: '$',\\n  },\\n  {\\n    value: 'EUR',\\n    label: '\\u20AC',\\n  },\\n  {\\n    value: 'BTC',\\n    label: '\\u0E3F',\\n  },\\n  {\\n    value: 'JPY',\\n    label: '\\xA5',\\n  },\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n  },\\n  dense: {\\n    marginTop: 16,\\n  },\\n  menu: {\\n    width: 200,\\n  },\\n}));\\n\\nexport default function FilledTextFields() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    name: 'Cat in the Hat',\\n    age: '',\\n    multiline: 'Controlled',\\n    currency: 'EUR',\\n  });\\n\\n  const handleChange = name => event => {\\n    setValues({ ...values, [name]: event.target.value });\\n  };\\n\\n  return (\\n    <form className={classes.container} noValidate autoComplete=\\\"off\\\">\\n      <TextField\\n        id=\\\"filled-name\\\"\\n        label=\\\"Name\\\"\\n        className={classes.textField}\\n        value={values.name}\\n        onChange={handleChange('name')}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-uncontrolled\\\"\\n        label=\\\"Uncontrolled\\\"\\n        defaultValue=\\\"foo\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        required\\n        id=\\\"filled-required\\\"\\n        label=\\\"Required\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        error\\n        id=\\\"filled-error\\\"\\n        label=\\\"Error\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        disabled\\n        id=\\\"filled-disabled\\\"\\n        label=\\\"Disabled\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-email-input\\\"\\n        label=\\\"Email\\\"\\n        className={classes.textField}\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        autoComplete=\\\"email\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-password-input\\\"\\n        label=\\\"Password\\\"\\n        className={classes.textField}\\n        type=\\\"password\\\"\\n        autoComplete=\\\"current-password\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-read-only-input\\\"\\n        label=\\\"Read Only\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        InputProps={{\\n          readOnly: true,\\n        }}\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-dense\\\"\\n        label=\\\"Dense\\\"\\n        className={clsx(classes.textField, classes.dense)}\\n        margin=\\\"dense\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-dense-multiline\\\"\\n        label=\\\"Dense multiline\\\"\\n        className={clsx(classes.textField, classes.dense)}\\n        margin=\\\"dense\\\"\\n        variant=\\\"filled\\\"\\n        multiline\\n        rowsMax=\\\"4\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-multiline-flexible\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rowsMax=\\\"4\\\"\\n        value={values.multiline}\\n        onChange={handleChange('multiline')}\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        helperText=\\\"hello\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-multiline-static\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rows=\\\"4\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-helperText\\\"\\n        label=\\\"Helper text\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-with-placeholder\\\"\\n        label=\\\"With placeholder\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-textarea\\\"\\n        label=\\\"Multiline Placeholder\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        multiline\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-number\\\"\\n        label=\\\"Number\\\"\\n        value={values.age}\\n        onChange={handleChange('age')}\\n        type=\\\"number\\\"\\n        className={classes.textField}\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-search\\\"\\n        label=\\\"Search field\\\"\\n        type=\\\"search\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-select-currency\\\"\\n        select\\n        label=\\\"Select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      >\\n        {currencies.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"filled-select-currency-native\\\"\\n        select\\n        label=\\\"Native select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          native: true,\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      >\\n        {currencies.map(option => (\\n          <option key={option.value} value={option.value}>\\n            {option.label}\\n          </option>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"filled-full-width\\\"\\n        label=\\\"Label\\\"\\n        style={{ margin: 8 }}\\n        placeholder=\\\"Placeholder\\\"\\n        helperText=\\\"Full width!\\\"\\n        fullWidth\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"filled-bare\\\"\\n        className={classes.textField}\\n        defaultValue=\\\"Bare\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n        inputProps={{ 'aria-label': 'bare' }}\\n      />\\n    </form>\\n  );\\n}\\n\";\nvar jsCode4 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport FilledInput from '@material-ui/core/FilledInput';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function ComposedTextField() {\\n  const [labelWidth, setLabelWidth] = React.useState(0);\\n  const [name, setName] = React.useState('Composed TextField');\\n  const labelRef = React.useRef(null);\\n  const classes = useStyles();\\n\\n  React.useEffect(() => {\\n    setLabelWidth(labelRef.current.offsetWidth);\\n  }, []);\\n\\n  function handleChange(event) {\\n    setName(event.target.value);\\n  }\\n\\n  return (\\n    <div className={classes.container}>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"component-simple\\\">Name</InputLabel>\\n        <Input id=\\\"component-simple\\\" value={name} onChange={handleChange} />\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"component-helper\\\">Name</InputLabel>\\n        <Input\\n          id=\\\"component-helper\\\"\\n          value={name}\\n          onChange={handleChange}\\n          aria-describedby=\\\"component-helper-text\\\"\\n        />\\n        <FormHelperText id=\\\"component-helper-text\\\">Some important helper text</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} disabled>\\n        <InputLabel htmlFor=\\\"component-disabled\\\">Name</InputLabel>\\n        <Input id=\\\"component-disabled\\\" value={name} onChange={handleChange} />\\n        <FormHelperText>Disabled</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} error>\\n        <InputLabel htmlFor=\\\"component-error\\\">Name</InputLabel>\\n        <Input\\n          id=\\\"component-error\\\"\\n          value={name}\\n          onChange={handleChange}\\n          aria-describedby=\\\"component-error-text\\\"\\n        />\\n        <FormHelperText id=\\\"component-error-text\\\">Error</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} variant=\\\"outlined\\\">\\n        <InputLabel ref={labelRef} htmlFor=\\\"component-outlined\\\">\\n          Name\\n        </InputLabel>\\n        <OutlinedInput\\n          id=\\\"component-outlined\\\"\\n          value={name}\\n          onChange={handleChange}\\n          labelWidth={labelWidth}\\n        />\\n      </FormControl>\\n      <FormControl className={classes.formControl} variant=\\\"filled\\\">\\n        <InputLabel htmlFor=\\\"component-filled\\\">Name</InputLabel>\\n        <FilledInput id=\\\"component-filled\\\" value={name} onChange={handleChange} />\\n      </FormControl>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode5 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  input: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function Inputs() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.container}>\\n      <Input\\n        defaultValue=\\\"Hello world\\\"\\n        className={classes.input}\\n        inputProps={{\\n          'aria-label': 'Description',\\n        }}\\n      />\\n      <Input\\n        placeholder=\\\"Placeholder\\\"\\n        className={classes.input}\\n        inputProps={{\\n          'aria-label': 'Description',\\n        }}\\n      />\\n      <Input\\n        value=\\\"Disabled\\\"\\n        className={classes.input}\\n        disabled\\n        inputProps={{\\n          'aria-label': 'Description',\\n        }}\\n      />\\n      <Input\\n        defaultValue=\\\"Error\\\"\\n        className={classes.input}\\n        error\\n        inputProps={{\\n          'aria-label': 'Description',\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode6 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n    width: 200,\\n  },\\n}));\\n\\nexport default function TextFieldMargins() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.container}>\\n      <TextField\\n        label=\\\"None\\\"\\n        id=\\\"margin-none\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n      />\\n      <TextField\\n        label=\\\"Dense\\\"\\n        id=\\\"margin-dense\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n        margin=\\\"dense\\\"\\n      />\\n      <TextField\\n        label=\\\"Normal\\\"\\n        id=\\\"margin-normal\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n        margin=\\\"normal\\\"\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode7 = \"\\nimport React from 'react';\\nimport { fade, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\\nimport { ThemeProvider } from '@material-ui/styles';\\nimport InputBase from '@material-ui/core/InputBase';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport TextField from '@material-ui/core/TextField';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport { green } from '@material-ui/core/colors';\\n\\nconst CssTextField = withStyles({\\n  root: {\\n    '& label.Mui-focused': {\\n      color: 'green',\\n    },\\n    '& .MuiInput-underline:after': {\\n      borderBottomColor: 'green',\\n    },\\n    '& .MuiOutlinedInput-root': {\\n      '& fieldset': {\\n        borderColor: 'red',\\n      },\\n      '&:hover fieldset': {\\n        borderColor: 'yellow',\\n      },\\n      '&.Mui-focused fieldset': {\\n        borderColor: 'green',\\n      },\\n    },\\n  },\\n})(TextField);\\n\\nconst BootstrapInput = withStyles(theme => ({\\n  root: {\\n    'label + &': {\\n      marginTop: theme.spacing(3),\\n    },\\n  },\\n  input: {\\n    borderRadius: 4,\\n    position: 'relative',\\n    backgroundColor: theme.palette.common.white,\\n    border: '1px solid #ced4da',\\n    fontSize: 16,\\n    width: 'auto',\\n    padding: '10px 12px',\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\n    // Use the system font instead of the default Roboto font.\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n    '&:focus': {\\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\\n      borderColor: theme.palette.primary.main,\\n    },\\n  },\\n}))(InputBase);\\n\\nconst useStylesReddit = makeStyles(theme => ({\\n  root: {\\n    border: '1px solid #e2e2e1',\\n    overflow: 'hidden',\\n    borderRadius: 4,\\n    backgroundColor: '#fcfcfb',\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\n    '&:hover': {\\n      backgroundColor: '#fff',\\n    },\\n    '&$focused': {\\n      backgroundColor: '#fff',\\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\\n      borderColor: theme.palette.primary.main,\\n    },\\n  },\\n  focused: {},\\n}));\\n\\nfunction RedditTextField(props) {\\n  const classes = useStylesReddit();\\n\\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\\n}\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nconst theme = createMuiTheme({\\n  palette: {\\n    primary: green,\\n  },\\n});\\n\\nexport default function CustomizedInputs() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <CssTextField className={classes.margin} id=\\\"custom-css-standard-input\\\" label=\\\"Custom CSS\\\" />\\n      <CssTextField\\n        className={classes.margin}\\n        label=\\\"Custom CSS\\\"\\n        variant=\\\"outlined\\\"\\n        id=\\\"custom-css-outlined-input\\\"\\n      />\\n      <ThemeProvider theme={theme}>\\n        <TextField\\n          className={classes.margin}\\n          label=\\\"ThemeProvider\\\"\\n          id=\\\"mui-theme-provider-standard-input\\\"\\n        />\\n        <TextField\\n          className={classes.margin}\\n          label=\\\"ThemeProvider\\\"\\n          variant=\\\"outlined\\\"\\n          id=\\\"mui-theme-provider-outlined-input\\\"\\n        />\\n      </ThemeProvider>\\n      <FormControl className={classes.margin}>\\n        <InputLabel shrink htmlFor=\\\"bootstrap-input\\\">\\n          Bootstrap\\n        </InputLabel>\\n        <BootstrapInput defaultValue=\\\"react-bootstrap\\\" id=\\\"bootstrap-input\\\" />\\n      </FormControl>\\n      <RedditTextField\\n        label=\\\"Reddit\\\"\\n        className={classes.margin}\\n        defaultValue=\\\"react-reddit\\\"\\n        variant=\\\"filled\\\"\\n        id=\\\"reddit-input\\\"\\n      />\\n      <InputBase\\n        className={classes.margin}\\n        defaultValue=\\\"Naked input\\\"\\n        inputProps={{ 'aria-label': 'naked' }}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode8 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport InputBase from '@material-ui/core/InputBase';\\nimport Divider from '@material-ui/core/Divider';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport MenuIcon from '@material-ui/icons/Menu';\\nimport SearchIcon from '@material-ui/icons/Search';\\nimport DirectionsIcon from '@material-ui/icons/Directions';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    padding: '2px 4px',\\n    display: 'flex',\\n    alignItems: 'center',\\n    width: 400,\\n  },\\n  input: {\\n    marginLeft: 8,\\n    flex: 1,\\n  },\\n  iconButton: {\\n    padding: 10,\\n  },\\n  divider: {\\n    width: 1,\\n    height: 28,\\n    margin: 4,\\n  },\\n});\\n\\nexport default function CustomizedInputBase() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper className={classes.root}>\\n      <IconButton className={classes.iconButton} aria-label=\\\"Menu\\\">\\n        <MenuIcon />\\n      </IconButton>\\n      <InputBase\\n        className={classes.input}\\n        placeholder=\\\"Search Google Maps\\\"\\n        inputProps={{ 'aria-label': 'Search Google Maps' }}\\n      />\\n      <IconButton className={classes.iconButton} aria-label=\\\"Search\\\">\\n        <SearchIcon />\\n      </IconButton>\\n      <Divider className={classes.divider} />\\n      <IconButton color=\\\"primary\\\" className={classes.iconButton} aria-label=\\\"Directions\\\">\\n        <DirectionsIcon />\\n      </IconButton>\\n    </Paper>\\n  );\\n}\\n\";\nvar jsCode9 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst ranges = [\\n  {\\n    value: '0-20',\\n    label: '0 to 20',\\n  },\\n  {\\n    value: '21-50',\\n    label: '21 to 50',\\n  },\\n  {\\n    value: '51-100',\\n    label: '51 to 100',\\n  },\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n  withoutLabel: {\\n    marginTop: theme.spacing(3),\\n  },\\n  textField: {\\n    flexBasis: 200,\\n  },\\n}));\\n\\nexport default function InputAdornments() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    amount: '',\\n    password: '',\\n    weight: '',\\n    weightRange: '',\\n    showPassword: false,\\n  });\\n\\n  const handleChange = prop => event => {\\n    setValues({ ...values, [prop]: event.target.value });\\n  };\\n\\n  const handleClickShowPassword = () => {\\n    setValues({ ...values, showPassword: !values.showPassword });\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <TextField\\n        label=\\\"With normal TextField\\\"\\n        id=\\\"simple-start-adornment\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        select\\n        label=\\\"With Select\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        value={values.weightRange}\\n        onChange={handleChange('weightRange')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      >\\n        {ranges.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <FormControl fullWidth className={classes.margin}>\\n        <InputLabel htmlFor=\\\"adornment-amount\\\">Amount</InputLabel>\\n        <Input\\n          id=\\\"adornment-amount\\\"\\n          value={values.amount}\\n          onChange={handleChange('amount')}\\n          startAdornment={<InputAdornment position=\\\"start\\\">$</InputAdornment>}\\n        />\\n      </FormControl>\\n      <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\\n        <Input\\n          id=\\\"adornment-weight\\\"\\n          value={values.weight}\\n          onChange={handleChange('weight')}\\n          endAdornment={<InputAdornment position=\\\"end\\\">Kg</InputAdornment>}\\n          aria-describedby=\\\"weight-helper-text\\\"\\n          inputProps={{\\n            'aria-label': 'Weight',\\n          }}\\n        />\\n        <FormHelperText id=\\\"weight-helper-text\\\">Weight</FormHelperText>\\n      </FormControl>\\n      <FormControl className={clsx(classes.margin, classes.textField)}>\\n        <InputLabel htmlFor=\\\"adornment-password\\\">Password</InputLabel>\\n        <Input\\n          id=\\\"adornment-password\\\"\\n          type={values.showPassword ? 'text' : 'password'}\\n          value={values.password}\\n          onChange={handleChange('password')}\\n          endAdornment={\\n            <InputAdornment position=\\\"end\\\">\\n              <IconButton aria-label=\\\"Toggle password visibility\\\" onClick={handleClickShowPassword}>\\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\\n              </IconButton>\\n            </InputAdornment>\\n          }\\n        />\\n      </FormControl>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode10 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport TextField from '@material-ui/core/TextField';\\nimport Grid from '@material-ui/core/Grid';\\nimport AccountCircle from '@material-ui/icons/AccountCircle';\\n\\nconst useStyles = makeStyles(theme => ({\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function InputWithIcon() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <FormControl className={classes.margin}>\\n        <InputLabel htmlFor=\\\"input-with-icon-adornment\\\">With a start adornment</InputLabel>\\n        <Input\\n          id=\\\"input-with-icon-adornment\\\"\\n          startAdornment={\\n            <InputAdornment position=\\\"start\\\">\\n              <AccountCircle />\\n            </InputAdornment>\\n          }\\n        />\\n      </FormControl>\\n      <TextField\\n        className={classes.margin}\\n        id=\\\"input-with-icon-textfield\\\"\\n        label=\\\"TextField\\\"\\n        InputProps={{\\n          startAdornment: (\\n            <InputAdornment position=\\\"start\\\">\\n              <AccountCircle />\\n            </InputAdornment>\\n          ),\\n        }}\\n      />\\n      <div className={classes.margin}>\\n        <Grid container spacing={1} alignItems=\\\"flex-end\\\">\\n          <Grid item>\\n            <AccountCircle />\\n          </Grid>\\n          <Grid item>\\n            <TextField id=\\\"input-with-icon-grid\\\" label=\\\"With a grid\\\" />\\n          </Grid>\\n        </Grid>\\n      </div>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode11 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst ranges = [\\n  {\\n    value: '0-20',\\n    label: '0 to 20',\\n  },\\n  {\\n    value: '21-50',\\n    label: '21 to 50',\\n  },\\n  {\\n    value: '51-100',\\n    label: '51 to 100',\\n  },\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n  textField: {\\n    flexBasis: 200,\\n  },\\n}));\\n\\nexport default function FilledInputAdornments() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    amount: '',\\n    password: '',\\n    weight: '',\\n    weightRange: '',\\n    showPassword: false,\\n  });\\n\\n  const handleChange = prop => event => {\\n    setValues({ ...values, [prop]: event.target.value });\\n  };\\n\\n  const handleClickShowPassword = () => {\\n    setValues({ ...values, showPassword: !values.showPassword });\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <TextField\\n        id=\\\"filled-simple-start-adornment\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"filled\\\"\\n        label=\\\"With filled TextField\\\"\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        select\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"filled\\\"\\n        label=\\\"With Select\\\"\\n        value={values.weightRange}\\n        onChange={handleChange('weightRange')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      >\\n        {ranges.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"filled-adornment-amount\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"filled\\\"\\n        label=\\\"Amount\\\"\\n        value={values.amount}\\n        onChange={handleChange('amount')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">$</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"filled-adornment-weight\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"filled\\\"\\n        label=\\\"Weight\\\"\\n        value={values.weight}\\n        onChange={handleChange('weight')}\\n        helperText=\\\"Weight\\\"\\n        InputProps={{\\n          endAdornment: <InputAdornment position=\\\"end\\\">Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"filled-adornment-password\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"filled\\\"\\n        type={values.showPassword ? 'text' : 'password'}\\n        label=\\\"Password\\\"\\n        value={values.password}\\n        onChange={handleChange('password')}\\n        InputProps={{\\n          endAdornment: (\\n            <InputAdornment position=\\\"end\\\">\\n              <IconButton\\n                edge=\\\"end\\\"\\n                aria-label=\\\"Toggle password visibility\\\"\\n                onClick={handleClickShowPassword}\\n              >\\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\\n              </IconButton>\\n            </InputAdornment>\\n          ),\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode12 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst ranges = [\\n  {\\n    value: '0-20',\\n    label: '0 to 20',\\n  },\\n  {\\n    value: '21-50',\\n    label: '21 to 50',\\n  },\\n  {\\n    value: '51-100',\\n    label: '51 to 100',\\n  },\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n  textField: {\\n    flexBasis: 200,\\n  },\\n}));\\n\\nexport default function OutlinedInputAdornments() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    amount: '',\\n    password: '',\\n    weight: '',\\n    weightRange: '',\\n    showPassword: false,\\n  });\\n\\n  const handleChange = prop => event => {\\n    setValues({ ...values, [prop]: event.target.value });\\n  };\\n\\n  const handleClickShowPassword = () => {\\n    setValues({ ...values, showPassword: !values.showPassword });\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <TextField\\n        id=\\\"outlined-simple-start-adornment\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"outlined\\\"\\n        label=\\\"With outlined TextField\\\"\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        select\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"outlined\\\"\\n        label=\\\"With Select\\\"\\n        value={values.weightRange}\\n        onChange={handleChange('weightRange')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      >\\n        {ranges.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"outlined-adornment-amount\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"outlined\\\"\\n        label=\\\"Amount\\\"\\n        value={values.amount}\\n        onChange={handleChange('amount')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">$</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"outlined-adornment-weight\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"outlined\\\"\\n        label=\\\"Weight\\\"\\n        value={values.weight}\\n        onChange={handleChange('weight')}\\n        helperText=\\\"Weight\\\"\\n        InputProps={{\\n          endAdornment: <InputAdornment position=\\\"end\\\">Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"outlined-adornment-password\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"outlined\\\"\\n        type={values.showPassword ? 'text' : 'password'}\\n        label=\\\"Password\\\"\\n        value={values.password}\\n        onChange={handleChange('password')}\\n        InputProps={{\\n          endAdornment: (\\n            <InputAdornment position=\\\"end\\\">\\n              <IconButton\\n                edge=\\\"end\\\"\\n                aria-label=\\\"Toggle password visibility\\\"\\n                onClick={handleClickShowPassword}\\n              >\\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\\n              </IconButton>\\n            </InputAdornment>\\n          ),\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\";","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/GoogleMaterialExamples/inputs/TextFieldsExamplesPage.js"],"names":["React","clsx","TextField","MenuItem","FormControl","Input","InputLabel","FormHelperText","OutlinedInput","FilledInput","InputBase","Paper","IconButton","Divider","InputAdornment","Grid","green","fade","withStyles","makeStyles","createMuiTheme","ThemeProvider","Visibility","VisibilityOff","AccountCircle","Notice","KTCodeExample","useStyles2","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","useStyles3","useStyles4","formControl","margin","useStyles5","input","useStyles6","CssTextField","root","color","borderBottomColor","borderColor","BootstrapInput","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","padding","transition","transitions","create","fontFamily","join","boxShadow","primary","main","useStylesReddit","overflow","focused","RedditTextField","props","classes","disableUnderline","useStyles7","theme7","useStyles8","alignItems","flex","iconButton","divider","height","ranges","value","label","useStyles9","withoutLabel","flexBasis","useStyles10","useStyles11","useStyles12","TextFieldsExamplesPage","classes2","useState","name","age","multiline","currency","values2","setValues2","handleChange2","event","target","classes3","values3","setValues3","handleChange3","labelWidth4","setLabelWidth4","name4","setName4","labelRef4","useRef","classes4","handleChange4","classes5","classes6","classes7","classes8","classes9","amount","password","weight","weightRange","showPassword","values9","setValues9","handleChange9","prop","handleClickShowPassword9","classes10","classes11","values11","setValues11","handleChange11","handleClickShowPassword11","classes12","values12","setValues12","handleChange12","jsCode2","readOnly","shrink","jsCode1","jsCode3","jsCode4","jsCode5","jsCode6","jsCode7","jsCode8","jsCode9","jsCode10","jsCode11","jsCode12"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  TextField,\r\n  MenuItem,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  FormHelperText,\r\n  OutlinedInput,\r\n  FilledInput,\r\n  InputBase,\r\n  Paper,\r\n  IconButton,\r\n  Divider,\r\n  InputAdornment,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport {\r\n  fade,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme\r\n} from \"@material-ui/core/styles\";\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 7\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"green\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"green\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"red\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"yellow\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"green\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  }\r\n}))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\"\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  },\r\n  focused: {}\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  );\r\n}\r\n\r\nconst useStyles7 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst theme7 = createMuiTheme({\r\n  palette: {\r\n    primary: green\r\n  }\r\n});\r\n\r\n// Example 8\r\nconst useStyles8 = makeStyles({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 400\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4\r\n  }\r\n});\r\n\r\n// Example 9\r\nconst ranges = [\r\n  {\r\n    value: \"0-20\",\r\n    label: \"0 to 20\"\r\n  },\r\n  {\r\n    value: \"21-50\",\r\n    label: \"21 to 50\"\r\n  },\r\n  {\r\n    value: \"51-100\",\r\n    label: \"51 to 100\"\r\n  }\r\n];\r\n\r\nconst useStyles9 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    flexBasis: 200\r\n  }\r\n}));\r\n\r\n// Example 10\r\nconst useStyles10 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 11\r\nconst useStyles11 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    flexBasis: 200\r\n  }\r\n}));\r\n\r\n// Example 12\r\nconst useStyles12 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    flexBasis: 200\r\n  }\r\n}));\r\n\r\nexport default function TextFieldsExamplesPage() {\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [values2, setValues2] = React.useState({\r\n    name: \"Cat in the Hat\",\r\n    age: \"\",\r\n    multiline: \"Controlled\",\r\n    currency: \"EUR\"\r\n  });\r\n\r\n  const handleChange2 = name => event => {\r\n    setValues2({ ...values2, [name]: event.target.value });\r\n  };\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [values3, setValues3] = React.useState({\r\n    name: \"Cat in the Hat\",\r\n    age: \"\",\r\n    multiline: \"Controlled\",\r\n    currency: \"EUR\"\r\n  });\r\n\r\n  const handleChange3 = name => event => {\r\n    setValues3({ ...values3, [name]: event.target.value });\r\n  };\r\n\r\n  // Example 4\r\n  const [labelWidth4, setLabelWidth4] = React.useState(0);\r\n  const [name4, setName4] = React.useState(\"Composed TextField\");\r\n  const labelRef4 = React.useRef(null);\r\n  const classes4 = useStyles4();\r\n\r\n\r\n  function handleChange4(event) {\r\n    setName4(event.target.value);\r\n  }\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n\r\n  // Example 8\r\n  const classes8 = useStyles8();\r\n\r\n  // Example 9\r\n  const classes9 = useStyles9();\r\n  const [values9, setValues9] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false\r\n  });\r\n\r\n  const handleChange9 = prop => event => {\r\n    setValues9({ ...values9, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword9 = () => {\r\n    setValues9({ ...values9, showPassword: !values9.showPassword });\r\n  };\r\n\r\n  // Example 10\r\n  const classes10 = useStyles10();\r\n\r\n  // Example 11\r\n  const classes11 = useStyles11();\r\n  const [values11, setValues11] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false\r\n  });\r\n\r\n  const handleChange11 = prop => event => {\r\n    setValues11({ ...values11, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword11 = () => {\r\n    setValues11({ ...values11, showPassword: !values11.showPassword });\r\n  };\r\n\r\n  // Example 12\r\n  const classes12 = useStyles12();\r\n  const [values12, setValues12] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false\r\n  });\r\n\r\n  const handleChange12 = prop => event => {\r\n    setValues12({ ...values12, [prop]: event.target.value });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>Text fields let users enter and edit text.</span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/text-fields/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Outlined\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>TextField</code> supports outlined styling.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <form className={classes2.container} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                id=\"outlined-name\"\r\n                label=\"Name\"\r\n                className={classes2.textField}\r\n                value={values2.name}\r\n                onChange={handleChange2(\"name\")}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n\r\n              <TextField\r\n                error\r\n                id=\"outlined-error\"\r\n                label=\"account_type\"\r\n                defaultValue=\"Account Type\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n\r\n              <TextField\r\n                id=\"outlined-email-input\"\r\n                label=\"Email\"\r\n                className={classes2.textField}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"Password\"\r\n                className={classes2.textField}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-read-only-input\"\r\n                label=\"Phone\"\r\n                defaultValue=\"123456789\"\r\n                type\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                  readOnly: true\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-dense\"\r\n                label=\"Dense\"\r\n                className={clsx(classes2.textField, classes2.dense)}\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-dense-multiline\"\r\n                label=\"Dense multiline\"\r\n                className={clsx(classes2.textField, classes2.dense)}\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-multiline-flexible\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={values2.multiline}\r\n                onChange={handleChange2(\"multiline\")}\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                helperText=\"hello\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rows=\"4\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-helperText\"\r\n                label=\"Helper text\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes2.textField}\r\n                helperText=\"Some important text\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-with-placeholder\"\r\n                label=\"With placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Multiline Placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                multiline\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-number\"\r\n                label=\"Number\"\r\n                value={values2.age}\r\n                onChange={handleChange2(\"age\")}\r\n                type=\"number\"\r\n                className={classes2.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-search\"\r\n                label=\"Search field\"\r\n                type=\"search\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n\r\n              \r\n              <TextField\r\n                id=\"outlined-full-width\"\r\n                label=\"Label\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Placeholder\"\r\n                helperText=\"Full width!\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"outlined-bare\"\r\n                className={classes2.textField}\r\n                defaultValue=\"Bare\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                inputProps={{ \"aria-label\": \"bare\" }}\r\n              />\r\n            </form>\r\n          </KTCodeExample>\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nexport default function TextFields() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: 'Cat in the Hat',\r\n    age: '',\r\n    multiline: 'Controlled',\r\n    currency: 'EUR',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"standard-name\"\r\n        label=\"Name\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange('name')}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-uncontrolled\"\r\n        label=\"Uncontrolled\"\r\n        defaultValue=\"foo\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"standard-required\"\r\n        label=\"Required\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        error\r\n        id=\"standard-error\"\r\n        label=\"Error\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        disabled\r\n        id=\"standard-disabled\"\r\n        label=\"Disabled\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-password-input\"\r\n        label=\"Password\"\r\n        className={classes.textField}\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-read-only-input\"\r\n        label=\"Read Only\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"standard-dense\"\r\n        label=\"Dense\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n      />\r\n      <TextField\r\n        id=\"standard-multiline-flexible\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={values.multiline}\r\n        onChange={handleChange('multiline')}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-multiline-static\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rows=\"4\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-helperText\"\r\n        label=\"Helper text\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-with-placeholder\"\r\n        label=\"With placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-textarea\"\r\n        label=\"With placeholder multiline\"\r\n        placeholder=\"Placeholder\"\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-number\"\r\n        label=\"Number\"\r\n        value={values.age}\r\n        onChange={handleChange('age')}\r\n        type=\"number\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-select-currency\"\r\n        select\r\n        label=\"Select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"standard-select-currency-native\"\r\n        select\r\n        label=\"Native select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n      >\r\n        {currencies.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"standard-full-width\"\r\n        label=\"Label\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"Placeholder\"\r\n        helperText=\"Full width!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"standard-bare\"\r\n        className={classes.textField}\r\n        defaultValue=\"Bare\"\r\n        margin=\"normal\"\r\n        inputProps={{ 'aria-label': 'bare' }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function OutlinedTextFields() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: 'Cat in the Hat',\r\n    age: '',\r\n    multiline: 'Controlled',\r\n    currency: 'EUR',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"outlined-name\"\r\n        label=\"Name\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange('name')}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-uncontrolled\"\r\n        label=\"Uncontrolled\"\r\n        defaultValue=\"foo\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"outlined-required\"\r\n        label=\"Required\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        error\r\n        id=\"outlined-error\"\r\n        label=\"Error\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        disabled\r\n        id=\"outlined-disabled\"\r\n        label=\"Disabled\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-email-input\"\r\n        label=\"Email\"\r\n        className={classes.textField}\r\n        type=\"email\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-password-input\"\r\n        label=\"Password\"\r\n        className={classes.textField}\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-read-only-input\"\r\n        label=\"Read Only\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-dense\"\r\n        label=\"Dense\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-dense-multiline\"\r\n        label=\"Dense multiline\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-multiline-flexible\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={values.multiline}\r\n        onChange={handleChange('multiline')}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        helperText=\"hello\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-multiline-static\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rows=\"4\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-helperText\"\r\n        label=\"Helper text\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-with-placeholder\"\r\n        label=\"With placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-textarea\"\r\n        label=\"Multiline Placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-number\"\r\n        label=\"Number\"\r\n        value={values.age}\r\n        onChange={handleChange('age')}\r\n        type=\"number\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-select-currency\"\r\n        select\r\n        label=\"Select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"outlined-select-currency-native\"\r\n        select\r\n        label=\"Native select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      >\r\n        {currencies.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"outlined-full-width\"\r\n        label=\"Label\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"Placeholder\"\r\n        helperText=\"Full width!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"outlined-bare\"\r\n        className={classes.textField}\r\n        defaultValue=\"Bare\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        inputProps={{ 'aria-label': 'bare' }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function FilledTextFields() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: 'Cat in the Hat',\r\n    age: '',\r\n    multiline: 'Controlled',\r\n    currency: 'EUR',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"filled-name\"\r\n        label=\"Name\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange('name')}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-uncontrolled\"\r\n        label=\"Uncontrolled\"\r\n        defaultValue=\"foo\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"filled-required\"\r\n        label=\"Required\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        error\r\n        id=\"filled-error\"\r\n        label=\"Error\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        disabled\r\n        id=\"filled-disabled\"\r\n        label=\"Disabled\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-email-input\"\r\n        label=\"Email\"\r\n        className={classes.textField}\r\n        type=\"email\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-password-input\"\r\n        label=\"Password\"\r\n        className={classes.textField}\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-read-only-input\"\r\n        label=\"Read Only\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-dense\"\r\n        label=\"Dense\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-dense-multiline\"\r\n        label=\"Dense multiline\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"filled\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n      />\r\n      <TextField\r\n        id=\"filled-multiline-flexible\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={values.multiline}\r\n        onChange={handleChange('multiline')}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        helperText=\"hello\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-multiline-static\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rows=\"4\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-helperText\"\r\n        label=\"Helper text\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-with-placeholder\"\r\n        label=\"With placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-textarea\"\r\n        label=\"Multiline Placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-number\"\r\n        label=\"Number\"\r\n        value={values.age}\r\n        onChange={handleChange('age')}\r\n        type=\"number\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-select-currency\"\r\n        select\r\n        label=\"Select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"filled-select-currency-native\"\r\n        select\r\n        label=\"Native select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      >\r\n        {currencies.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"filled-full-width\"\r\n        label=\"Label\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"Placeholder\"\r\n        helperText=\"Full width!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"filled-bare\"\r\n        className={classes.textField}\r\n        defaultValue=\"Bare\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n        inputProps={{ 'aria-label': 'bare' }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function ComposedTextField() {\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  const [name, setName] = React.useState('Composed TextField');\r\n  const labelRef = React.useRef(null);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    setLabelWidth(labelRef.current.offsetWidth);\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\r\n        <Input id=\"component-simple\" value={name} onChange={handleChange} />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\r\n        <Input\r\n          id=\"component-helper\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          aria-describedby=\"component-helper-text\"\r\n        />\r\n        <FormHelperText id=\"component-helper-text\">Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\r\n        <Input id=\"component-disabled\" value={name} onChange={handleChange} />\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor=\"component-error\">Name</InputLabel>\r\n        <Input\r\n          id=\"component-error\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          aria-describedby=\"component-error-text\"\r\n        />\r\n        <FormHelperText id=\"component-error-text\">Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} variant=\"outlined\">\r\n        <InputLabel ref={labelRef} htmlFor=\"component-outlined\">\r\n          Name\r\n        </InputLabel>\r\n        <OutlinedInput\r\n          id=\"component-outlined\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          labelWidth={labelWidth}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} variant=\"filled\">\r\n        <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\r\n        <FilledInput id=\"component-filled\" value={name} onChange={handleChange} />\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Inputs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Input\r\n        defaultValue=\"Hello world\"\r\n        className={classes.input}\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n      <Input\r\n        placeholder=\"Placeholder\"\r\n        className={classes.input}\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n      <Input\r\n        value=\"Disabled\"\r\n        className={classes.input}\r\n        disabled\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n      <Input\r\n        defaultValue=\"Error\"\r\n        className={classes.input}\r\n        error\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function TextFieldMargins() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <TextField\r\n        label=\"None\"\r\n        id=\"margin-none\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n      />\r\n      <TextField\r\n        label=\"Dense\"\r\n        id=\"margin-dense\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"dense\"\r\n      />\r\n      <TextField\r\n        label=\"Normal\"\r\n        id=\"margin-normal\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { fade, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'yellow',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.common.white,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      boxShadow: \\`\\${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem\\`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: '1px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: '#fcfcfb',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxShadow: \\`\\${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px\\`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nexport default function CustomizedInputs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssTextField className={classes.margin} id=\"custom-css-standard-input\" label=\"Custom CSS\" />\r\n      <CssTextField\r\n        className={classes.margin}\r\n        label=\"Custom CSS\"\r\n        variant=\"outlined\"\r\n        id=\"custom-css-outlined-input\"\r\n      />\r\n      <ThemeProvider theme={theme}>\r\n        <TextField\r\n          className={classes.margin}\r\n          label=\"ThemeProvider\"\r\n          id=\"mui-theme-provider-standard-input\"\r\n        />\r\n        <TextField\r\n          className={classes.margin}\r\n          label=\"ThemeProvider\"\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n        />\r\n      </ThemeProvider>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n          Bootstrap\r\n        </InputLabel>\r\n        <BootstrapInput defaultValue=\"react-bootstrap\" id=\"bootstrap-input\" />\r\n      </FormControl>\r\n      <RedditTextField\r\n        label=\"Reddit\"\r\n        className={classes.margin}\r\n        defaultValue=\"react-reddit\"\r\n        variant=\"filled\"\r\n        id=\"reddit-input\"\r\n      />\r\n      <InputBase\r\n        className={classes.margin}\r\n        defaultValue=\"Naked input\"\r\n        inputProps={{ 'aria-label': 'naked' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n});\r\n\r\nexport default function CustomizedInputBase() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <IconButton className={classes.iconButton} aria-label=\"Menu\">\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search Google Maps\"\r\n        inputProps={{ 'aria-label': 'Search Google Maps' }}\r\n      />\r\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Divider className={classes.divider} />\r\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\">\r\n        <DirectionsIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst ranges = [\r\n  {\r\n    value: '0-20',\r\n    label: '0 to 20',\r\n  },\r\n  {\r\n    value: '21-50',\r\n    label: '21 to 50',\r\n  },\r\n  {\r\n    value: '51-100',\r\n    label: '51 to 100',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n}));\r\n\r\nexport default function InputAdornments() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        label=\"With normal TextField\"\r\n        id=\"simple-start-adornment\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"With Select\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        value={values.weightRange}\r\n        onChange={handleChange('weightRange')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      >\r\n        {ranges.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <FormControl fullWidth className={classes.margin}>\r\n        <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\r\n        <Input\r\n          id=\"adornment-amount\"\r\n          value={values.amount}\r\n          onChange={handleChange('amount')}\r\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\r\n        <Input\r\n          id=\"adornment-weight\"\r\n          value={values.weight}\r\n          onChange={handleChange('weight')}\r\n          endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\r\n          aria-describedby=\"weight-helper-text\"\r\n          inputProps={{\r\n            'aria-label': 'Weight',\r\n          }}\r\n        />\r\n        <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.margin, classes.textField)}>\r\n        <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\r\n        <Input\r\n          id=\"adornment-password\"\r\n          type={values.showPassword ? 'text' : 'password'}\r\n          value={values.password}\r\n          onChange={handleChange('password')}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton aria-label=\"Toggle password visibility\" onClick={handleClickShowPassword}>\r\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function InputWithIcon() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"input-with-icon-adornment\">With a start adornment</InputLabel>\r\n        <Input\r\n          id=\"input-with-icon-adornment\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      <TextField\r\n        className={classes.margin}\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"TextField\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <div className={classes.margin}>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <AccountCircle />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst ranges = [\r\n  {\r\n    value: '0-20',\r\n    label: '0 to 20',\r\n  },\r\n  {\r\n    value: '21-50',\r\n    label: '21 to 50',\r\n  },\r\n  {\r\n    value: '51-100',\r\n    label: '51 to 100',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n}));\r\n\r\nexport default function FilledInputAdornments() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"filled-simple-start-adornment\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"With filled TextField\"\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        select\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"With Select\"\r\n        value={values.weightRange}\r\n        onChange={handleChange('weightRange')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      >\r\n        {ranges.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"filled-adornment-amount\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"Amount\"\r\n        value={values.amount}\r\n        onChange={handleChange('amount')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"filled-adornment-weight\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"Weight\"\r\n        value={values.weight}\r\n        onChange={handleChange('weight')}\r\n        helperText=\"Weight\"\r\n        InputProps={{\r\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"filled-adornment-password\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        type={values.showPassword ? 'text' : 'password'}\r\n        label=\"Password\"\r\n        value={values.password}\r\n        onChange={handleChange('password')}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"Toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n              >\r\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode12 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst ranges = [\r\n  {\r\n    value: '0-20',\r\n    label: '0 to 20',\r\n  },\r\n  {\r\n    value: '21-50',\r\n    label: '21 to 50',\r\n  },\r\n  {\r\n    value: '51-100',\r\n    label: '51 to 100',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n}));\r\n\r\nexport default function OutlinedInputAdornments() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"outlined-simple-start-adornment\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"With outlined TextField\"\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        select\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"With Select\"\r\n        value={values.weightRange}\r\n        onChange={handleChange('weightRange')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      >\r\n        {ranges.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"outlined-adornment-amount\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"Amount\"\r\n        value={values.amount}\r\n        onChange={handleChange('amount')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"outlined-adornment-weight\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"Weight\"\r\n        value={values.weight}\r\n        onChange={handleChange('weight')}\r\n        helperText=\"Weight\"\r\n        InputProps={{\r\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"outlined-adornment-password\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        type={values.showPassword ? 'text' : 'password'}\r\n        label=\"Password\"\r\n        value={values.password}\r\n        onChange={handleChange('password')}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"Toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n              >\r\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}