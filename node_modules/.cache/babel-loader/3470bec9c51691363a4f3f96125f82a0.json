{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\Routes.js\",\n    _s = $RefreshSig$();\n\n/**\r\n * High level router.\r\n *\r\n * Note: It's recommended to compose related routes in internal router\r\n * components (e.g: `src/app/modules/Auth/pages/AuthPage`, `src/app/BasePage`).\r\n */\nimport React from \"react\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Layout } from \"../_metronic/layout\";\nimport BasePage from \"./BasePage\";\nimport { Logout, AuthPage } from \"./modules/Auth\";\nimport ErrorsPage from \"./modules/ErrorsExamples/ErrorsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Routes() {\n  _s();\n\n  const {\n    isAuthorized\n  } = useSelector(({\n    auth\n  }) => ({\n    isAuthorized: auth.user != null\n  }), shallowEqual);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [!isAuthorized ?\n    /*#__PURE__*/\n\n    /*Render auth page when user at `/auth` and not authorized.*/\n    _jsxDEV(Route, {\n      children: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n\n    /*Otherwise redirect to root page (`/`)*/\n    _jsxDEV(Redirect, {\n      from: \"/auth\",\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/error\",\n      component: ErrorsPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/logout\",\n      component: Logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), !isAuthorized ?\n    /*#__PURE__*/\n\n    /*Redirect to `/auth` when user is not authorized*/\n    _jsxDEV(Redirect, {\n      to: \"/auth/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(BasePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Routes, \"9XjUz8KrdIxgn5W3Rcw/6xoVSZk=\", false, function () {\n  return [useSelector];\n});\n\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/Routes.js"],"names":["React","Redirect","Switch","Route","shallowEqual","useSelector","Layout","BasePage","Logout","AuthPage","ErrorsPage","Routes","isAuthorized","auth","user"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,QAAwC,kBAAxC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,gBAAjC;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACrB,QAAM;AAACC,IAAAA;AAAD,MAAiBP,WAAW,CAC9B,CAAC;AAACQ,IAAAA;AAAD,GAAD,MAAa;AACTD,IAAAA,YAAY,EAAEC,IAAI,CAACC,IAAL,IAAa;AADlB,GAAb,CAD8B,EAI9BV,YAJ8B,CAAlC;AAOA,sBACI,QAAC,MAAD;AAAA,eACK,CAACQ,YAAD;AAAA;;AACG;AACA,YAAC,KAAD;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;;AAMG;AACA,YAAC,QAAD;AAAU,MAAA,IAAI,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YARR,eAWI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEF;AAAhC;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEF;AAAjC;AAAA;AAAA;AAAA;AAAA,YAZJ,EAeK,CAACI,YAAD;AAAA;;AACG;AACA,YAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFH,gBAIG,QAAC,MAAD;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAnBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAlCeD,M;UACWN,W;;;KADXM,M","sourcesContent":["/**\r\n * High level router.\r\n *\r\n * Note: It's recommended to compose related routes in internal router\r\n * components (e.g: `src/app/modules/Auth/pages/AuthPage`, `src/app/BasePage`).\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport {Layout} from \"../_metronic/layout\";\r\nimport BasePage from \"./BasePage\";\r\nimport { Logout, AuthPage } from \"./modules/Auth\";\r\nimport ErrorsPage from \"./modules/ErrorsExamples/ErrorsPage\";\r\n\r\nexport function Routes() {\r\n    const {isAuthorized} = useSelector(\r\n        ({auth}) => ({\r\n            isAuthorized: auth.user != null,\r\n        }),\r\n        shallowEqual\r\n    );\r\n\r\n    return (\r\n        <Switch>\r\n            {!isAuthorized ? (\r\n                /*Render auth page when user at `/auth` and not authorized.*/\r\n                <Route>\r\n                    <AuthPage />\r\n                </Route>\r\n            ) : (\r\n                /*Otherwise redirect to root page (`/`)*/\r\n                <Redirect from=\"/auth\" to=\"/\"/>\r\n            )}\r\n\r\n            <Route path=\"/error\" component={ErrorsPage}/>\r\n            <Route path=\"/logout\" component={Logout}/>\r\n\r\n\r\n            {!isAuthorized ? (\r\n                /*Redirect to `/auth` when user is not authorized*/\r\n                <Redirect to=\"/auth/login\"/>\r\n            ) : (\r\n                <Layout>\r\n                    <BasePage/>\r\n                </Layout>\r\n            )}\r\n        </Switch>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}