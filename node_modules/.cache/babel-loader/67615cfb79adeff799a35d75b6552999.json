{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\ReactBootstrapExamples\\\\TooltipsExamplesPage.js\";\nimport React from \"react\";\nimport { Button, Overlay, Tooltip, OverlayTrigger, ButtonToolbar } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Example extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.attachRef = target => this.setState({\n      target\n    });\n\n    this.state = {\n      show: false\n    };\n  }\n\n  render() {\n    const {\n      show,\n      target\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        ref: this.attachRef,\n        onClick: () => this.setState({\n          show: !show\n        }),\n        children: \"Click me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n        target: target,\n        show: show,\n        placement: \"right\",\n        children: props => /*#__PURE__*/_jsxDEV(Tooltip, {\n          id: \"overlay-example\",\n          ...props,\n          children: \"My Tooltip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default class TooltipsExamplesPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"A tooltip component for a more stylish alternative to that anchor tag \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), \" attribute.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            className: \"font-weight-bold\",\n            rel: \"noopener noreferrer\",\n            href: \"https://react-bootstrap.github.io/components/overlays/#tooltips\",\n            children: \"demos & documentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode1,\n            beforeCodeTitle: \"Basic Example\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"You can pass the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"Overlay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 34\n              }, this), \" injected props directly to the Tooltip component.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode2,\n            beforeCodeTitle: \"Trigger\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Or pass a Tooltip element to \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"OverlayTrigger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 46\n              }, this), \" \", \"instead.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n              children: [\"top\", \"right\", \"bottom\", \"left\"].map(placement => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                  placement: placement,\n                  overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    id: `tooltip-${placement}`,\n                    children: [\"Tooltip on \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: placement\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 38\n                    }, this), \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 25\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"secondary\",\n                    children: [\"Tooltip on \", placement]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)]\n              }, placement, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nconst jsCode1 = `\nclass Example extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.attachRef = target => this.setState({ target });\n    this.state = { show: false };\n  }\n\n  render() {\n    const { show, target } = this.state;\n    return (\n      <>\n        <Button\n          ref={this.attachRef}\n          onClick={() => this.setState({ show: !show })}\n        >\n          Click me!\n        </Button>\n        <Overlay target={target} show={show} placement=\"right\">\n          {props => (\n            <Tooltip id=\"overlay-example\" {...props}>\n              My Tooltip\n            </Tooltip>\n          )}\n        </Overlay>\n      </>\n    );\n  }\n}\n\nrender(<Example />);\n`;\nconst jsCode2 = `\n<ButtonToolbar>\n  {['top', 'right', 'bottom', 'left'].map(placement => (\n    <OverlayTrigger\n      key={placement}\n      placement={placement}\n      overlay={\n        <Tooltip id={\\`tooltip-\\${placement}\\`}>\n          Tooltip on <strong>{placement}</strong>.\n        </Tooltip>\n      }\n    >\n      <Button variant=\"secondary\">Tooltip on {placement}</Button>\n    </OverlayTrigger>\n  ))}\n</ButtonToolbar>\n`;","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/ReactBootstrapExamples/TooltipsExamplesPage.js"],"names":["React","Button","Overlay","Tooltip","OverlayTrigger","ButtonToolbar","Notice","KTCodeExample","Example","Component","constructor","args","attachRef","target","setState","state","show","render","props","TooltipsExamplesPage","jsCode1","jsCode2","map","placement"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Overlay,\r\n  Tooltip,\r\n  OverlayTrigger,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass Example extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.attachRef = target => this.setState({ target });\r\n    this.state = { show: false };\r\n  }\r\n\r\n  render() {\r\n    const { show, target } = this.state;\r\n    return (\r\n      <>\r\n        <Button\r\n          ref={this.attachRef}\r\n          onClick={() => this.setState({ show: !show })}\r\n        >\r\n          Click me!\r\n        </Button>\r\n        <Overlay target={target} show={show} placement=\"right\">\r\n          {props => (\r\n            <Tooltip id=\"overlay-example\" {...props}>\r\n              My Tooltip\r\n            </Tooltip>\r\n          )}\r\n        </Overlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class TooltipsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            A tooltip component for a more stylish alternative to that anchor\r\n            tag <code>title</code> attribute.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/overlays/#tooltips\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              <span>\r\n                You can pass the <code>Overlay</code> injected props directly to\r\n                the Tooltip component.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Trigger\">\r\n              <span>\r\n                Or pass a Tooltip element to <code>OverlayTrigger</code>{\" \"}\r\n                instead.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ButtonToolbar>\r\n                {[\"top\", \"right\", \"bottom\", \"left\"].map(placement => (\r\n                  <span key={placement}>\r\n                    <OverlayTrigger\r\n                      placement={placement}\r\n                      overlay={\r\n                        <Tooltip id={`tooltip-${placement}`}>\r\n                          Tooltip on <strong>{placement}</strong>.\r\n                        </Tooltip>\r\n                      }\r\n                    >\r\n                      <Button variant=\"secondary\">\r\n                        Tooltip on {placement}\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                    <span>&nbsp;</span>\r\n                  </span>\r\n                ))}\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\nclass Example extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.attachRef = target => this.setState({ target });\r\n    this.state = { show: false };\r\n  }\r\n\r\n  render() {\r\n    const { show, target } = this.state;\r\n    return (\r\n      <>\r\n        <Button\r\n          ref={this.attachRef}\r\n          onClick={() => this.setState({ show: !show })}\r\n        >\r\n          Click me!\r\n        </Button>\r\n        <Overlay target={target} show={show} placement=\"right\">\r\n          {props => (\r\n            <Tooltip id=\"overlay-example\" {...props}>\r\n              My Tooltip\r\n            </Tooltip>\r\n          )}\r\n        </Overlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode2 = `\r\n<ButtonToolbar>\r\n  {['top', 'right', 'bottom', 'left'].map(placement => (\r\n    <OverlayTrigger\r\n      key={placement}\r\n      placement={placement}\r\n      overlay={\r\n        <Tooltip id={\\`tooltip-\\${placement}\\`}>\r\n          Tooltip on <strong>{placement}</strong>.\r\n        </Tooltip>\r\n      }\r\n    >\r\n      <Button variant=\"secondary\">Tooltip on {placement}</Button>\r\n    </OverlayTrigger>\r\n  ))}\r\n</ButtonToolbar>\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}