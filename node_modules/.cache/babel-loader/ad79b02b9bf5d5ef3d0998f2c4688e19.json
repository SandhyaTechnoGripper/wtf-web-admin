{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\utils\\\\PortalExamplesPage.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Typography, Portal } from \"@material-ui/core\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  alert: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(1, 0),\n    border: \"1px solid\",\n    borderColor: theme.palette.text.primary\n  }\n}));\nexport default function PortalExamplesPage() {\n  _s();\n\n  // Example 1\n  const [show, setShow] = React.useState(false);\n  const container = React.useRef(null);\n  const classes = useStyles();\n\n  function handleClick() {\n    setShow(!show);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notice, {\n      icon: \"flaticon-warning font-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"The portal component renders its children into a new \\\"subtree\\\" outside of current component hierarchy.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"font-weight-bold\",\n          rel: \"noopener noreferrer\",\n          href: \"https://material-ui.com/components/portal/\",\n          children: \"demos & documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n      jsCode: jsCode1,\n      beforeCodeTitle: \"Simple Portal\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pb-3\",\n        children: [\"The children of the portal component will be appended to the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), \" specified.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The component is used internally by the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 51\n        }, this), \" and\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Popper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \" components. On the server, the content won't be rendered. You have to wait for the client side hydratation to see the children.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"separator separator-dashed my-7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClick,\n          children: show ? \"Unmount children\" : \"Mount children\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.alert,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"It looks like I will render here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), show ? /*#__PURE__*/_jsxDEV(Portal, {\n            container: container.current,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"But I actually render here!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.alert,\n          ref: container\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PortalExamplesPage, \"Ir6WKBQAKRbZjUtGjNlsE6Pupmc=\", false, function () {\n  return [useStyles];\n});\n\n_c = PortalExamplesPage;\nconst jsCode1 = `\nimport React from 'react';\nimport Portal from '@material-ui/core/Portal';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  alert: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(1, 0),\n    border: '1px solid',\n    borderColor: theme.palette.text.primary,\n  },\n}));\n\nexport default function SimplePortal() {\n  const [show, setShow] = React.useState(false);\n  const container = React.useRef(null);\n  const classes = useStyles();\n\n  function handleClick() {\n    setShow(!show);\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick}>{show ? 'Unmount children' : 'Mount children'}</Button>\n      <div className={classes.alert}>\n        <Typography>It looks like I will render here.</Typography>\n        {show ? (\n          <Portal container={container.current}>\n            <Typography>But I actually render here!</Typography>\n          </Portal>\n        ) : null}\n      </div>\n      <div className={classes.alert} ref={container} />\n    </div>\n  );\n}\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortalExamplesPage\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/GoogleMaterialExamples/utils/PortalExamplesPage.js"],"names":["React","makeStyles","Button","Typography","Portal","Notice","KTCodeExample","useStyles","theme","alert","padding","spacing","margin","border","borderColor","palette","text","primary","PortalExamplesPage","show","setShow","useState","container","useRef","classes","handleClick","jsCode1","current"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Button, Typography, Portal} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  alert: {\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1, 0),\r\n    border: \"1px solid\",\r\n    borderColor: theme.palette.text.primary\r\n  }\r\n}));\r\n\r\nexport default function PortalExamplesPage() {\r\n  // Example 1\r\n  const [show, setShow] = React.useState(false);\r\n  const container = React.useRef(null);\r\n  const classes = useStyles();\r\n\r\n  function handleClick() {\r\n    setShow(!show);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          The portal component renders its children into a new \"subtree\" outside\r\n          of current component hierarchy.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/portal/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple Portal\">\r\n        <span className=\"pb-3\">\r\n          The children of the portal component will be appended to the{\" \"}\r\n          <code>container</code> specified.\r\n        </span>\r\n        <div>\r\n          The component is used internally by the <code>Modal</code> and{\" \"}\r\n          <code>Popper</code> components. On the server, the content won't be\r\n          rendered. You have to wait for the client side hydratation to see the\r\n          children.\r\n        </div>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div>\r\n          <Button onClick={handleClick}>\r\n            {show ? \"Unmount children\" : \"Mount children\"}\r\n          </Button>\r\n          <div className={classes.alert}>\r\n            <Typography>It looks like I will render here.</Typography>\r\n            {show ? (\r\n              <Portal container={container.current}>\r\n                <Typography>But I actually render here!</Typography>\r\n              </Portal>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.alert} ref={container} />\r\n        </div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport Portal from '@material-ui/core/Portal';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  alert: {\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1, 0),\r\n    border: '1px solid',\r\n    borderColor: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nexport default function SimplePortal() {\r\n  const [show, setShow] = React.useState(false);\r\n  const container = React.useRef(null);\r\n  const classes = useStyles();\r\n\r\n  function handleClick() {\r\n    setShow(!show);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>{show ? 'Unmount children' : 'Mount children'}</Button>\r\n      <div className={classes.alert}>\r\n        <Typography>It looks like I will render here.</Typography>\r\n        {show ? (\r\n          <Portal container={container.current}>\r\n            <Typography>But I actually render here!</Typography>\r\n          </Portal>\r\n        ) : null}\r\n      </div>\r\n      <div className={classes.alert} ref={container} />\r\n    </div>\r\n  );\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}