{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\App.js\";\n\n/**\n * Entry application component used to compose providers and render Routes.\n * */\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { AuthInit } from \"./modules/Auth\";\nimport { Routes } from \"../app/Routes\";\nimport { I18nProvider } from \"../_metronic/i18n\";\nimport { LayoutSplashScreen, MaterialThemeProvider } from \"../_metronic/layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App({\n  store,\n  persistor,\n  basename\n}) {\n  return (\n    /*#__PURE__*/\n\n    /* Provide Redux store */\n    _jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(PersistGate, {\n        persistor: persistor,\n        loading: /*#__PURE__*/_jsxDEV(LayoutSplashScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 52\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(React.Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(LayoutSplashScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 36\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n            basename: basename,\n            children: /*#__PURE__*/_jsxDEV(MaterialThemeProvider, {\n              children: /*#__PURE__*/_jsxDEV(I18nProvider, {\n                children: /*#__PURE__*/_jsxDEV(AuthInit, {\n                  children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 30,\n                    columnNumber: 20\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 18\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }, this)\n  );\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/App.js"],"names":["React","Provider","BrowserRouter","PersistGate","AuthInit","Routes","I18nProvider","LayoutSplashScreen","MaterialThemeProvider","App","store","persistor","basename"],"mappings":";;AAAA;AACA;AACA;AAEC,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,qBAA1D;;AAEA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAb,EAA6C;AAC1D;AAAA;;AACE;AACA,YAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,KAAjB;AAAA,6BAEE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEC,SAAxB;AAAmC,QAAA,OAAO,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,gBAA5C;AAAA,+BAEE,QAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,QAAQ,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,kBAA1B;AAAA,iCAEE,QAAC,aAAD;AAAe,YAAA,QAAQ,EAAEC,QAAzB;AAAA,mCAEE,QAAC,qBAAD;AAAA,qCAEE,QAAC,YAAD;AAAA,uCAEE,QAAC,QAAD;AAAA,yCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFF;AAwBD;KAzBuBH,G","sourcesContent":["/**\n * Entry application component used to compose providers and render Routes.\n * */\n\n import React from \"react\";\n import { Provider } from \"react-redux\";\n import { BrowserRouter } from \"react-router-dom\";\n import { PersistGate } from \"redux-persist/integration/react\";\n import { AuthInit } from \"./modules/Auth\";\n import { Routes } from \"../app/Routes\";\n import { I18nProvider } from \"../_metronic/i18n\";\n import { LayoutSplashScreen, MaterialThemeProvider } from \"../_metronic/layout\";\n \n export default function App({ store, persistor, basename }) {\n   return (\n     /* Provide Redux store */\n     <Provider store={store}>\n       {/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\n       <PersistGate persistor={persistor} loading={<LayoutSplashScreen />}>\n         {/* Add high level `Suspense` in case if was not handled inside the React tree. */}\n         <React.Suspense fallback={<LayoutSplashScreen />}>\n           {/* Override `basename` (e.g: `homepage` in `package.json`) */}\n           <BrowserRouter basename={basename}>\n             {/*This library only returns the location that has been active before the recent location change in the current window lifetime.*/}\n             <MaterialThemeProvider>\n               {/* Provide `react-intl` context synchronized with Redux state.  */}\n               <I18nProvider>\n                 {/* Render routes with provided `Layout`. */}\n                 <AuthInit>\n                   <Routes />\n                 </AuthInit>\n               </I18nProvider>\n             </MaterialThemeProvider>\n           </BrowserRouter>\n         </React.Suspense>\n       </PersistGate>\n     </Provider>\n   );\n }\n \n"]},"metadata":{},"sourceType":"module"}