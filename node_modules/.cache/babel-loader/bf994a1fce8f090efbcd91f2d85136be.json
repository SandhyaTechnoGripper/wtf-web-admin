{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\ReactBootstrapExamples\\\\DropdownsExamplesPage.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Button, Dropdown, FormControl, ButtonGroup, DropdownButton, SplitButton, ButtonToolbar } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomToggle = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"\",\n    ref: ref,\n    onClick: e => {\n      e.preventDefault();\n      this.props.handleClick(e);\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n});\n_c2 = CustomToggle;\n\nclass CustomMenu extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      value: \"\"\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value.toLowerCase().trim()\n    });\n  }\n\n  render() {\n    const {\n      children,\n      style,\n      className,\n      \"aria-labelledby\": labeledBy\n    } = this.props;\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      className: className,\n      \"aria-labelledby\": labeledBy,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        autoFocus: true,\n        className: \"mx-3 my-2 w-auto\",\n        placeholder: \"Type to filter...\",\n        onChange: this.handleChange,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled\",\n        children: React.Children.toArray(children).filter(child => !value || child.props.children.toLowerCase().startsWith(value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default class DropdownsExamplesPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Toggle contextual overlays for displaying lists of links and more with the Bootstrap dropdown plugin.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            className: \"font-weight-bold\",\n            rel: \"noopener noreferrer\",\n            href: \"https://react-bootstrap.github.io/components/dropdowns/\",\n            children: \"demos & documentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode1,\n            beforeCodeTitle: \"Single button dropdowns\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"The basic Dropdown is composed of a wrapping Dropdown and inner\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<DropdownMenu>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), \", and\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<DropdownToggle>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), \". By default the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<DropdownToggle>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), \" will render a Button component and accepts all the same props.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                variant: \"success\",\n                id: \"dropdown-basic\",\n                children: \"Dropdown Button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  href: \"#/action-1\",\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  href: \"#/action-2\",\n                  children: \"Another action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  href: \"#/action-3\",\n                  children: \"Something else\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode2,\n            beforeCodeTitle: \"Split button dropdowns\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Similarly, You create a split dropdown by combining the Dropdown components with another Button and a ButtonGroup.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              as: ButtonGroup,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                children: \"Split Button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                split: true,\n                variant: \"success\",\n                id: \"dropdown-split-basic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  href: \"#/action-1\",\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  href: \"#/action-2\",\n                  children: \"Another action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  href: \"#/action-3\",\n                  children: \"Something else\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode3,\n            beforeCodeTitle: \"Sizing\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dropdowns work with buttons of all sizes.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: [DropdownButton, SplitButton].map((DropdownType, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pr-1\",\n                  children: /*#__PURE__*/_jsxDEV(DropdownType, {\n                    size: \"lg\",\n                    title: \"Drop small\",\n                    id: `dropdown-button-drop-${idx}`,\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"1\",\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"2\",\n                      children: \"Another action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"3\",\n                      children: \"Something else here\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"4\",\n                      children: \"Separated link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 25\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this)\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: [DropdownButton, SplitButton].map((DropdownType, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pr-1\",\n                  children: /*#__PURE__*/_jsxDEV(DropdownType, {\n                    size: \"sm\",\n                    variant: \"secondary\",\n                    title: \"Drop small\",\n                    id: `dropdown-button-drop-${idx}`,\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"1\",\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"2\",\n                      children: \"Another action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"3\",\n                      children: \"Something else here\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"4\",\n                      children: \"Separated link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 25\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this)\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode5,\n            beforeCodeTitle: \"Dropdown items\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Historically dropdown menu contents had to be links, but that\\u2019s no longer the case with v4. Now you can optionally use\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<button>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), \" elements in your dropdowns instead of just \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<a>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 25\n              }, this), \"s.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n              id: \"dropdown-item-button\",\n              title: \"Dropdown button\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                as: \"button\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                as: \"button\",\n                children: \"Another action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                as: \"button\",\n                children: \"Something else\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode9,\n            beforeCodeTitle: \"Customization\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"If the default handling of the dropdown menu and toggle components aren't to your liking, you can customize them, by using the more basic \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<Dropdown>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 38\n              }, this), \" Component to explicitly specify the Toggle and Menu components\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pr-1\",\n                children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    id: \"dropdown-custom-1\",\n                    children: \"Pow! Zoom!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    className: \"super-colors\",\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"1\",\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"2\",\n                      children: \"Another action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"3\",\n                      active: true,\n                      children: \"Active Item\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"4\",\n                      children: \"Separated link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pr-1\",\n                children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                  as: ButtonGroup,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"info\",\n                    children: \"mix it up style-wise\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    split: true,\n                    variant: \"success\",\n                    id: \"dropdown-custom-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    className: \"super-colors\",\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"1\",\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"2\",\n                      children: \"Another action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"3\",\n                      active: true,\n                      children: \"Active Item\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"4\",\n                      children: \"Separated link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode4,\n            beforeCodeTitle: \"Drop directions\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Trigger dropdown menus above, below, left, or to the right of their toggle elements, with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"drop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 49\n              }, this), \" prop.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: [\"up\", \"down\", \"left\", \"right\"].map(direction => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pr-1 pb-1\",\n                  children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n                    drop: direction,\n                    variant: \"secondary\",\n                    title: ` Drop ${direction} `,\n                    id: `dropdown-button-drop-${direction}`,\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"1\",\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"2\",\n                      children: \"Another action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"3\",\n                      children: \"Something else here\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"4\",\n                      children: \"Separated link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 25\n                    }, this)]\n                  }, direction, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this)\n                }, direction, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: [\"up\", \"down\", \"left\", \"right\"].map(direction => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pr-1\",\n                  children: /*#__PURE__*/_jsxDEV(SplitButton, {\n                    drop: direction,\n                    variant: \"secondary\",\n                    title: `Drop ${direction}`,\n                    id: `dropdown-button-drop-${direction}`,\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"1\",\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"2\",\n                      children: \"Another action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"3\",\n                      children: \"Something else here\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: \"4\",\n                      children: \"Separated link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 25\n                    }, this)]\n                  }, direction, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this)\n                }, direction, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode6,\n            beforeCodeTitle: \"Menu alignment\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"By default, a dropdown menu is aligned to the left, but you can switch it by passing the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"alignRight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 42\n              }, this), \" prop.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n              alignRight: true,\n              title: \"Dropdown right\",\n              id: \"dropdown-menu-align-right\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: \"1\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: \"2\",\n                children: \"Another action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: \"3\",\n                children: \"Something else here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: \"4\",\n                children: \"Separated link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode10,\n            beforeCodeTitle: \"Custom Dropdown Components\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"For those that want to customize everything, you can forgo the included Toggle and Menu components, and create your own. By providing custom components to the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"as\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 52\n              }, this), \" prop, you can control how each component behaves. Custom toggle and menu components must be able to accept refs.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                as: CustomToggle,\n                id: \"dropdown-custom-components\",\n                children: \"Custom toggle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                as: CustomMenu,\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"1\",\n                  children: \"Red\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"2\",\n                  children: \"Blue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"3\",\n                  active: true,\n                  children: \"Orange\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"1\",\n                  children: \"Red-Orange\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nconst jsCode1 = `\n<Dropdown>\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n    Dropdown Button\n  </Dropdown.Toggle>\n\n  <Dropdown.Menu>\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>\n`;\nconst jsCode2 = `\n<Dropdown as={ButtonGroup}>\n  <Button variant=\"success\">Split Button</Button>\n\n  <Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\n\n  <Dropdown.Menu>\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>\n`;\nconst jsCode3 = `\n<>\n  <ButtonToolbar>\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\n      <DropdownType\n        size=\"lg\"\n        title=\"Drop small\"\n        id={\\`dropdown-button-drop-\\${idx}\\`}\n        key={idx}\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n      </DropdownType>\n    ))}\n  </ButtonToolbar>\n  <ButtonToolbar>\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\n      <DropdownType\n        size=\"sm\"\n        variant=\"secondary\"\n        title=\"Drop small\"\n        id={\\`dropdown-button-drop-\\${idx}\\`}\n        key={idx}\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n      </DropdownType>\n    ))}\n  </ButtonToolbar>\n</>\n`;\nconst jsCode4 = `\n<>\n  <ButtonToolbar>\n    {['up', 'down', 'left', 'right'].map(direction => (\n      <DropdownButton\n        drop={direction}\n        variant=\"secondary\"\n        title={\\` Drop \\${direction} \\`}\n        id={\\`dropdown-button-drop-\\${direction}\\`}\n        key={direction}\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n      </DropdownButton>\n    ))}\n  </ButtonToolbar>\n\n  <ButtonToolbar>\n    {['up', 'down', 'left', 'right'].map(direction => (\n      <SplitButton\n        drop={direction}\n        variant=\"secondary\"\n        title={\\`Drop \\${direction}\\`}\n        id={\\`dropdown-button-drop-\\${direction}\\`}\n        key={direction}\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n      </SplitButton>\n    ))}\n  </ButtonToolbar>\n</>\n`;\nconst jsCode5 = `\n<DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\n  <Dropdown.Item as=\"button\">Action</Dropdown.Item>\n  <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\n  <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\n</DropdownButton>\n`;\nconst jsCode6 = `\n<DropdownButton\n  alignRight\n  title=\"Dropdown right\"\n  id=\"dropdown-menu-align-right\"\n>\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n  <Dropdown.Divider />\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n</DropdownButton>\n`;\nconst jsCode7 = `\n<Dropdown.Menu show>\n  <Dropdown.Header>Dropdown header</Dropdown.Header>\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n</Dropdown.Menu>\n`;\nconst jsCode8 = `\n<Dropdown.Menu show>\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n  <Dropdown.Divider />\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n</Dropdown.Menu>\n`;\nconst jsCode9 = `\n<ButtonToolbar>\n  <Dropdown>\n    <Dropdown.Toggle id=\"dropdown-custom-1\">Pow! Zoom!</Dropdown.Toggle>\n    <Dropdown.Menu className=\"super-colors\">\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n      <Dropdown.Item eventKey=\"3\" active>\n        Active Item\n      </Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown as={ButtonGroup}>\n    <Button variant=\"info\">mix it up style-wise</Button>\n    <Dropdown.Toggle split variant=\"success\" id=\"dropdown-custom-2\" />\n    <Dropdown.Menu className=\"super-colors\">\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n      <Dropdown.Item eventKey=\"3\" active>\n        Active Item\n      </Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</ButtonToolbar>\n`;\nconst jsCode10 = `\nclass CustomToggle extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n\n    this.props.onClick(e);\n  }\n\n  render() {\n    return (\n      <a href=\"\" onClick={this.handleClick}>\n        {this.props.children}\n      </a>\n    );\n  }\n}\n\nclass CustomMenu extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = { value: '' };\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value.toLowerCase().trim() });\n  }\n\n  render() {\n    const {\n      children,\n      style,\n      className,\n      'aria-labelledby': labeledBy,\n    } = this.props;\n\n    const { value } = this.state;\n\n    return (\n      <div style={style} className={className} aria-labelledby={labeledBy}>\n        <FormControl\n          autoFocus\n          className=\"mx-3 my-2 w-auto\"\n          placeholder=\"Type to filter...\"\n          onChange={this.handleChange}\n          value={value}\n        />\n        <ul className=\"list-unstyled\">\n          {React.Children.toArray(children).filter(\n            child =>\n              !value || child.props.children.toLowerCase().startsWith(value),\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nrender(\n  <Dropdown>\n    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\n      Custom toggle\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu as={CustomMenu}>\n      <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\n      <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n      <Dropdown.Item eventKey=\"3\" active>\n        Orange\n      </Dropdown.Item>\n      <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>,\n);\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomToggle$React.forwardRef\");\n$RefreshReg$(_c2, \"CustomToggle\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/ReactBootstrapExamples/DropdownsExamplesPage.js"],"names":["React","Button","Dropdown","FormControl","ButtonGroup","DropdownButton","SplitButton","ButtonToolbar","Notice","KTCodeExample","CustomToggle","forwardRef","props","ref","e","preventDefault","handleClick","children","CustomMenu","Component","constructor","context","handleChange","bind","state","value","setState","target","toLowerCase","trim","render","style","className","labeledBy","Children","toArray","filter","child","startsWith","DropdownsExamplesPage","jsCode1","jsCode2","jsCode3","map","DropdownType","idx","jsCode5","jsCode9","jsCode4","direction","jsCode6","jsCode10","jsCode7","jsCode8"],"mappings":"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OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAaA,MAAMC,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAaA,MAAMC,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApCA;AAqCA,MAAMM,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtCA;AAuCA,MAAMF,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,MAAMI,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAaA,MAAME,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,MAAMC,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,MAAMN,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;AA8BA,MAAMI,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlFA","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  FormControl,\r\n  ButtonGroup,\r\n  DropdownButton,\r\n  SplitButton,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nconst CustomToggle = React.forwardRef((props, ref) => {\r\n  return (\r\n    <a\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={e => {\r\n        e.preventDefault();\r\n        this.props.handleClick(e);\r\n      }}\r\n    >\r\n      {props.children}\r\n    </a>\r\n  );\r\n});\r\n\r\nclass CustomMenu extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = { value: \"\" };\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value.toLowerCase().trim() });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      style,\r\n      className,\r\n      \"aria-labelledby\": labeledBy\r\n    } = this.props;\r\n\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div style={style} className={className} aria-labelledby={labeledBy}>\r\n        <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Type to filter...\"\r\n          onChange={this.handleChange}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            child =>\r\n              !value || child.props.children.toLowerCase().startsWith(value)\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class DropdownsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Toggle contextual overlays for displaying lists of links and more\r\n            with the Bootstrap dropdown plugin.\r\n          </span>\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/dropdowns/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode1}\r\n              beforeCodeTitle=\"Single button dropdowns\"\r\n            >\r\n              <span>\r\n                The basic Dropdown is composed of a wrapping Dropdown and inner{\" \"}\r\n                <code>&lt;DropdownMenu&gt;</code>, and{\" \"}\r\n                <code>&lt;DropdownToggle&gt;</code>. By default the{\" \"}\r\n                <code>&lt;DropdownToggle&gt;</code> will render a Button\r\n                component and accepts all the same props.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  Dropdown Button\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-2\">\r\n                    Another action\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-3\">\r\n                    Something else\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Split button dropdowns\"\r\n            >\r\n              <span>\r\n                Similarly, You create a split dropdown by combining the Dropdown\r\n                components with another Button and a ButtonGroup.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Dropdown as={ButtonGroup}>\r\n                <Button variant=\"success\">Split Button</Button>\r\n\r\n                <Dropdown.Toggle\r\n                  split\r\n                  variant=\"success\"\r\n                  id=\"dropdown-split-basic\"\r\n                />\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-2\">\r\n                    Another action\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-3\">\r\n                    Something else\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Sizing\">\r\n              <span>Dropdowns work with buttons of all sizes.</span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <>\r\n                <ButtonToolbar>\r\n                  {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n                    <div key={idx} className=\"pr-1\">\r\n                      <DropdownType\r\n                        size=\"lg\"\r\n                        title=\"Drop small\"\r\n                        id={`dropdown-button-drop-${idx}`}\r\n                        key={idx}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </DropdownType>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n                <br />\r\n                <ButtonToolbar>\r\n                  {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n                    <div key={idx} className=\"pr-1\">\r\n                      <DropdownType\r\n                        size=\"sm\"\r\n                        variant=\"secondary\"\r\n                        title=\"Drop small\"\r\n                        id={`dropdown-button-drop-${idx}`}\r\n                        key={idx}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </DropdownType>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Dropdown items\">\r\n              <span>\r\n                Historically dropdown menu contents had to be links, but that’s\r\n                no longer the case with v4. Now you can optionally use{\" \"}\r\n                <code>&lt;button&gt;</code> elements in your dropdowns instead\r\n                of just <code>&lt;a&gt;</code>s.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n                <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n              </DropdownButton>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Customization\">\r\n              <span>\r\n                If the default handling of the dropdown menu and toggle\r\n                components aren't to your liking, you can customize them, by\r\n                using the more basic <code>&lt;Dropdown&gt;</code> Component to\r\n                explicitly specify the Toggle and Menu components\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <div className=\"pr-1\">\r\n                  <Dropdown>\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\">\r\n                      Pow! Zoom!\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"3\" active>\r\n                        Active Item\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </div>\r\n                <div className=\"pr-1\">\r\n                  <Dropdown as={ButtonGroup}>\r\n                    <Button variant=\"info\">mix it up style-wise</Button>\r\n                    <Dropdown.Toggle\r\n                      split\r\n                      variant=\"success\"\r\n                      id=\"dropdown-custom-2\"\r\n                    />\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"3\" active>\r\n                        Active Item\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </div>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Drop directions\">\r\n              <span>\r\n                Trigger dropdown menus above, below, left, or to the right of\r\n                their toggle elements, with the <code>drop</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <>\r\n                <ButtonToolbar>\r\n                  {[\"up\", \"down\", \"left\", \"right\"].map(direction => (\r\n                    <div className=\"pr-1 pb-1\" key={direction}>\r\n                      <DropdownButton\r\n                        drop={direction}\r\n                        variant=\"secondary\"\r\n                        title={` Drop ${direction} `}\r\n                        id={`dropdown-button-drop-${direction}`}\r\n                        key={direction}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </DropdownButton>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n\r\n                <ButtonToolbar>\r\n                  {[\"up\", \"down\", \"left\", \"right\"].map(direction => (\r\n                    <div className=\"pr-1\" key={direction}>\r\n                      <SplitButton\r\n                        drop={direction}\r\n                        variant=\"secondary\"\r\n                        title={`Drop ${direction}`}\r\n                        id={`dropdown-button-drop-${direction}`}\r\n                        key={direction}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </SplitButton>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Menu alignment\">\r\n              <span>\r\n                By default, a dropdown menu is aligned to the left, but you can\r\n                switch it by passing the <code>alignRight</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <DropdownButton\r\n                alignRight\r\n                title=\"Dropdown right\"\r\n                id=\"dropdown-menu-align-right\"\r\n              >\r\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n              </DropdownButton>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode10}\r\n              beforeCodeTitle=\"Custom Dropdown Components\"\r\n            >\r\n              <span>\r\n                For those that want to customize everything, you can forgo the\r\n                included Toggle and Menu components, and create your own. By\r\n                providing custom components to the <code>as</code> prop, you can\r\n                control how each component behaves. Custom toggle and menu\r\n                components must be able to accept refs.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Dropdown>\r\n                <Dropdown.Toggle\r\n                  as={CustomToggle}\r\n                  id=\"dropdown-custom-components\"\r\n                >\r\n                  Custom toggle\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"3\" active>\r\n                    Orange\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Dropdown>\r\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n    Dropdown Button\r\n  </Dropdown.Toggle>\r\n\r\n  <Dropdown.Menu>\r\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n`;\r\nconst jsCode2 = `\r\n<Dropdown as={ButtonGroup}>\r\n  <Button variant=\"success\">Split Button</Button>\r\n\r\n  <Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\r\n\r\n  <Dropdown.Menu>\r\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <ButtonToolbar>\r\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n      <DropdownType\r\n        size=\"lg\"\r\n        title=\"Drop small\"\r\n        id={\\`dropdown-button-drop-\\${idx}\\`}\r\n        key={idx}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownType>\r\n    ))}\r\n  </ButtonToolbar>\r\n  <ButtonToolbar>\r\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n      <DropdownType\r\n        size=\"sm\"\r\n        variant=\"secondary\"\r\n        title=\"Drop small\"\r\n        id={\\`dropdown-button-drop-\\${idx}\\`}\r\n        key={idx}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownType>\r\n    ))}\r\n  </ButtonToolbar>\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<>\r\n  <ButtonToolbar>\r\n    {['up', 'down', 'left', 'right'].map(direction => (\r\n      <DropdownButton\r\n        drop={direction}\r\n        variant=\"secondary\"\r\n        title={\\` Drop \\${direction} \\`}\r\n        id={\\`dropdown-button-drop-\\${direction}\\`}\r\n        key={direction}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownButton>\r\n    ))}\r\n  </ButtonToolbar>\r\n\r\n  <ButtonToolbar>\r\n    {['up', 'down', 'left', 'right'].map(direction => (\r\n      <SplitButton\r\n        drop={direction}\r\n        variant=\"secondary\"\r\n        title={\\`Drop \\${direction}\\`}\r\n        id={\\`dropdown-button-drop-\\${direction}\\`}\r\n        key={direction}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </SplitButton>\r\n    ))}\r\n  </ButtonToolbar>\r\n</>\r\n`;\r\nconst jsCode5 = `\r\n<DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n  <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n  <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n  <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n</DropdownButton>\r\n`;\r\nconst jsCode6 = `\r\n<DropdownButton\r\n  alignRight\r\n  title=\"Dropdown right\"\r\n  id=\"dropdown-menu-align-right\"\r\n>\r\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n  <Dropdown.Divider />\r\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n</DropdownButton>\r\n`;\r\nconst jsCode7 = `\r\n<Dropdown.Menu show>\r\n  <Dropdown.Header>Dropdown header</Dropdown.Header>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n</Dropdown.Menu>\r\n`;\r\nconst jsCode8 = `\r\n<Dropdown.Menu show>\r\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n  <Dropdown.Divider />\r\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n</Dropdown.Menu>\r\n`;\r\nconst jsCode9 = `\r\n<ButtonToolbar>\r\n  <Dropdown>\r\n    <Dropdown.Toggle id=\"dropdown-custom-1\">Pow! Zoom!</Dropdown.Toggle>\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n\r\n  <Dropdown as={ButtonGroup}>\r\n    <Button variant=\"info\">mix it up style-wise</Button>\r\n    <Dropdown.Toggle split variant=\"success\" id=\"dropdown-custom-2\" />\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode10 = `\r\nclass CustomToggle extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n\r\n    this.props.onClick(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a href=\"\" onClick={this.handleClick}>\r\n        {this.props.children}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nclass CustomMenu extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = { value: '' };\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value.toLowerCase().trim() });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      style,\r\n      className,\r\n      'aria-labelledby': labeledBy,\r\n    } = this.props;\r\n\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div style={style} className={className} aria-labelledby={labeledBy}>\r\n        <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Type to filter...\"\r\n          onChange={this.handleChange}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            child =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(\r\n  <Dropdown>\r\n    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n      Custom toggle\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Orange\r\n      </Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>,\r\n);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}