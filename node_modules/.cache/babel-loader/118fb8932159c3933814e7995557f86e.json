{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\ECommerce\\\\pages\\\\customers\\\\customers-update-status-dialog\\\\CustomersUpdateStateDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { CustomerStatusCssClasses, CustomerStatusTitles } from \"../CustomersUIHelpers\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst selectedCustomers = (entities, ids) => {\n  const _customers = [];\n  ids.forEach(id => {\n    const customer = entities.find(el => el.id === id);\n\n    if (customer) {\n      _customers.push(customer);\n    }\n  });\n  return _customers;\n};\n\nexport function CustomersUpdateStateDialog({\n  show,\n  onHide\n}) {\n  _s();\n\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams\n    };\n  }, [customersUIContext]); // Customers Redux state\n\n  const {\n    customers,\n    isLoading\n  } = useSelector(state => ({\n    customers: selectedCustomers(state.customers.entities, customersUIProps.ids),\n    isLoading: state.customers.actionsLoading\n  }), shallowEqual); // if !id we should close modal\n\n  useEffect(() => {\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\n      onHide();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [customersUIProps.ids]);\n  const [status, setStatus] = useState(0);\n  const dispatch = useDispatch();\n\n  const updateStatus = () => {\n    // server request for update customers status by selected ids\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(() => {\n      // refresh list after deletion\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(() => {\n        // clear selections list\n        customersUIProps.setIds([]); // closing delete modal\n\n        onHide();\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"example-modal-sizes-title-lg\",\n        children: \"Status has been updated for selected customers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"overlay overlay-block cursor-default\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-layer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner spinner-lg spinner-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table table-head-custom table-vertical-center overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"STATUS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"CUSTOMER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: customer.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `label label-lg label-light-${CustomerStatusCssClasses[customer.status]} label-inline`,\n                children: [\" \", CustomerStatusTitles[customer.status]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-3\",\n                children: [customer.lastName, \", \", customer.firstName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, `id${customer.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: status,\n          onChange: e => setStatus(+e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"Suspended\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onHide,\n          className: \"btn btn-light btn-elevate mr-3\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: updateStatus,\n          className: \"btn btn-primary btn-elevate\",\n          children: \"Update Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomersUpdateStateDialog, \"sfwqukn35CuoxaGg23M0R+++N3s=\", false, function () {\n  return [useCustomersUIContext, useSelector, useDispatch];\n});\n\n_c = CustomersUpdateStateDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomersUpdateStateDialog\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStateDialog.js"],"names":["React","useEffect","useState","useMemo","Modal","shallowEqual","useDispatch","useSelector","CustomerStatusCssClasses","CustomerStatusTitles","actions","useCustomersUIContext","selectedCustomers","entities","ids","_customers","forEach","id","customer","find","el","push","CustomersUpdateStateDialog","show","onHide","customersUIContext","customersUIProps","setIds","queryParams","customers","isLoading","state","actionsLoading","length","status","setStatus","dispatch","updateStatus","updateCustomersStatus","then","fetchCustomers","map","lastName","firstName","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  CustomerStatusCssClasses,\r\n  CustomerStatusTitles,\r\n} from \"../CustomersUIHelpers\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersUpdateStateDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers, isLoading } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(\r\n        state.customers.entities,\r\n        customersUIProps.ids\r\n      ),\r\n      isLoading: state.customers.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for update customers status by selected ids\r\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            customersUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected customers\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {/*begin::Loading*/}\r\n        {isLoading && (\r\n          <div className=\"overlay-layer\">\r\n            <div className=\"spinner spinner-lg spinner-primary\" />\r\n          </div>\r\n        )}\r\n        {/*end::Loading*/}\r\n        <table className=\"table table table-head-custom table-vertical-center overflow-hidden\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>STATUS</th>\r\n              <th>CUSTOMER</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {customers.map((customer) => (\r\n              <tr key={`id${customer.id}`}>\r\n                <td>{customer.id}</td>\r\n                <td>\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      CustomerStatusCssClasses[customer.status]\r\n                    } label-inline`}\r\n                  >\r\n                    {\" \"}\r\n                    {CustomerStatusTitles[customer.status]}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"ml-3\">\r\n                    {customer.lastName}, {customer.firstName}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className=\"form-control\"\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Suspended</option>\r\n            <option value=\"1\">Active</option>\r\n            <option value=\"2\">Pending</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate mr-3\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}