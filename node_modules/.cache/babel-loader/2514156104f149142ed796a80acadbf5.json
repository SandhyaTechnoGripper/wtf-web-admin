{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\_metronic\\\\_partials\\\\controls\\\\code-examples\\\\CodeBlockToolbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport copy from \"clipboard-copy\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function CodeBlockToolbar({\n  showViewCode = false,\n  code,\n  isCodeBlockShown,\n  setIsCodeBlockShown\n}) {\n  _s();\n\n  const [isCopySucceed, setIsCopySucceed] = useState(false);\n\n  const copyCode = () => {\n    copy(code).then(() => {\n      setIsCopySucceed(true);\n      setTimeout(() => {\n        setIsCopySucceed(false);\n      }, 2000);\n    });\n  };\n\n  const toggleShowCode = () => {\n    setIsCodeBlockShown(!isCodeBlockShown);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showViewCode && /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: `${isCodeBlockShown ? \"\" : \"View code\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `example-toggle ${clsx({\n          \"example-toggled\": isCodeBlockShown\n        })}`,\n        onClick: toggleShowCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Copy code\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `example-copy ${clsx({\n          \"example-copied\": isCopySucceed\n        })}`,\n        onClick: copyCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CodeBlockToolbar, \"sPhXR1Dh4tzHFxd2cIoTyvVn6Fg=\");\n\n_c = CodeBlockToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeBlockToolbar\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/_metronic/_partials/controls/code-examples/CodeBlockToolbar.js"],"names":["React","useState","clsx","copy","Tooltip","CodeBlockToolbar","showViewCode","code","isCodeBlockShown","setIsCodeBlockShown","isCopySucceed","setIsCopySucceed","copyCode","then","setTimeout","toggleShowCode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;;;AAEA,OAAO,SAASC,gBAAT,CAA0B;AAC/BC,EAAAA,YAAY,GAAG,KADgB;AAE/BC,EAAAA,IAF+B;AAG/BC,EAAAA,gBAH+B;AAI/BC,EAAAA;AAJ+B,CAA1B,EAKJ;AAAA;;AACD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;;AACA,QAAMW,QAAQ,GAAG,MAAM;AACrBT,IAAAA,IAAI,CAACI,IAAD,CAAJ,CAAWM,IAAX,CAAgB,MAAM;AACpBF,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAG,MAAAA,UAAU,CAAC,MAAM;AACfH,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KALD;AAMD,GAPD;;AASA,QAAMI,cAAc,GAAG,MAAM;AAC3BN,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACD,GAFD;;AAIA,sBACE;AAAA,eACGF,YAAY,iBACX,QAAC,OAAD;AAAS,MAAA,KAAK,EAAG,GAAEE,gBAAgB,GAAG,EAAH,GAAQ,WAAY,EAAvD;AAAA,6BACE;AACE,QAAA,SAAS,EAAG,kBAAiBN,IAAI,CAAC;AAChC,6BAAmBM;AADa,SAAD,CAE9B,EAHL;AAIE,QAAA,OAAO,EAAEO;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAWE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAG,gBAAeb,IAAI,CAAC;AAC9B,4BAAkBQ;AADY,SAAD,CAE5B,EAHL;AAIE,QAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAsBD;;GA1CeP,gB;;KAAAA,gB","sourcesContent":["import React, {useState} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport copy from \"clipboard-copy\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\n\r\nexport function CodeBlockToolbar({\r\n  showViewCode = false,\r\n  code,\r\n  isCodeBlockShown,\r\n  setIsCodeBlockShown\r\n}) {\r\n  const [isCopySucceed, setIsCopySucceed] = useState(false);\r\n  const copyCode = () => {\r\n    copy(code).then(() => {\r\n      setIsCopySucceed(true);\r\n      setTimeout(() => {\r\n        setIsCopySucceed(false);\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const toggleShowCode = () => {\r\n    setIsCodeBlockShown(!isCodeBlockShown);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showViewCode && (\r\n        <Tooltip title={`${isCodeBlockShown ? \"\" : \"View code\"}`}>\r\n          <span\r\n            className={`example-toggle ${clsx({\r\n              \"example-toggled\": isCodeBlockShown\r\n            })}`}\r\n            onClick={toggleShowCode}\r\n          />\r\n        </Tooltip>\r\n      )}\r\n      <Tooltip title=\"Copy code\">\r\n        <span\r\n          className={`example-copy ${clsx({\r\n            \"example-copied\": isCopySucceed\r\n          })}`}\r\n          onClick={copyCode}\r\n        />\r\n      </Tooltip>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}