{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\utils\\\\NoSSRExamplesPage.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { NoSsr, Button } from \"@material-ui/core\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  button: {\n    display: \"block\",\n    margin: theme.spacing(2)\n  }\n}); // Example 2\n\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 300,\n    wordBreak: \"break-all\"\n  }\n});\n\nfunction LargeTree() {\n  return Array.from(new Array(3000)).map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \".\"\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n}\n\n_c = LargeTree;\n\nfunction NoSSRExamplesPage(props) {\n  _s();\n\n  // Example 1\n  const {\n    classes\n  } = props; // Example 2\n\n  const classes2 = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    defer: false\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notice, {\n      icon: \"flaticon-warning font-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"font-weight-bold\",\n          rel: \"noopener noreferrer\",\n          href: \"https://material-ui.com/components/no-ssr/\",\n          children: \"demos & documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n      jsCode: jsCode1,\n      beforeCodeTitle: \"Client side deferring\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"In it's core, the NoSsr component purpose is to defer rendering. You can use it to defer the rendering from the server to the client.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"separator separator-dashed my-7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Server & Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NoSsr, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            variant: \"contained\",\n            color: \"secondary\",\n            children: \"Client only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n      jsCode: jsCode2,\n      beforeCodeTitle: \"Frame deferring\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"You can also use it to defer the rendering within the client itself. You can wait a screen frame with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"defer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 48\n        }, this), \" property to render the children. React does 2 commits instead of 1.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"separator separator-dashed my-7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary mr-3\",\n          onClick: () => setState({\n            open: !state.open,\n            defer: false\n          }),\n          children: 'Render NoSsr defer=\"false\"'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => setState({\n            open: !state.open,\n            defer: true\n          }),\n          children: 'Render NoSsr defer=\"true\"'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), state.open ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes2.container,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Outside NoSsr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NoSsr, {\n            defer: state.defer,\n            children: [\"....Inside NoSsr\", /*#__PURE__*/_jsxDEV(LargeTree, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NoSSRExamplesPage, \"sqdxOGf1Ht4cwDKOFCIBIT5Z/Z8=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = NoSSRExamplesPage;\nNoSSRExamplesPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NoSSRExamplesPage);\nconst jsCode1 = `\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    display: 'block',\n    margin: theme.spacing(2),\n  },\n});\n\nfunction SimpleNoSsr(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <Button className={classes.button} variant=\"contained\" color=\"primary\">\n        Server & Client\n      </Button>\n      <NoSsr>\n        <Button className={classes.button} variant=\"contained\" color=\"secondary\">\n          Client only\n        </Button>\n      </NoSsr>\n    </div>\n  );\n}\n\nSimpleNoSsr.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleNoSsr);\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 300,\n    wordBreak: 'break-all',\n  },\n});\n\nfunction LargeTree() {\n  return Array.from(new Array(3000)).map((_, index) => <span key={index}>.</span>);\n}\n\nfunction FrameDeferring() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({ open: false, defer: false });\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={() =>\n          setState({\n            open: !state.open,\n            defer: false,\n          })\n        }\n      >\n        {'Render NoSsr defer=\"false\"'}\n      </button>\n      <button\n        type=\"button\"\n        onClick={() =>\n          setState({\n            open: !state.open,\n            defer: true,\n          })\n        }\n      >\n        {'Render NoSsr defer=\"true\"'}\n      </button>\n      {state.open ? (\n        <div className={classes.container}>\n          <span>Outside NoSsr</span>\n          <NoSsr defer={state.defer}>\n            ....Inside NoSsr\n            <LargeTree />\n          </NoSsr>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FrameDeferring;\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LargeTree\");\n$RefreshReg$(_c2, \"NoSSRExamplesPage\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/GoogleMaterialExamples/utils/NoSSRExamplesPage.js"],"names":["React","PropTypes","makeStyles","withStyles","NoSsr","Button","Notice","KTCodeExample","styles","theme","button","display","margin","spacing","useStyles","container","maxWidth","wordBreak","LargeTree","Array","from","map","_","index","NoSSRExamplesPage","props","classes","classes2","state","setState","useState","open","defer","jsCode1","jsCode2","propTypes","object","isRequired"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,0BAArC;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,mBAA5B;AACA,SAAQC,MAAR,EAAgBC,aAAhB,QAAoC,0CAApC,C,CAEA;;;;;AACA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,OADH;AAENC,IAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFF;AADe,CAAL,CAApB,C,CAOA;;;AACA,MAAMC,SAAS,GAAGZ,UAAU,CAAC;AAC3Ba,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,GADD;AAETC,IAAAA,SAAS,EAAE;AAFF;AADgB,CAAD,CAA5B;;AAOA,SAASC,SAAT,GAAqB;AACnB,SAAOC,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAU,IAAV,CAAX,EAA4BE,GAA5B,CAAgC,CAACC,CAAD,EAAIC,KAAJ,kBACrC;AAAA;AAAA,KAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAGD;;KAJQL,S;;AAMT,SAASM,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAChC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB,CAFgC,CAIhC;;AACA,QAAME,QAAQ,GAAGb,SAAS,EAA1B;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoB7B,KAAK,CAAC8B,QAAN,CAAe;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAAf,CAA1B;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,+BAAb;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIU,GAJV,eAKE;AAAA,2EACuD,GADvD,eAEE;AACE,UAAA,MAAM,EAAC,QADT;AAEE,UAAA,SAAS,EAAC,kBAFZ;AAGE,UAAA,GAAG,EAAC,qBAHN;AAIE,UAAA,IAAI,EAAC,4CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEC,OAAvB;AAAgC,MAAA,eAAe,EAAC,uBAAhD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,SAAS,EAAEP,OAAO,CAAChB,MADrB;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,KAAD;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,SAAS,EAAEgB,OAAO,CAAChB,MADrB;AAEE,YAAA,OAAO,EAAC,WAFV;AAGE,YAAA,KAAK,EAAC,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eA6CE,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEwB,OAAvB;AAAgC,MAAA,eAAe,EAAC,iBAAhD;AAAA,8BACE;AAAA,8IAEuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,sBAFZ;AAGE,UAAA,OAAO,EAAE,MACPL,QAAQ,CAAC;AACPE,YAAAA,IAAI,EAAE,CAACH,KAAK,CAACG,IADN;AAEPC,YAAAA,KAAK,EAAE;AAFA,WAAD,CAJZ;AAAA,oBAUG;AAVH;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,iBAFZ;AAGE,UAAA,OAAO,EAAE,MACPH,QAAQ,CAAC;AACPE,YAAAA,IAAI,EAAE,CAACH,KAAK,CAACG,IADN;AAEPC,YAAAA,KAAK,EAAE;AAFA,WAAD,CAJZ;AAAA,oBAUG;AAVH;AAAA;AAAA;AAAA;AAAA,gBAbF,EAyBGJ,KAAK,CAACG,IAAN,gBACC;AAAK,UAAA,SAAS,EAAEJ,QAAQ,CAACZ,SAAzB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,KAAK,EAAEa,KAAK,CAACI,KAApB;AAAA,wDAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAQG,IAjCN;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7CF;AAAA,kBADF;AA2FD;;GAnGQR,iB;UAKUV,S;;;MALVU,iB;AAqGTA,iBAAiB,CAACW,SAAlB,GAA8B;AAC5BT,EAAAA,OAAO,EAAEzB,SAAS,CAACmC,MAAV,CAAiBC;AADE,CAA9B;AAIA,eAAelC,UAAU,CAACK,MAAD,CAAV,CAAmBgB,iBAAnB,CAAf;AAEA,MAAMS,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApCA;AAqCA,MAAMC,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1DA","sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport {NoSsr, Button} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst styles = theme => ({\r\n  button: {\r\n    display: \"block\",\r\n    margin: theme.spacing(2)\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    maxWidth: 300,\r\n    wordBreak: \"break-all\"\r\n  }\r\n});\r\n\r\nfunction LargeTree() {\r\n  return Array.from(new Array(3000)).map((_, index) => (\r\n    <span key={index}>.</span>\r\n  ));\r\n}\r\n\r\nfunction NoSSRExamplesPage(props) {\r\n  // Example 1\r\n  const { classes } = props;\r\n\r\n  // Example 2\r\n  const classes2 = useStyles();\r\n  const [state, setState] = React.useState({ open: false, defer: false });\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          NoSsr purposely removes components from the subject of Server Side\r\n          Rendering (SSR).\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/no-ssr/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Client side deferring\">\r\n        <span>\r\n          In it's core, the NoSsr component purpose is to defer rendering. You\r\n          can use it to defer the rendering from the server to the client.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div>\r\n          <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Server & Client\r\n          </Button>\r\n          <NoSsr>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Client only\r\n            </Button>\r\n          </NoSsr>\r\n        </div>\r\n      </KTCodeExample>\r\n\r\n      <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Frame deferring\">\r\n        <span>\r\n          You can also use it to defer the rendering within the client itself.\r\n          You can wait a screen frame with the <code>defer</code> property to\r\n          render the children. React does 2 commits instead of 1.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary mr-3\"\r\n            onClick={() =>\r\n              setState({\r\n                open: !state.open,\r\n                defer: false\r\n              })\r\n            }\r\n          >\r\n            {'Render NoSsr defer=\"false\"'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() =>\r\n              setState({\r\n                open: !state.open,\r\n                defer: true\r\n              })\r\n            }\r\n          >\r\n            {'Render NoSsr defer=\"true\"'}\r\n          </button>\r\n          {state.open ? (\r\n            <div className={classes2.container}>\r\n              <span>Outside NoSsr</span>\r\n              <NoSsr defer={state.defer}>\r\n                ....Inside NoSsr\r\n                <LargeTree />\r\n              </NoSsr>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nNoSSRExamplesPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NoSSRExamplesPage);\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    display: 'block',\r\n    margin: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction SimpleNoSsr(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Button className={classes.button} variant=\"contained\" color=\"primary\">\r\n        Server & Client\r\n      </Button>\r\n      <NoSsr>\r\n        <Button className={classes.button} variant=\"contained\" color=\"secondary\">\r\n          Client only\r\n        </Button>\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nSimpleNoSsr.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleNoSsr);\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    maxWidth: 300,\r\n    wordBreak: 'break-all',\r\n  },\r\n});\r\n\r\nfunction LargeTree() {\r\n  return Array.from(new Array(3000)).map((_, index) => <span key={index}>.</span>);\r\n}\r\n\r\nfunction FrameDeferring() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({ open: false, defer: false });\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() =>\r\n          setState({\r\n            open: !state.open,\r\n            defer: false,\r\n          })\r\n        }\r\n      >\r\n        {'Render NoSsr defer=\"false\"'}\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() =>\r\n          setState({\r\n            open: !state.open,\r\n            defer: true,\r\n          })\r\n        }\r\n      >\r\n        {'Render NoSsr defer=\"true\"'}\r\n      </button>\r\n      {state.open ? (\r\n        <div className={classes.container}>\r\n          <span>Outside NoSsr</span>\r\n          <NoSsr defer={state.defer}>\r\n            ....Inside NoSsr\r\n            <LargeTree />\r\n          </NoSsr>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FrameDeferring;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}