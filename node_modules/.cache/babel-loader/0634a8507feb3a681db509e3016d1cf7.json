{"ast":null,"code":"import axios from \"axios\";\nexport var LOGIN_URL = \"http://13.232.102.139:9000/user/login\";\nexport var REGISTER_URL = \"api/auth/register\";\nexport var REQUEST_PASSWORD_URL = \"api/auth/forgot-password\";\nexport var ME_URL = \"http://13.232.102.139:9000/user\";\nexport function login(username, password) {\n  var requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  };\n  var val = fetch(LOGIN_URL, requestOptions).then(function (response) {\n    return response.json();\n  }).then(function (myJson) {\n    console.log(myJson.data);\n    var t = myJson.data;\n    localStorage.setItem(\"token\", myJson.data.token);\n    return t; // console.log(\"2\")\n    // console.log(myJson.status)\n    // if (myJson.status== true){\n    //   console.log(\"true\")\n    //   window.location = \"/users\"\n    // }\n  }).catch(function (error) {\n    localStorage.removeItem(\"token\");\n  });\n  return val;\n}\nexport function register(email, fullname, username, password) {\n  return axios.post(REGISTER_URL, {\n    email: email,\n    fullname: fullname,\n    username: username,\n    password: password\n  });\n}\nexport function requestPassword(email) {\n  return axios.post(REQUEST_PASSWORD_URL, {\n    email: email\n  });\n}\nexport function getUserByToken() {\n  // Authorization head should be fulfilled in interceptor.\n  return axios.get(\"http://13.232.102.139:9000/user\");\n}","map":{"version":3,"sources":["D:/GCC/wtf/src/app/modules/Auth/_redux/authCrud.js"],"names":["axios","LOGIN_URL","REGISTER_URL","REQUEST_PASSWORD_URL","ME_URL","login","username","password","requestOptions","method","headers","body","JSON","stringify","val","fetch","then","response","json","myJson","console","log","data","t","localStorage","setItem","token","catch","error","removeItem","register","email","fullname","post","requestPassword","getUserByToken","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,uCAAlB;AACP,OAAO,IAAMC,YAAY,GAAG,mBAArB;AACP,OAAO,IAAMC,oBAAoB,GAAG,0BAA7B;AACP,OAAO,IAAMC,MAAM,GAAG,iCAAf;AAEP,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,MAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY;AAGrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,MAAAA,QAAQ,EAAEA;AAAhC,KAAf;AAHe,GAAvB;AAKA,MAAMO,GAAG,GAAGC,KAAK,CAACd,SAAD,EAAYO,cAAZ,CAAL,CACTQ,IADS,CACJ,UAACC,QAAD,EAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHS,EAITF,IAJS,CAIJ,UAACG,MAAD,EAAY;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACA,QAAIC,CAAC,GAAGJ,MAAM,CAACG,IAAf;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,MAAM,CAACG,IAAP,CAAYI,KAA1C;AACA,WAAOH,CAAP,CAJgB,CAKhB;AACA;AACA;AACA;AACA;AACA;AACD,GAfS,EAgBTI,KAhBS,CAgBH,UAACC,KAAD,EAAW;AAChBJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACD,GAlBS,CAAZ;AAoBA,SAAOf,GAAP;AACD;AAED,OAAO,SAASgB,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmC1B,QAAnC,EAA6CC,QAA7C,EAAuD;AAC5D,SAAOP,KAAK,CAACiC,IAAN,CAAW/B,YAAX,EAAyB;AAAE6B,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,QAAQ,EAARA,QAAT;AAAmB1B,IAAAA,QAAQ,EAARA,QAAnB;AAA6BC,IAAAA,QAAQ,EAARA;AAA7B,GAAzB,CAAP;AACD;AAED,OAAO,SAAS2B,eAAT,CAAyBH,KAAzB,EAAgC;AACrC,SAAO/B,KAAK,CAACiC,IAAN,CAAW9B,oBAAX,EAAiC;AAAE4B,IAAAA,KAAK,EAALA;AAAF,GAAjC,CAAP;AACD;AAED,OAAO,SAASI,cAAT,GAA0B;AAC/B;AACA,SAAOnC,KAAK,CAACoC,GAAN,CAAU,iCAAV,CAAP;AACD","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const LOGIN_URL = \"http://13.232.102.139:9000/user/login\";\r\nexport const REGISTER_URL = \"api/auth/register\";\r\nexport const REQUEST_PASSWORD_URL = \"api/auth/forgot-password\";\r\nexport const ME_URL = \"http://13.232.102.139:9000/user\";\r\n\r\nexport function login(username, password) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ username: username, password: password }),\r\n  };\r\n  const val = fetch(LOGIN_URL, requestOptions)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((myJson) => {\r\n      console.log(myJson.data)\r\n      let t = myJson.data;\r\n      localStorage.setItem(\"token\", myJson.data.token);\r\n      return t;\r\n      // console.log(\"2\")\r\n      // console.log(myJson.status)\r\n      // if (myJson.status== true){\r\n      //   console.log(\"true\")\r\n      //   window.location = \"/users\"\r\n      // }\r\n    })\r\n    .catch((error) => {\r\n      localStorage.removeItem(\"token\");\r\n    });\r\n\r\n  return val;\r\n}\r\n\r\nexport function register(email, fullname, username, password) {\r\n  return axios.post(REGISTER_URL, { email, fullname, username, password });\r\n}\r\n\r\nexport function requestPassword(email) {\r\n  return axios.post(REQUEST_PASSWORD_URL, { email });\r\n}\r\n\r\nexport function getUserByToken() {\r\n  // Authorization head should be fulfilled in interceptor.\r\n  return axios.get(\"http://13.232.102.139:9000/user\");\r\n}\r\n"]},"metadata":{},"sourceType":"module"}