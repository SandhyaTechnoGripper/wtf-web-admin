{"ast":null,"code":"import axios from \"axios\";\nexport const CUSTOMERS_URL = \"api/customers\"; // CREATE =>  POST: add a new customer to the server\n\nexport function createCustomer(customer) {\n  return axios.post(CUSTOMERS_URL, {\n    customer\n  });\n} // READ\n\nexport function getAllCustomers() {\n  return axios.get(CUSTOMERS_URL);\n}\nexport function getCustomerById(customerId) {\n  return axios.get(`${CUSTOMERS_URL}/${customerId}`);\n} // Method from server should return QueryResultsModel(items: any[], totalsCount: number)\n// items => filtered/sorted result\n\nexport function findCustomers(queryParams) {\n  return axios.post(`${CUSTOMERS_URL}/find`, {\n    queryParams\n  });\n} // UPDATE => PUT: update the customer on the server\n\nexport function updateCustomer(customer) {\n  return axios.put(`${CUSTOMERS_URL}/${customer.id}`, {\n    customer\n  });\n} // UPDATE Status\n\nexport function updateStatusForCustomers(ids, status) {\n  return axios.post(`${CUSTOMERS_URL}/updateStatusForCustomers`, {\n    ids,\n    status\n  });\n} // DELETE => delete the customer from the server\n\nexport function deleteCustomer(customerId) {\n  return axios.delete(`${CUSTOMERS_URL}/${customerId}`);\n} // DELETE Customers by ids\n\nexport function deleteCustomers(ids) {\n  return axios.post(`${CUSTOMERS_URL}/deleteCustomers`, {\n    ids\n  });\n}","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/ECommerce/_redux/customers/customersCrud.js"],"names":["axios","CUSTOMERS_URL","createCustomer","customer","post","getAllCustomers","get","getCustomerById","customerId","findCustomers","queryParams","updateCustomer","put","id","updateStatusForCustomers","ids","status","deleteCustomer","delete","deleteCustomers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB,C,CAEP;;AACA,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AACvC,SAAOH,KAAK,CAACI,IAAN,CAAWH,aAAX,EAA0B;AAAEE,IAAAA;AAAF,GAA1B,CAAP;AACD,C,CAED;;AACA,OAAO,SAASE,eAAT,GAA2B;AAChC,SAAOL,KAAK,CAACM,GAAN,CAAUL,aAAV,CAAP;AACD;AAED,OAAO,SAASM,eAAT,CAAyBC,UAAzB,EAAqC;AAC1C,SAAOR,KAAK,CAACM,GAAN,CAAW,GAAEL,aAAc,IAAGO,UAAW,EAAzC,CAAP;AACD,C,CAED;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,WAAvB,EAAoC;AACzC,SAAOV,KAAK,CAACI,IAAN,CAAY,GAAEH,aAAc,OAA5B,EAAoC;AAAES,IAAAA;AAAF,GAApC,CAAP;AACD,C,CAED;;AACA,OAAO,SAASC,cAAT,CAAwBR,QAAxB,EAAkC;AACvC,SAAOH,KAAK,CAACY,GAAN,CAAW,GAAEX,aAAc,IAAGE,QAAQ,CAACU,EAAG,EAA1C,EAA6C;AAAEV,IAAAA;AAAF,GAA7C,CAAP;AACD,C,CAED;;AACA,OAAO,SAASW,wBAAT,CAAkCC,GAAlC,EAAuCC,MAAvC,EAA+C;AACpD,SAAOhB,KAAK,CAACI,IAAN,CAAY,GAAEH,aAAc,2BAA5B,EAAwD;AAC7Dc,IAAAA,GAD6D;AAE7DC,IAAAA;AAF6D,GAAxD,CAAP;AAID,C,CAED;;AACA,OAAO,SAASC,cAAT,CAAwBT,UAAxB,EAAoC;AACzC,SAAOR,KAAK,CAACkB,MAAN,CAAc,GAAEjB,aAAc,IAAGO,UAAW,EAA5C,CAAP;AACD,C,CAED;;AACA,OAAO,SAASW,eAAT,CAAyBJ,GAAzB,EAA8B;AACnC,SAAOf,KAAK,CAACI,IAAN,CAAY,GAAEH,aAAc,kBAA5B,EAA+C;AAAEc,IAAAA;AAAF,GAA/C,CAAP;AACD","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const CUSTOMERS_URL = \"api/customers\";\r\n\r\n// CREATE =>  POST: add a new customer to the server\r\nexport function createCustomer(customer) {\r\n  return axios.post(CUSTOMERS_URL, { customer });\r\n}\r\n\r\n// READ\r\nexport function getAllCustomers() {\r\n  return axios.get(CUSTOMERS_URL);\r\n}\r\n\r\nexport function getCustomerById(customerId) {\r\n  return axios.get(`${CUSTOMERS_URL}/${customerId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findCustomers(queryParams) {\r\n  return axios.post(`${CUSTOMERS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the customer on the server\r\nexport function updateCustomer(customer) {\r\n  return axios.put(`${CUSTOMERS_URL}/${customer.id}`, { customer });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForCustomers(ids, status) {\r\n  return axios.post(`${CUSTOMERS_URL}/updateStatusForCustomers`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the customer from the server\r\nexport function deleteCustomer(customerId) {\r\n  return axios.delete(`${CUSTOMERS_URL}/${customerId}`);\r\n}\r\n\r\n// DELETE Customers by ids\r\nexport function deleteCustomers(ids) {\r\n  return axios.post(`${CUSTOMERS_URL}/deleteCustomers`, { ids });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}