{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\inputs\\\\TextFieldsExamplesPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { TextField, MenuItem, FormControl, Input, InputLabel, FormHelperText, OutlinedInput, FilledInput, InputBase, Paper, IconButton, Divider, InputAdornment, Grid } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { fade, withStyles, makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  }\n}));\nconst currencies = [{\n  value: \"USD\",\n  label: \"$\"\n}, {\n  value: \"EUR\",\n  label: \"€\"\n}, {\n  value: \"BTC\",\n  label: \"฿\"\n}, {\n  value: \"JPY\",\n  label: \"¥\"\n}]; // Example 2\n\nconst useStyles2 = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n})); // Example 3\n\nconst useStyles3 = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n})); // Example 4\n\nconst useStyles4 = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  }\n})); // Example 5\n\nconst useStyles5 = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  input: {\n    margin: theme.spacing(1)\n  }\n})); // Example 6\n\nconst useStyles6 = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n})); // Example 7\n\nconst CssTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"green\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"red\"\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"yellow\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\"\n      }\n    }\n  }\n})(TextField);\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.common.white,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"auto\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n    \"&:focus\": {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  _s();\n\n  const classes = useStylesReddit();\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    InputProps: {\n      classes,\n      disableUnderline: true\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RedditTextField, \"P9vyKDsMiS5jBWqZkV7OMD0EkPg=\", false, function () {\n  return [useStylesReddit];\n});\n\n_c = RedditTextField;\nconst useStyles7 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nconst theme7 = createMuiTheme({\n  palette: {\n    primary: green\n  }\n}); // Example 8\n\nconst useStyles8 = makeStyles({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 400\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}); // Example 9\n\nconst ranges = [{\n  value: \"0-20\",\n  label: \"0 to 20\"\n}, {\n  value: \"21-50\",\n  label: \"21 to 50\"\n}, {\n  value: \"51-100\",\n  label: \"51 to 100\"\n}];\nconst useStyles9 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    flexBasis: 200\n  }\n})); // Example 10\n\nconst useStyles10 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n})); // Example 11\n\nconst useStyles11 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    flexBasis: 200\n  }\n})); // Example 12\n\nconst useStyles12 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    flexBasis: 200\n  }\n}));\nexport default function TextFieldsExamplesPage() {\n  _s2();\n\n  // Example 1\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      [name]: event.target.value\n    });\n  }; // Example 2\n\n\n  const classes2 = useStyles2();\n  const [values2, setValues2] = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  });\n\n  const handleChange2 = name => event => {\n    setValues2({ ...values2,\n      [name]: event.target.value\n    });\n  }; // Example 3\n\n\n  const classes3 = useStyles3();\n  const [values3, setValues3] = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  });\n\n  const handleChange3 = name => event => {\n    setValues3({ ...values3,\n      [name]: event.target.value\n    });\n  }; // Example 4\n\n\n  const [labelWidth4, setLabelWidth4] = React.useState(0);\n  const [name4, setName4] = React.useState(\"Composed TextField\");\n  const labelRef4 = React.useRef(null);\n  const classes4 = useStyles4();\n  React.useEffect(() => {\n    setLabelWidth4(labelRef4.current.offsetWidth);\n  }, []);\n\n  function handleChange4(event) {\n    setName4(event.target.value);\n  } // Example 5\n\n\n  const classes5 = useStyles5(); // Example 6\n\n  const classes6 = useStyles6(); // Example 7\n\n  const classes7 = useStyles7(); // Example 8\n\n  const classes8 = useStyles8(); // Example 9\n\n  const classes9 = useStyles9();\n  const [values9, setValues9] = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  });\n\n  const handleChange9 = prop => event => {\n    setValues9({ ...values9,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword9 = () => {\n    setValues9({ ...values9,\n      showPassword: !values9.showPassword\n    });\n  }; // Example 10\n\n\n  const classes10 = useStyles10(); // Example 11\n\n  const classes11 = useStyles11();\n  const [values11, setValues11] = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  });\n\n  const handleChange11 = prop => event => {\n    setValues11({ ...values11,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword11 = () => {\n    setValues11({ ...values11,\n      showPassword: !values11.showPassword\n    });\n  }; // Example 12\n\n\n  const classes12 = useStyles12();\n  const [values12, setValues12] = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  });\n\n  const handleChange12 = prop => event => {\n    setValues12({ ...values12,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword12 = () => {\n    setValues({ ...values12,\n      showPassword: !values12.showPassword\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notice, {\n      icon: \"flaticon-warning font-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Text fields let users enter and edit text.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"font-weight-bold\",\n          rel: \"noopener noreferrer\",\n          href: \"https://material-ui.com/components/text-fields/\",\n          children: \"demos & documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode1,\n          beforeCodeTitle: \"TextField\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"TextField\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 19\n            }, this), \" wrapper component is a complete form control including a label, input and help text.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.container,\n            noValidate: true,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-name\",\n              label: \"Name\",\n              className: classes.textField,\n              value: values.name,\n              onChange: handleChange(\"name\"),\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-uncontrolled\",\n              label: \"Uncontrolled\",\n              defaultValue: \"foo\",\n              className: classes.textField,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"standard-required\",\n              label: \"Required\",\n              defaultValue: \"Hello World\",\n              className: classes.textField,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: true,\n              id: \"standard-error\",\n              label: \"Error\",\n              defaultValue: \"Hello World\",\n              className: classes.textField,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              disabled: true,\n              id: \"standard-disabled\",\n              label: \"Disabled\",\n              defaultValue: \"Hello World\",\n              className: classes.textField,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-password-input\",\n              label: \"Password\",\n              className: classes.textField,\n              type: \"password\",\n              autoComplete: \"current-password\",\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-read-only-input\",\n              label: \"Read Only\",\n              defaultValue: \"Hello World\",\n              className: classes.textField,\n              margin: \"normal\",\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-dense\",\n              label: \"Dense\",\n              className: clsx(classes.textField, classes.dense),\n              margin: \"dense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-multiline-flexible\",\n              label: \"Multiline\",\n              multiline: true,\n              rowsMax: \"4\",\n              value: values.multiline,\n              onChange: handleChange(\"multiline\"),\n              className: classes.textField,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-multiline-static\",\n              label: \"Multiline\",\n              multiline: true,\n              rows: \"4\",\n              defaultValue: \"Default Value\",\n              className: classes.textField,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-helperText\",\n              label: \"Helper text\",\n              defaultValue: \"Default Value\",\n              className: classes.textField,\n              helperText: \"Some important text\",\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-with-placeholder\",\n              label: \"With placeholder\",\n              placeholder: \"Placeholder\",\n              className: classes.textField,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-textarea\",\n              label: \"With placeholder multiline\",\n              placeholder: \"Placeholder\",\n              multiline: true,\n              className: classes.textField,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-number\",\n              label: \"Number\",\n              value: values.age,\n              onChange: handleChange(\"age\"),\n              type: \"number\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              },\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-search\",\n              label: \"Search field\",\n              type: \"search\",\n              className: classes.textField,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-select-currency\",\n              select: true,\n              label: \"Select\",\n              className: classes.textField,\n              value: values.currency,\n              onChange: handleChange(\"currency\"),\n              SelectProps: {\n                MenuProps: {\n                  className: classes.menu\n                }\n              },\n              helperText: \"Please select your currency\",\n              margin: \"normal\",\n              children: currencies.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-select-currency-native\",\n              select: true,\n              label: \"Native select\",\n              className: classes.textField,\n              value: values.currency,\n              onChange: handleChange(\"currency\"),\n              SelectProps: {\n                native: true,\n                MenuProps: {\n                  className: classes.menu\n                }\n              },\n              helperText: \"Please select your currency\",\n              margin: \"normal\",\n              children: currencies.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-full-width\",\n              label: \"Label\",\n              style: {\n                margin: 8\n              },\n              placeholder: \"Placeholder\",\n              helperText: \"Full width!\",\n              fullWidth: true,\n              margin: \"normal\",\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-bare\",\n              className: classes.textField,\n              defaultValue: \"Bare\",\n              margin: \"normal\",\n              inputProps: {\n                \"aria-label\": \"bare\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode3,\n          beforeCodeTitle: \"Filled\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"TextField\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this), \" supports filled styling.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes3.container,\n            noValidate: true,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-name\",\n              label: \"Name\",\n              className: classes3.textField,\n              value: values3.name,\n              onChange: handleChange(\"name\"),\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-uncontrolled\",\n              label: \"Uncontrolled\",\n              defaultValue: \"foo\",\n              className: classes3.textField,\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"filled-required\",\n              label: \"Required\",\n              defaultValue: \"Hello World\",\n              className: classes3.textField,\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: true,\n              id: \"filled-error\",\n              label: \"Error\",\n              defaultValue: \"Hello World\",\n              className: classes3.textField,\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              disabled: true,\n              id: \"filled-disabled\",\n              label: \"Disabled\",\n              defaultValue: \"Hello World\",\n              className: classes3.textField,\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-email-input\",\n              label: \"Email\",\n              className: classes3.textField,\n              type: \"email\",\n              name: \"email\",\n              autoComplete: \"email\",\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-password-input\",\n              label: \"Password\",\n              className: classes3.textField,\n              type: \"password\",\n              autoComplete: \"current-password\",\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-read-only-input\",\n              label: \"Read Only\",\n              defaultValue: \"Hello World\",\n              className: classes3.textField,\n              margin: \"normal\",\n              InputProps: {\n                readOnly: true\n              },\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-dense\",\n              label: \"Dense\",\n              className: clsx(classes3.textField, classes3.dense),\n              margin: \"dense\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-dense-multiline\",\n              label: \"Dense multiline\",\n              className: clsx(classes3.textField, classes3.dense),\n              margin: \"dense\",\n              variant: \"filled\",\n              multiline: true,\n              rowsMax: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-multiline-flexible\",\n              label: \"Multiline\",\n              multiline: true,\n              rowsMax: \"4\",\n              value: values3.multiline,\n              onChange: handleChange3(\"multiline\"),\n              className: classes3.textField,\n              margin: \"normal\",\n              helperText: \"hello\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-multiline-static\",\n              label: \"Multiline\",\n              multiline: true,\n              rows: \"4\",\n              defaultValue: \"Default Value\",\n              className: classes3.textField,\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-helperText\",\n              label: \"Helper text\",\n              defaultValue: \"Default Value\",\n              className: classes3.textField,\n              helperText: \"Some important text\",\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-with-placeholder\",\n              label: \"With placeholder\",\n              placeholder: \"Placeholder\",\n              className: classes3.textField,\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-textarea\",\n              label: \"Multiline Placeholder\",\n              placeholder: \"Placeholder\",\n              multiline: true,\n              className: classes3.textField,\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-number\",\n              label: \"Number\",\n              value: values3.age,\n              onChange: handleChange3(\"age\"),\n              type: \"number\",\n              className: classes3.textField,\n              InputLabelProps: {\n                shrink: true\n              },\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-search\",\n              label: \"Search field\",\n              type: \"search\",\n              className: classes3.textField,\n              margin: \"normal\",\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-select-currency\",\n              select: true,\n              label: \"Select\",\n              className: classes3.textField,\n              value: values3.currency,\n              onChange: handleChange3(\"currency\"),\n              SelectProps: {\n                MenuProps: {\n                  className: classes3.menu\n                }\n              },\n              helperText: \"Please select your currency\",\n              margin: \"normal\",\n              variant: \"filled\",\n              children: currencies.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-select-currency-native\",\n              select: true,\n              label: \"Native select\",\n              className: classes3.textField,\n              value: values3.currency,\n              onChange: handleChange3(\"currency\"),\n              SelectProps: {\n                native: true,\n                MenuProps: {\n                  className: classes3.menu\n                }\n              },\n              helperText: \"Please select your currency\",\n              margin: \"normal\",\n              variant: \"filled\",\n              children: currencies.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-full-width\",\n              label: \"Label\",\n              style: {\n                margin: 8\n              },\n              placeholder: \"Placeholder\",\n              helperText: \"Full width!\",\n              fullWidth: true,\n              margin: \"normal\",\n              variant: \"filled\",\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 886,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-bare\",\n              className: classes3.textField,\n              defaultValue: \"Bare\",\n              margin: \"normal\",\n              variant: \"filled\",\n              inputProps: {\n                \"aria-label\": \"bare\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode5,\n          beforeCodeTitle: \"Inputs\",\n          codeBlockHeight: \"400px\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes5.container,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              defaultValue: \"Hello world\",\n              className: classes5.input,\n              inputProps: {\n                \"aria-label\": \"Description\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Placeholder\",\n              className: classes5.input,\n              inputProps: {\n                \"aria-label\": \"Description\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: \"Disabled\",\n              className: classes5.input,\n              disabled: true,\n              inputProps: {\n                \"aria-label\": \"Description\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              defaultValue: \"Error\",\n              className: classes5.input,\n              error: true,\n              inputProps: {\n                \"aria-label\": \"Description\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode7,\n          beforeCodeTitle: \"Customized inputs\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Here are some examples of customizing the component.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes7.root,\n            children: [/*#__PURE__*/_jsxDEV(CssTextField, {\n              className: classes7.margin,\n              id: \"custom-css-standard-input\",\n              label: \"Custom CSS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CssTextField, {\n              className: classes7.margin,\n              label: \"Custom CSS\",\n              variant: \"outlined\",\n              id: \"custom-css-outlined-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n              theme: theme7,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                className: classes7.margin,\n                label: \"ThemeProvider\",\n                id: \"mui-theme-provider-standard-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 967,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                className: classes7.margin,\n                label: \"ThemeProvider\",\n                variant: \"outlined\",\n                id: \"mui-theme-provider-outlined-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 966,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes7.margin,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                shrink: true,\n                htmlFor: \"bootstrap-input\",\n                children: \"Bootstrap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(BootstrapInput, {\n                defaultValue: \"react-bootstrap\",\n                id: \"bootstrap-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RedditTextField, {\n              label: \"Reddit\",\n              className: classes7.margin,\n              defaultValue: \"react-reddit\",\n              variant: \"filled\",\n              id: \"reddit-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n              className: classes7.margin,\n              defaultValue: \"Naked input\",\n              inputProps: {\n                \"aria-label\": \"naked\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode9,\n          beforeCodeTitle: \"Input Adornments\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1008,\n              columnNumber: 15\n            }, this), \" allows the provision of\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"InputAdornment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 15\n            }, this), \". These can be used to add a prefix, a suffix or an action to an input. For instance, you can use an icon button to hide or reveal the password.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes9.root,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"With normal TextField\",\n              id: \"simple-start-adornment\",\n              className: clsx(classes9.margin, classes9.textField),\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"Kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1021,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              label: \"With Select\",\n              className: clsx(classes9.margin, classes9.textField),\n              value: values9.weightRange,\n              onChange: handleChange9(\"weightRange\"),\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"Kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 21\n                }, this)\n              },\n              children: ranges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              className: classes9.margin,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"adornment-amount\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"adornment-amount\",\n                value: values9.amount,\n                onChange: handleChange9(\"amount\"),\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1050,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1045,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: clsx(classes9.margin, classes9.withoutLabel, classes9.textField),\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                id: \"adornment-weight\",\n                value: values9.weight,\n                onChange: handleChange9(\"weight\"),\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: \"Kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1066,\n                  columnNumber: 21\n                }, this),\n                \"aria-describedby\": \"weight-helper-text\",\n                inputProps: {\n                  \"aria-label\": \"Weight\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                id: \"weight-helper-text\",\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1073,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: clsx(classes9.margin, classes9.textField),\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"adornment-password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"adornment-password\",\n                type: values9.showPassword ? \"text\" : \"password\",\n                value: values9.password,\n                onChange: handleChange9(\"password\"),\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"Toggle password visibility\",\n                    onClick: handleClickShowPassword9,\n                    children: values9.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1091,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1093,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1086,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1085,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1075,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode11,\n          beforeCodeTitle: \"Filled Input Adornments\",\n          codeBlockHeight: \"400px\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes11.root,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-simple-start-adornment\",\n              className: clsx(classes11.margin, classes11.textField),\n              variant: \"filled\",\n              label: \"With filled TextField\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"Kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1116,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              className: clsx(classes11.margin, classes11.textField),\n              variant: \"filled\",\n              label: \"With Select\",\n              value: values11.weightRange,\n              onChange: handleChange11(\"weightRange\"),\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"Kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1129,\n                  columnNumber: 21\n                }, this)\n              },\n              children: ranges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1134,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-adornment-amount\",\n              className: clsx(classes11.margin, classes11.textField),\n              variant: \"filled\",\n              label: \"Amount\",\n              value: values11.amount,\n              onChange: handleChange11(\"amount\"),\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1148,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-adornment-weight\",\n              className: clsx(classes11.margin, classes11.textField),\n              variant: \"filled\",\n              label: \"Weight\",\n              value: values11.weight,\n              onChange: handleChange11(\"weight\"),\n              helperText: \"Weight\",\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: \"Kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1162,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-adornment-password\",\n              className: clsx(classes11.margin, classes11.textField),\n              variant: \"filled\",\n              type: values11.showPassword ? \"text\" : \"password\",\n              label: \"Password\",\n              value: values11.password,\n              onChange: handleChange11(\"password\"),\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"Toggle password visibility\",\n                    onClick: handleClickShowPassword11,\n                    children: values11.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1183,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1185,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1177,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1176,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode2,\n          beforeCodeTitle: \"Outlined\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"TextField\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1202,\n              columnNumber: 15\n            }, this), \" supports outlined styling.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes2.container,\n            noValidate: true,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-name\",\n              label: \"Name\",\n              className: classes2.textField,\n              value: values2.name,\n              onChange: handleChange2(\"name\"),\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-uncontrolled\",\n              label: \"Uncontrolled\",\n              defaultValue: \"foo\",\n              className: classes2.textField,\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"outlined-required\",\n              label: \"Required\",\n              defaultValue: \"Hello World\",\n              className: classes2.textField,\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: true,\n              id: \"outlined-error\",\n              label: \"Error\",\n              defaultValue: \"Hello World\",\n              className: classes2.textField,\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              disabled: true,\n              id: \"outlined-disabled\",\n              label: \"Disabled\",\n              defaultValue: \"Hello World\",\n              className: classes2.textField,\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-email-input\",\n              label: \"Email\",\n              className: classes2.textField,\n              type: \"email\",\n              name: \"email\",\n              autoComplete: \"email\",\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-password-input\",\n              label: \"Password\",\n              className: classes2.textField,\n              type: \"password\",\n              autoComplete: \"current-password\",\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-read-only-input\",\n              label: \"Read Only\",\n              defaultValue: \"Hello World\",\n              className: classes2.textField,\n              margin: \"normal\",\n              InputProps: {\n                readOnly: true\n              },\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-dense\",\n              label: \"Dense\",\n              className: clsx(classes2.textField, classes2.dense),\n              margin: \"dense\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-dense-multiline\",\n              label: \"Dense multiline\",\n              className: clsx(classes2.textField, classes2.dense),\n              margin: \"dense\",\n              variant: \"outlined\",\n              multiline: true,\n              rowsMax: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-multiline-flexible\",\n              label: \"Multiline\",\n              multiline: true,\n              rowsMax: \"4\",\n              value: values2.multiline,\n              onChange: handleChange2(\"multiline\"),\n              className: classes2.textField,\n              margin: \"normal\",\n              helperText: \"hello\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-multiline-static\",\n              label: \"Multiline\",\n              multiline: true,\n              rows: \"4\",\n              defaultValue: \"Default Value\",\n              className: classes2.textField,\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-helperText\",\n              label: \"Helper text\",\n              defaultValue: \"Default Value\",\n              className: classes2.textField,\n              helperText: \"Some important text\",\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-with-placeholder\",\n              label: \"With placeholder\",\n              placeholder: \"Placeholder\",\n              className: classes2.textField,\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-textarea\",\n              label: \"Multiline Placeholder\",\n              placeholder: \"Placeholder\",\n              multiline: true,\n              className: classes2.textField,\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-number\",\n              label: \"Number\",\n              value: values2.age,\n              onChange: handleChange2(\"age\"),\n              type: \"number\",\n              className: classes2.textField,\n              InputLabelProps: {\n                shrink: true\n              },\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-search\",\n              label: \"Search field\",\n              type: \"search\",\n              className: classes2.textField,\n              margin: \"normal\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-select-currency\",\n              select: true,\n              label: \"Select\",\n              className: classes2.textField,\n              value: values2.currency,\n              onChange: handleChange2(\"currency\"),\n              SelectProps: {\n                MenuProps: {\n                  className: classes2.menu\n                }\n              },\n              helperText: \"Please select your currency\",\n              margin: \"normal\",\n              variant: \"outlined\",\n              children: currencies.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1382,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-select-currency-native\",\n              select: true,\n              label: \"Native select\",\n              className: classes2.textField,\n              value: values2.currency,\n              onChange: handleChange(\"currency\"),\n              SelectProps: {\n                native: true,\n                MenuProps: {\n                  className: classes2.menu\n                }\n              },\n              helperText: \"Please select your currency\",\n              margin: \"normal\",\n              variant: \"outlined\",\n              children: currencies.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1405,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-full-width\",\n              label: \"Label\",\n              style: {\n                margin: 8\n              },\n              placeholder: \"Placeholder\",\n              helperText: \"Full width!\",\n              fullWidth: true,\n              margin: \"normal\",\n              variant: \"outlined\",\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-bare\",\n              className: classes2.textField,\n              defaultValue: \"Bare\",\n              margin: \"normal\",\n              variant: \"outlined\",\n              inputProps: {\n                \"aria-label\": \"bare\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1423,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode4,\n          beforeCodeTitle: \"Components\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"TextField\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1440,\n              columnNumber: 15\n            }, this), \" is composed of smaller components (\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"FormControl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1441,\n              columnNumber: 15\n            }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1441,\n              columnNumber: 41\n            }, this), \",\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"FilledInput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1442,\n              columnNumber: 15\n            }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"InputLabel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1442,\n              columnNumber: 41\n            }, this), \",\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"OutlinedInput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1443,\n              columnNumber: 15\n            }, this), \", and \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"FormHelperText\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1443,\n              columnNumber: 47\n            }, this), \" ) that you can leverage directly to significantly customize your form inputs.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes4.container,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes4.formControl,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"component-simple\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1450,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"component-simple\",\n                value: name4,\n                onChange: handleChange4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1451,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes4.formControl,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"component-helper\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1458,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"component-helper\",\n                value: name4,\n                onChange: handleChange4,\n                \"aria-describedby\": \"component-helper-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1459,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                id: \"component-helper-text\",\n                children: \"Some important helper text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1465,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1457,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes4.formControl,\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"component-disabled\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1470,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"component-disabled\",\n                value: name4,\n                onChange: handleChange4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: \"Disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1476,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1469,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes4.formControl,\n              error: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"component-error\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1479,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"component-error\",\n                value: name4,\n                onChange: handleChange4,\n                \"aria-describedby\": \"component-error-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1480,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                id: \"component-error-text\",\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1486,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1478,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes4.formControl,\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                ref: labelRef4,\n                htmlFor: \"component-outlined\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1489,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                id: \"component-outlined\",\n                value: name4,\n                onChange: handleChange4,\n                labelWidth: labelWidth4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1492,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1488,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes4.formControl,\n              variant: \"filled\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"component-filled\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1500,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n                id: \"component-filled\",\n                value: name4,\n                onChange: handleChange4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1501,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1499,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode6,\n          beforeCodeTitle: \"Layout\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"TextField\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1516,\n              columnNumber: 15\n            }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"FormControl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1516,\n              columnNumber: 39\n            }, this), \" allow the specification of \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"margin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1517,\n              columnNumber: 32\n            }, this), \" to alter the vertical spacing of inputs. Using \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1518,\n              columnNumber: 32\n            }, this), \" (default) will not apply margins to the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"FormControl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1519,\n              columnNumber: 30\n            }, this), \", whereas\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"dense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1520,\n              columnNumber: 15\n            }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1520,\n              columnNumber: 38\n            }, this), \" will as well as alter other styles to meet the specification.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1523,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes6.container,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"None\",\n              id: \"margin-none\",\n              defaultValue: \"Default Value\",\n              className: classes6.textField,\n              helperText: \"Some important text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Dense\",\n              id: \"margin-dense\",\n              defaultValue: \"Default Value\",\n              className: classes6.textField,\n              helperText: \"Some important text\",\n              margin: \"dense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Normal\",\n              id: \"margin-normal\",\n              defaultValue: \"Default Value\",\n              className: classes6.textField,\n              helperText: \"Some important text\",\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1540,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1524,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode8,\n          beforeCodeTitle: \"Customized inputs using InputBase\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Customization does not stop at CSS, you can use composition to build custom components and give your app a unique feel. Below is an example using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"InputBase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1559,\n              columnNumber: 36\n            }, this), \" component, inspired by Google Maps.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1556,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1562,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes8.root,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes8.iconButton,\n              \"aria-label\": \"Menu\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"flaticon-layer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1565,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n              className: classes8.input,\n              placeholder: \"Search Google Maps\",\n              inputProps: {\n                \"aria-label\": \"Search Google Maps\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1567,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes8.iconButton,\n              \"aria-label\": \"Search\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"flaticon-search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1573,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1572,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              className: classes8.divider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1575,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              className: classes8.iconButton,\n              \"aria-label\": \"Directions\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-chevron-circle-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1581,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1576,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1563,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode10,\n          beforeCodeTitle: \"With icon\",\n          codeBlockHeight: \"400px\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Icons can be specified as prepended or appended.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator separator-dashed my-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes10.margin,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"input-with-icon-adornment\",\n                children: \"With a start adornment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1595,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"input-with-icon-adornment\",\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1602,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1601,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1598,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1594,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes10.margin,\n              id: \"input-with-icon-textfield\",\n              label: \"TextField\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1614,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1613,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1607,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes10.margin,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                alignItems: \"flex-end\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1622,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1621,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"input-with-icon-grid\",\n                    label: \"With a grid\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1625,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1624,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1620,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1619,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1593,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1586,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n          jsCode: jsCode12,\n          beforeCodeTitle: \"Outlined Input Adornments\",\n          codeBlockHeight: \"400px\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes12.root,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-simple-start-adornment\",\n              className: clsx(classes12.margin, classes12.textField),\n              variant: \"outlined\",\n              label: \"With outlined TextField\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"Kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1645,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1638,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              className: clsx(classes12.margin, classes12.textField),\n              variant: \"outlined\",\n              label: \"With Select\",\n              value: values12.weightRange,\n              onChange: handleChange12(\"weightRange\"),\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"Kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1658,\n                  columnNumber: 21\n                }, this)\n              },\n              children: ranges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1663,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1649,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-adornment-amount\",\n              className: clsx(classes12.margin, classes12.textField),\n              variant: \"outlined\",\n              label: \"Amount\",\n              value: values12.amount,\n              onChange: handleChange12(\"amount\"),\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1677,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1668,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-adornment-weight\",\n              className: clsx(classes12.margin, classes12.textField),\n              variant: \"outlined\",\n              label: \"Weight\",\n              value: values12.weight,\n              onChange: handleChange12(\"weight\"),\n              helperText: \"Weight\",\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: \"Kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1691,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1681,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-adornment-password\",\n              className: clsx(classes12.margin, classes12.textField),\n              variant: \"outlined\",\n              type: values12.showPassword ? \"text\" : \"password\",\n              label: \"Password\",\n              value: values12.password,\n              onChange: handleChange12(\"password\"),\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"Toggle password visibility\",\n                    onClick: handleClickShowPassword12,\n                    children: values12.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1712,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1714,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1706,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1705,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1695,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1637,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1632,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(TextFieldsExamplesPage, \"cjCMr6gNcpxTtSmnLzn7KpamVWY=\", false, function () {\n  return [useStyles, useStyles2, useStyles3, useStyles4, useStyles5, useStyles6, useStyles7, useStyles8, useStyles9, useStyles10, useStyles11, useStyles12];\n});\n\n_c2 = TextFieldsExamplesPage;\nconst jsCode1 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nexport default function TextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"standard-name\"\n        label=\"Name\"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-uncontrolled\"\n        label=\"Uncontrolled\"\n        defaultValue=\"foo\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        required\n        id=\"standard-required\"\n        label=\"Required\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        error\n        id=\"standard-error\"\n        label=\"Error\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        disabled\n        id=\"standard-disabled\"\n        label=\"Disabled\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-password-input\"\n        label=\"Password\"\n        className={classes.textField}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-read-only-input\"\n        label=\"Read Only\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <TextField\n        id=\"standard-dense\"\n        label=\"Dense\"\n        className={clsx(classes.textField, classes.dense)}\n        margin=\"dense\"\n      />\n      <TextField\n        id=\"standard-multiline-flexible\"\n        label=\"Multiline\"\n        multiline\n        rowsMax=\"4\"\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-multiline-static\"\n        label=\"Multiline\"\n        multiline\n        rows=\"4\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-helperText\"\n        label=\"Helper text\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-with-placeholder\"\n        label=\"With placeholder\"\n        placeholder=\"Placeholder\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-textarea\"\n        label=\"With placeholder multiline\"\n        placeholder=\"Placeholder\"\n        multiline\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-number\"\n        label=\"Number\"\n        value={values.age}\n        onChange={handleChange('age')}\n        type=\"number\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-search\"\n        label=\"Search field\"\n        type=\"search\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-select-currency\"\n        select\n        label=\"Select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"standard-select-currency-native\"\n        select\n        label=\"Native select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id=\"standard-full-width\"\n        label=\"Label\"\n        style={{ margin: 8 }}\n        placeholder=\"Placeholder\"\n        helperText=\"Full width!\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id=\"standard-bare\"\n        className={classes.textField}\n        defaultValue=\"Bare\"\n        margin=\"normal\"\n        inputProps={{ 'aria-label': 'bare' }}\n      />\n    </form>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function OutlinedTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"outlined-name\"\n        label=\"Name\"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-uncontrolled\"\n        label=\"Uncontrolled\"\n        defaultValue=\"foo\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Required\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        error\n        id=\"outlined-error\"\n        label=\"Error\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        disabled\n        id=\"outlined-disabled\"\n        label=\"Disabled\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-email-input\"\n        label=\"Email\"\n        className={classes.textField}\n        type=\"email\"\n        name=\"email\"\n        autoComplete=\"email\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-password-input\"\n        label=\"Password\"\n        className={classes.textField}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-read-only-input\"\n        label=\"Read Only\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        InputProps={{\n          readOnly: true,\n        }}\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-dense\"\n        label=\"Dense\"\n        className={clsx(classes.textField, classes.dense)}\n        margin=\"dense\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-dense-multiline\"\n        label=\"Dense multiline\"\n        className={clsx(classes.textField, classes.dense)}\n        margin=\"dense\"\n        variant=\"outlined\"\n        multiline\n        rowsMax=\"4\"\n      />\n      <TextField\n        id=\"outlined-multiline-flexible\"\n        label=\"Multiline\"\n        multiline\n        rowsMax=\"4\"\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin=\"normal\"\n        helperText=\"hello\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-multiline-static\"\n        label=\"Multiline\"\n        multiline\n        rows=\"4\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-helperText\"\n        label=\"Helper text\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-with-placeholder\"\n        label=\"With placeholder\"\n        placeholder=\"Placeholder\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Multiline Placeholder\"\n        placeholder=\"Placeholder\"\n        multiline\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-number\"\n        label=\"Number\"\n        value={values.age}\n        onChange={handleChange('age')}\n        type=\"number\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-search\"\n        label=\"Search field\"\n        type=\"search\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-select-currency\"\n        select\n        label=\"Select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"outlined-select-currency-native\"\n        select\n        label=\"Native select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id=\"outlined-full-width\"\n        label=\"Label\"\n        style={{ margin: 8 }}\n        placeholder=\"Placeholder\"\n        helperText=\"Full width!\"\n        fullWidth\n        margin=\"normal\"\n        variant=\"outlined\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id=\"outlined-bare\"\n        className={classes.textField}\n        defaultValue=\"Bare\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        inputProps={{ 'aria-label': 'bare' }}\n      />\n    </form>\n  );\n}\n`;\nconst jsCode3 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function FilledTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"filled-name\"\n        label=\"Name\"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-uncontrolled\"\n        label=\"Uncontrolled\"\n        defaultValue=\"foo\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        required\n        id=\"filled-required\"\n        label=\"Required\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        error\n        id=\"filled-error\"\n        label=\"Error\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        disabled\n        id=\"filled-disabled\"\n        label=\"Disabled\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-email-input\"\n        label=\"Email\"\n        className={classes.textField}\n        type=\"email\"\n        name=\"email\"\n        autoComplete=\"email\"\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-password-input\"\n        label=\"Password\"\n        className={classes.textField}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-read-only-input\"\n        label=\"Read Only\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        InputProps={{\n          readOnly: true,\n        }}\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-dense\"\n        label=\"Dense\"\n        className={clsx(classes.textField, classes.dense)}\n        margin=\"dense\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-dense-multiline\"\n        label=\"Dense multiline\"\n        className={clsx(classes.textField, classes.dense)}\n        margin=\"dense\"\n        variant=\"filled\"\n        multiline\n        rowsMax=\"4\"\n      />\n      <TextField\n        id=\"filled-multiline-flexible\"\n        label=\"Multiline\"\n        multiline\n        rowsMax=\"4\"\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin=\"normal\"\n        helperText=\"hello\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-multiline-static\"\n        label=\"Multiline\"\n        multiline\n        rows=\"4\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-helperText\"\n        label=\"Helper text\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-with-placeholder\"\n        label=\"With placeholder\"\n        placeholder=\"Placeholder\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-textarea\"\n        label=\"Multiline Placeholder\"\n        placeholder=\"Placeholder\"\n        multiline\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-number\"\n        label=\"Number\"\n        value={values.age}\n        onChange={handleChange('age')}\n        type=\"number\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-search\"\n        label=\"Search field\"\n        type=\"search\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-select-currency\"\n        select\n        label=\"Select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n        variant=\"filled\"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"filled-select-currency-native\"\n        select\n        label=\"Native select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n        variant=\"filled\"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id=\"filled-full-width\"\n        label=\"Label\"\n        style={{ margin: 8 }}\n        placeholder=\"Placeholder\"\n        helperText=\"Full width!\"\n        fullWidth\n        margin=\"normal\"\n        variant=\"filled\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id=\"filled-bare\"\n        className={classes.textField}\n        defaultValue=\"Bare\"\n        margin=\"normal\"\n        variant=\"filled\"\n        inputProps={{ 'aria-label': 'bare' }}\n      />\n    </form>\n  );\n}\n`;\nconst jsCode4 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ComposedTextField() {\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const [name, setName] = React.useState('Composed TextField');\n  const labelRef = React.useRef(null);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    setLabelWidth(labelRef.current.offsetWidth);\n  }, []);\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n        <Input id=\"component-simple\" value={name} onChange={handleChange} />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\n        <Input\n          id=\"component-helper\"\n          value={name}\n          onChange={handleChange}\n          aria-describedby=\"component-helper-text\"\n        />\n        <FormHelperText id=\"component-helper-text\">Some important helper text</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} disabled>\n        <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\n        <Input id=\"component-disabled\" value={name} onChange={handleChange} />\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} error>\n        <InputLabel htmlFor=\"component-error\">Name</InputLabel>\n        <Input\n          id=\"component-error\"\n          value={name}\n          onChange={handleChange}\n          aria-describedby=\"component-error-text\"\n        />\n        <FormHelperText id=\"component-error-text\">Error</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} variant=\"outlined\">\n        <InputLabel ref={labelRef} htmlFor=\"component-outlined\">\n          Name\n        </InputLabel>\n        <OutlinedInput\n          id=\"component-outlined\"\n          value={name}\n          onChange={handleChange}\n          labelWidth={labelWidth}\n        />\n      </FormControl>\n      <FormControl className={classes.formControl} variant=\"filled\">\n        <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\n        <FilledInput id=\"component-filled\" value={name} onChange={handleChange} />\n      </FormControl>\n    </div>\n  );\n}\n`;\nconst jsCode5 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function Inputs() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <Input\n        defaultValue=\"Hello world\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n      <Input\n        placeholder=\"Placeholder\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n      <Input\n        value=\"Disabled\"\n        className={classes.input}\n        disabled\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n      <Input\n        defaultValue=\"Error\"\n        className={classes.input}\n        error\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode6 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nexport default function TextFieldMargins() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <TextField\n        label=\"None\"\n        id=\"margin-none\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n      />\n      <TextField\n        label=\"Dense\"\n        id=\"margin-dense\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"dense\"\n      />\n      <TextField\n        label=\"Normal\"\n        id=\"margin-normal\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"normal\"\n      />\n    </div>\n  );\n}\n`;\nconst jsCode7 = `\nimport React from 'react';\nimport { fade, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { green } from '@material-ui/core/colors';\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'green',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red',\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green',\n      },\n    },\n  },\n})(TextField);\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: \\`\\${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem\\`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: '1px solid #e2e2e1',\n    overflow: 'hidden',\n    borderRadius: 4,\n    backgroundColor: '#fcfcfb',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    '&$focused': {\n      backgroundColor: '#fff',\n      boxShadow: \\`\\${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px\\`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  focused: {},\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nexport default function CustomizedInputs() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssTextField className={classes.margin} id=\"custom-css-standard-input\" label=\"Custom CSS\" />\n      <CssTextField\n        className={classes.margin}\n        label=\"Custom CSS\"\n        variant=\"outlined\"\n        id=\"custom-css-outlined-input\"\n      />\n      <ThemeProvider theme={theme}>\n        <TextField\n          className={classes.margin}\n          label=\"ThemeProvider\"\n          id=\"mui-theme-provider-standard-input\"\n        />\n        <TextField\n          className={classes.margin}\n          label=\"ThemeProvider\"\n          variant=\"outlined\"\n          id=\"mui-theme-provider-outlined-input\"\n        />\n      </ThemeProvider>\n      <FormControl className={classes.margin}>\n        <InputLabel shrink htmlFor=\"bootstrap-input\">\n          Bootstrap\n        </InputLabel>\n        <BootstrapInput defaultValue=\"react-bootstrap\" id=\"bootstrap-input\" />\n      </FormControl>\n      <RedditTextField\n        label=\"Reddit\"\n        className={classes.margin}\n        defaultValue=\"react-reddit\"\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n      <InputBase\n        className={classes.margin}\n        defaultValue=\"Naked input\"\n        inputProps={{ 'aria-label': 'naked' }}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode8 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n});\n\nexport default function CustomizedInputBase() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton className={classes.iconButton} aria-label=\"Menu\">\n        <MenuIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search Google Maps\"\n        inputProps={{ 'aria-label': 'Search Google Maps' }}\n      />\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n`;\nconst jsCode9 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function InputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        label=\"With normal TextField\"\n        id=\"simple-start-adornment\"\n        className={clsx(classes.margin, classes.textField)}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        label=\"With Select\"\n        className={clsx(classes.margin, classes.textField)}\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n        <Input\n          id=\"adornment-amount\"\n          value={values.amount}\n          onChange={handleChange('amount')}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n        />\n      </FormControl>\n      <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\n        <Input\n          id=\"adornment-weight\"\n          value={values.weight}\n          onChange={handleChange('weight')}\n          endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n          aria-describedby=\"weight-helper-text\"\n          inputProps={{\n            'aria-label': 'Weight',\n          }}\n        />\n        <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n      </FormControl>\n      <FormControl className={clsx(classes.margin, classes.textField)}>\n        <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n        <Input\n          id=\"adornment-password\"\n          type={values.showPassword ? 'text' : 'password'}\n          value={values.password}\n          onChange={handleChange('password')}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton aria-label=\"Toggle password visibility\" onClick={handleClickShowPassword}>\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </div>\n  );\n}\n`;\nconst jsCode10 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function InputWithIcon() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"input-with-icon-adornment\">With a start adornment</InputLabel>\n        <Input\n          id=\"input-with-icon-adornment\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <TextField\n        className={classes.margin}\n        id=\"input-with-icon-textfield\"\n        label=\"TextField\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <div className={classes.margin}>\n        <Grid container spacing={1} alignItems=\"flex-end\">\n          <Grid item>\n            <AccountCircle />\n          </Grid>\n          <Grid item>\n            <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n`;\nconst jsCode11 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function FilledInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id=\"filled-simple-start-adornment\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"With filled TextField\"\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"With Select\"\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"filled-adornment-amount\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"Amount\"\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"filled-adornment-weight\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"Weight\"\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText=\"Weight\"\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"filled-adornment-password\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"filled\"\n        type={values.showPassword ? 'text' : 'password'}\n        label=\"Password\"\n        value={values.password}\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"Toggle password visibility\"\n                onClick={handleClickShowPassword}\n              >\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode12 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function OutlinedInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id=\"outlined-simple-start-adornment\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"With outlined TextField\"\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"With Select\"\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"outlined-adornment-amount\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"Amount\"\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"outlined-adornment-weight\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"Weight\"\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText=\"Weight\"\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"outlined-adornment-password\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        type={values.showPassword ? 'text' : 'password'}\n        label=\"Password\"\n        value={values.password}\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"Toggle password visibility\"\n                onClick={handleClickShowPassword}\n              >\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RedditTextField\");\n$RefreshReg$(_c2, \"TextFieldsExamplesPage\");","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/GoogleMaterialExamples/inputs/TextFieldsExamplesPage.js"],"names":["React","clsx","TextField","MenuItem","FormControl","Input","InputLabel","FormHelperText","OutlinedInput","FilledInput","InputBase","Paper","IconButton","Divider","InputAdornment","Grid","green","fade","withStyles","makeStyles","createMuiTheme","ThemeProvider","Visibility","VisibilityOff","AccountCircle","Notice","KTCodeExample","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","dense","marginTop","menu","currencies","value","label","useStyles2","useStyles3","useStyles4","formControl","margin","useStyles5","input","useStyles6","CssTextField","root","color","borderBottomColor","borderColor","BootstrapInput","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","padding","transition","transitions","create","fontFamily","join","boxShadow","primary","main","useStylesReddit","overflow","focused","RedditTextField","props","classes","disableUnderline","useStyles7","theme7","useStyles8","alignItems","flex","iconButton","divider","height","ranges","useStyles9","withoutLabel","flexBasis","useStyles10","useStyles11","useStyles12","TextFieldsExamplesPage","values","setValues","useState","name","age","multiline","currency","handleChange","event","target","classes2","values2","setValues2","handleChange2","classes3","values3","setValues3","handleChange3","labelWidth4","setLabelWidth4","name4","setName4","labelRef4","useRef","classes4","useEffect","current","offsetWidth","handleChange4","classes5","classes6","classes7","classes8","classes9","values9","setValues9","amount","password","weight","weightRange","showPassword","handleChange9","prop","handleClickShowPassword9","classes10","classes11","values11","setValues11","handleChange11","handleClickShowPassword11","classes12","values12","setValues12","handleChange12","handleClickShowPassword12","jsCode1","readOnly","shrink","MenuProps","className","map","option","native","jsCode3","jsCode5","jsCode7","jsCode9","startAdornment","jsCode11","endAdornment","jsCode2","jsCode4","jsCode6","jsCode8","jsCode10","jsCode12"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxPA;AAyPA,MAAMe,OAAO,GAAI;AACjjjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnFA;AAoFA,MAAMP,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArDA;AAsDA,MAAMQ,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhDA;AAiDA,MAAMP,OAAO,GAAI;AACjjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvDA;AAwDA,MAAMP,OAAO,GAAI;AACjnIA;AAoIA,MAAMQ,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1DA;AA2DA,MAAMN,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArIA;AAsIA,MAAMO,QAAQ,GAAI;AAClrIA","sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  TextField,\r\n  MenuItem,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  FormHelperText,\r\n  OutlinedInput,\r\n  FilledInput,\r\n  InputBase,\r\n  Paper,\r\n  IconButton,\r\n  Divider,\r\n  InputAdornment,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport {\r\n  fade,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme\r\n} from \"@material-ui/core/styles\";\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nconst currencies = [\r\n  {\r\n    value: \"USD\",\r\n    label: \"$\"\r\n  },\r\n  {\r\n    value: \"EUR\",\r\n    label: \"€\"\r\n  },\r\n  {\r\n    value: \"BTC\",\r\n    label: \"฿\"\r\n  },\r\n  {\r\n    value: \"JPY\",\r\n    label: \"¥\"\r\n  }\r\n];\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 7\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"green\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"green\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"red\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"yellow\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"green\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  }\r\n}))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\"\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  },\r\n  focused: {}\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  );\r\n}\r\n\r\nconst useStyles7 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst theme7 = createMuiTheme({\r\n  palette: {\r\n    primary: green\r\n  }\r\n});\r\n\r\n// Example 8\r\nconst useStyles8 = makeStyles({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 400\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4\r\n  }\r\n});\r\n\r\n// Example 9\r\nconst ranges = [\r\n  {\r\n    value: \"0-20\",\r\n    label: \"0 to 20\"\r\n  },\r\n  {\r\n    value: \"21-50\",\r\n    label: \"21 to 50\"\r\n  },\r\n  {\r\n    value: \"51-100\",\r\n    label: \"51 to 100\"\r\n  }\r\n];\r\n\r\nconst useStyles9 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    flexBasis: 200\r\n  }\r\n}));\r\n\r\n// Example 10\r\nconst useStyles10 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 11\r\nconst useStyles11 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    flexBasis: 200\r\n  }\r\n}));\r\n\r\n// Example 12\r\nconst useStyles12 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    flexBasis: 200\r\n  }\r\n}));\r\n\r\nexport default function TextFieldsExamplesPage() {\r\n  // Example 1\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: \"Cat in the Hat\",\r\n    age: \"\",\r\n    multiline: \"Controlled\",\r\n    currency: \"EUR\"\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [values2, setValues2] = React.useState({\r\n    name: \"Cat in the Hat\",\r\n    age: \"\",\r\n    multiline: \"Controlled\",\r\n    currency: \"EUR\"\r\n  });\r\n\r\n  const handleChange2 = name => event => {\r\n    setValues2({ ...values2, [name]: event.target.value });\r\n  };\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [values3, setValues3] = React.useState({\r\n    name: \"Cat in the Hat\",\r\n    age: \"\",\r\n    multiline: \"Controlled\",\r\n    currency: \"EUR\"\r\n  });\r\n\r\n  const handleChange3 = name => event => {\r\n    setValues3({ ...values3, [name]: event.target.value });\r\n  };\r\n\r\n  // Example 4\r\n  const [labelWidth4, setLabelWidth4] = React.useState(0);\r\n  const [name4, setName4] = React.useState(\"Composed TextField\");\r\n  const labelRef4 = React.useRef(null);\r\n  const classes4 = useStyles4();\r\n\r\n  React.useEffect(() => {\r\n    setLabelWidth4(labelRef4.current.offsetWidth);\r\n  }, []);\r\n\r\n  function handleChange4(event) {\r\n    setName4(event.target.value);\r\n  }\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n\r\n  // Example 8\r\n  const classes8 = useStyles8();\r\n\r\n  // Example 9\r\n  const classes9 = useStyles9();\r\n  const [values9, setValues9] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false\r\n  });\r\n\r\n  const handleChange9 = prop => event => {\r\n    setValues9({ ...values9, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword9 = () => {\r\n    setValues9({ ...values9, showPassword: !values9.showPassword });\r\n  };\r\n\r\n  // Example 10\r\n  const classes10 = useStyles10();\r\n\r\n  // Example 11\r\n  const classes11 = useStyles11();\r\n  const [values11, setValues11] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false\r\n  });\r\n\r\n  const handleChange11 = prop => event => {\r\n    setValues11({ ...values11, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword11 = () => {\r\n    setValues11({ ...values11, showPassword: !values11.showPassword });\r\n  };\r\n\r\n  // Example 12\r\n  const classes12 = useStyles12();\r\n  const [values12, setValues12] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false\r\n  });\r\n\r\n  const handleChange12 = prop => event => {\r\n    setValues12({ ...values12, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword12 = () => {\r\n    setValues({ ...values12, showPassword: !values12.showPassword });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>Text fields let users enter and edit text.</span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/text-fields/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"TextField\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The <code>TextField</code> wrapper component is a complete form\r\n              control including a label, input and help text.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <form className={classes.container} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                id=\"standard-name\"\r\n                label=\"Name\"\r\n                className={classes.textField}\r\n                value={values.name}\r\n                onChange={handleChange(\"name\")}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-uncontrolled\"\r\n                label=\"Uncontrolled\"\r\n                defaultValue=\"foo\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Required\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                error\r\n                id=\"standard-error\"\r\n                label=\"Error\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                disabled\r\n                id=\"standard-disabled\"\r\n                label=\"Disabled\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-password-input\"\r\n                label=\"Password\"\r\n                className={classes.textField}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-read-only-input\"\r\n                label=\"Read Only\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                  readOnly: true\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"standard-dense\"\r\n                label=\"Dense\"\r\n                className={clsx(classes.textField, classes.dense)}\r\n                margin=\"dense\"\r\n              />\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={values.multiline}\r\n                onChange={handleChange(\"multiline\")}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-multiline-static\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rows=\"4\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-helperText\"\r\n                label=\"Helper text\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes.textField}\r\n                helperText=\"Some important text\"\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-with-placeholder\"\r\n                label=\"With placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-textarea\"\r\n                label=\"With placeholder multiline\"\r\n                placeholder=\"Placeholder\"\r\n                multiline\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-number\"\r\n                label=\"Number\"\r\n                value={values.age}\r\n                onChange={handleChange(\"age\")}\r\n                type=\"number\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-search\"\r\n                label=\"Search field\"\r\n                type=\"search\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-select-currency\"\r\n                select\r\n                label=\"Select\"\r\n                className={classes.textField}\r\n                value={values.currency}\r\n                onChange={handleChange(\"currency\")}\r\n                SelectProps={{\r\n                  MenuProps: {\r\n                    className: classes.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"standard-select-currency-native\"\r\n                select\r\n                label=\"Native select\"\r\n                className={classes.textField}\r\n                value={values.currency}\r\n                onChange={handleChange(\"currency\")}\r\n                SelectProps={{\r\n                  native: true,\r\n                  MenuProps: {\r\n                    className: classes.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Label\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Placeholder\"\r\n                helperText=\"Full width!\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"standard-bare\"\r\n                className={classes.textField}\r\n                defaultValue=\"Bare\"\r\n                margin=\"normal\"\r\n                inputProps={{ \"aria-label\": \"bare\" }}\r\n              />\r\n            </form>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Filled\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>TextField</code> supports filled styling.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <form className={classes3.container} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                id=\"filled-name\"\r\n                label=\"Name\"\r\n                className={classes3.textField}\r\n                value={values3.name}\r\n                onChange={handleChange(\"name\")}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-uncontrolled\"\r\n                label=\"Uncontrolled\"\r\n                defaultValue=\"foo\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"filled-required\"\r\n                label=\"Required\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                error\r\n                id=\"filled-error\"\r\n                label=\"Error\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                disabled\r\n                id=\"filled-disabled\"\r\n                label=\"Disabled\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-email-input\"\r\n                label=\"Email\"\r\n                className={classes3.textField}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-password-input\"\r\n                label=\"Password\"\r\n                className={classes3.textField}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-read-only-input\"\r\n                label=\"Read Only\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                  readOnly: true\r\n                }}\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-dense\"\r\n                label=\"Dense\"\r\n                className={clsx(classes3.textField, classes3.dense)}\r\n                margin=\"dense\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-dense-multiline\"\r\n                label=\"Dense multiline\"\r\n                className={clsx(classes3.textField, classes3.dense)}\r\n                margin=\"dense\"\r\n                variant=\"filled\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n              />\r\n              <TextField\r\n                id=\"filled-multiline-flexible\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={values3.multiline}\r\n                onChange={handleChange3(\"multiline\")}\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                helperText=\"hello\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-multiline-static\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rows=\"4\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-helperText\"\r\n                label=\"Helper text\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes3.textField}\r\n                helperText=\"Some important text\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-with-placeholder\"\r\n                label=\"With placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-textarea\"\r\n                label=\"Multiline Placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                multiline\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-number\"\r\n                label=\"Number\"\r\n                value={values3.age}\r\n                onChange={handleChange3(\"age\")}\r\n                type=\"number\"\r\n                className={classes3.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-search\"\r\n                label=\"Search field\"\r\n                type=\"search\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-select-currency\"\r\n                select\r\n                label=\"Select\"\r\n                className={classes3.textField}\r\n                value={values3.currency}\r\n                onChange={handleChange3(\"currency\")}\r\n                SelectProps={{\r\n                  MenuProps: {\r\n                    className: classes3.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"filled-select-currency-native\"\r\n                select\r\n                label=\"Native select\"\r\n                className={classes3.textField}\r\n                value={values3.currency}\r\n                onChange={handleChange3(\"currency\")}\r\n                SelectProps={{\r\n                  native: true,\r\n                  MenuProps: {\r\n                    className: classes3.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"filled-full-width\"\r\n                label=\"Label\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Placeholder\"\r\n                helperText=\"Full width!\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"filled-bare\"\r\n                className={classes3.textField}\r\n                defaultValue=\"Bare\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                inputProps={{ \"aria-label\": \"bare\" }}\r\n              />\r\n            </form>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Inputs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes5.container}>\r\n              <Input\r\n                defaultValue=\"Hello world\"\r\n                className={classes5.input}\r\n                inputProps={{\r\n                  \"aria-label\": \"Description\"\r\n                }}\r\n              />\r\n              <Input\r\n                placeholder=\"Placeholder\"\r\n                className={classes5.input}\r\n                inputProps={{\r\n                  \"aria-label\": \"Description\"\r\n                }}\r\n              />\r\n              <Input\r\n                value=\"Disabled\"\r\n                className={classes5.input}\r\n                disabled\r\n                inputProps={{\r\n                  \"aria-label\": \"Description\"\r\n                }}\r\n              />\r\n              <Input\r\n                defaultValue=\"Error\"\r\n                className={classes5.input}\r\n                error\r\n                inputProps={{\r\n                  \"aria-label\": \"Description\"\r\n                }}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode7}\r\n            beforeCodeTitle=\"Customized inputs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here are some examples of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes7.root}>\r\n              <CssTextField\r\n                className={classes7.margin}\r\n                id=\"custom-css-standard-input\"\r\n                label=\"Custom CSS\"\r\n              />\r\n              <CssTextField\r\n                className={classes7.margin}\r\n                label=\"Custom CSS\"\r\n                variant=\"outlined\"\r\n                id=\"custom-css-outlined-input\"\r\n              />\r\n              <ThemeProvider theme={theme7}>\r\n                <TextField\r\n                  className={classes7.margin}\r\n                  label=\"ThemeProvider\"\r\n                  id=\"mui-theme-provider-standard-input\"\r\n                />\r\n                <TextField\r\n                  className={classes7.margin}\r\n                  label=\"ThemeProvider\"\r\n                  variant=\"outlined\"\r\n                  id=\"mui-theme-provider-outlined-input\"\r\n                />\r\n              </ThemeProvider>\r\n              <FormControl className={classes7.margin}>\r\n                <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                  Bootstrap\r\n                </InputLabel>\r\n                <BootstrapInput\r\n                  defaultValue=\"react-bootstrap\"\r\n                  id=\"bootstrap-input\"\r\n                />\r\n              </FormControl>\r\n              <RedditTextField\r\n                label=\"Reddit\"\r\n                className={classes7.margin}\r\n                defaultValue=\"react-reddit\"\r\n                variant=\"filled\"\r\n                id=\"reddit-input\"\r\n              />\r\n              <InputBase\r\n                className={classes7.margin}\r\n                defaultValue=\"Naked input\"\r\n                inputProps={{ \"aria-label\": \"naked\" }}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode9}\r\n            beforeCodeTitle=\"Input Adornments\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>Input</code> allows the provision of{\" \"}\r\n              <code>InputAdornment</code>. These can be used to add a prefix, a\r\n              suffix or an action to an input. For instance, you can use an icon\r\n              button to hide or reveal the password.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes9.root}>\r\n              <TextField\r\n                label=\"With normal TextField\"\r\n                id=\"simple-start-adornment\"\r\n                className={clsx(classes9.margin, classes9.textField)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                select\r\n                label=\"With Select\"\r\n                className={clsx(classes9.margin, classes9.textField)}\r\n                value={values9.weightRange}\r\n                onChange={handleChange9(\"weightRange\")}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              >\r\n                {ranges.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <FormControl fullWidth className={classes9.margin}>\r\n                <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\r\n                <Input\r\n                  id=\"adornment-amount\"\r\n                  value={values9.amount}\r\n                  onChange={handleChange9(\"amount\")}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">$</InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(\r\n                  classes9.margin,\r\n                  classes9.withoutLabel,\r\n                  classes9.textField\r\n                )}\r\n              >\r\n                <Input\r\n                  id=\"adornment-weight\"\r\n                  value={values9.weight}\r\n                  onChange={handleChange9(\"weight\")}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\r\n                  }\r\n                  aria-describedby=\"weight-helper-text\"\r\n                  inputProps={{\r\n                    \"aria-label\": \"Weight\"\r\n                  }}\r\n                />\r\n                <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(classes9.margin, classes9.textField)}\r\n              >\r\n                <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\r\n                <Input\r\n                  id=\"adornment-password\"\r\n                  type={values9.showPassword ? \"text\" : \"password\"}\r\n                  value={values9.password}\r\n                  onChange={handleChange9(\"password\")}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"Toggle password visibility\"\r\n                        onClick={handleClickShowPassword9}\r\n                      >\r\n                        {values9.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n            </div>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode11}\r\n            beforeCodeTitle=\"Filled Input Adornments\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            {\" \"}\r\n            <div className={classes11.root}>\r\n              <TextField\r\n                id=\"filled-simple-start-adornment\"\r\n                className={clsx(classes11.margin, classes11.textField)}\r\n                variant=\"filled\"\r\n                label=\"With filled TextField\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                select\r\n                className={clsx(classes11.margin, classes11.textField)}\r\n                variant=\"filled\"\r\n                label=\"With Select\"\r\n                value={values11.weightRange}\r\n                onChange={handleChange11(\"weightRange\")}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              >\r\n                {ranges.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"filled-adornment-amount\"\r\n                className={clsx(classes11.margin, classes11.textField)}\r\n                variant=\"filled\"\r\n                label=\"Amount\"\r\n                value={values11.amount}\r\n                onChange={handleChange11(\"amount\")}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">$</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"filled-adornment-weight\"\r\n                className={clsx(classes11.margin, classes11.textField)}\r\n                variant=\"filled\"\r\n                label=\"Weight\"\r\n                value={values11.weight}\r\n                onChange={handleChange11(\"weight\")}\r\n                helperText=\"Weight\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"filled-adornment-password\"\r\n                className={clsx(classes11.margin, classes11.textField)}\r\n                variant=\"filled\"\r\n                type={values11.showPassword ? \"text\" : \"password\"}\r\n                label=\"Password\"\r\n                value={values11.password}\r\n                onChange={handleChange11(\"password\")}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"Toggle password visibility\"\r\n                        onClick={handleClickShowPassword11}\r\n                      >\r\n                        {values11.showPassword ? (\r\n                          <VisibilityOff />\r\n                        ) : (\r\n                          <Visibility />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Outlined\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>TextField</code> supports outlined styling.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <form className={classes2.container} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                id=\"outlined-name\"\r\n                label=\"Name\"\r\n                className={classes2.textField}\r\n                value={values2.name}\r\n                onChange={handleChange2(\"name\")}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-uncontrolled\"\r\n                label=\"Uncontrolled\"\r\n                defaultValue=\"foo\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Required\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                error\r\n                id=\"outlined-error\"\r\n                label=\"Error\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                disabled\r\n                id=\"outlined-disabled\"\r\n                label=\"Disabled\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-email-input\"\r\n                label=\"Email\"\r\n                className={classes2.textField}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"Password\"\r\n                className={classes2.textField}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-read-only-input\"\r\n                label=\"Read Only\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                  readOnly: true\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-dense\"\r\n                label=\"Dense\"\r\n                className={clsx(classes2.textField, classes2.dense)}\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-dense-multiline\"\r\n                label=\"Dense multiline\"\r\n                className={clsx(classes2.textField, classes2.dense)}\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-multiline-flexible\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={values2.multiline}\r\n                onChange={handleChange2(\"multiline\")}\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                helperText=\"hello\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rows=\"4\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-helperText\"\r\n                label=\"Helper text\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes2.textField}\r\n                helperText=\"Some important text\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-with-placeholder\"\r\n                label=\"With placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Multiline Placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                multiline\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-number\"\r\n                label=\"Number\"\r\n                value={values2.age}\r\n                onChange={handleChange2(\"age\")}\r\n                type=\"number\"\r\n                className={classes2.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-search\"\r\n                label=\"Search field\"\r\n                type=\"search\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-select-currency\"\r\n                select\r\n                label=\"Select\"\r\n                className={classes2.textField}\r\n                value={values2.currency}\r\n                onChange={handleChange2(\"currency\")}\r\n                SelectProps={{\r\n                  MenuProps: {\r\n                    className: classes2.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"outlined-select-currency-native\"\r\n                select\r\n                label=\"Native select\"\r\n                className={classes2.textField}\r\n                value={values2.currency}\r\n                onChange={handleChange(\"currency\")}\r\n                SelectProps={{\r\n                  native: true,\r\n                  MenuProps: {\r\n                    className: classes2.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"outlined-full-width\"\r\n                label=\"Label\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Placeholder\"\r\n                helperText=\"Full width!\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"outlined-bare\"\r\n                className={classes2.textField}\r\n                defaultValue=\"Bare\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                inputProps={{ \"aria-label\": \"bare\" }}\r\n              />\r\n            </form>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Components\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>TextField</code> is composed of smaller components ({\" \"}\r\n              <code>FormControl</code>, <code>Input</code>,{\" \"}\r\n              <code>FilledInput</code>, <code>InputLabel</code>,{\" \"}\r\n              <code>OutlinedInput</code>, and <code>FormHelperText</code> ) that\r\n              you can leverage directly to significantly customize your form\r\n              inputs.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.container}>\r\n              <FormControl className={classes4.formControl}>\r\n                <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\r\n                <Input\r\n                  id=\"component-simple\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                />\r\n              </FormControl>\r\n              <FormControl className={classes4.formControl}>\r\n                <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\r\n                <Input\r\n                  id=\"component-helper\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                  aria-describedby=\"component-helper-text\"\r\n                />\r\n                <FormHelperText id=\"component-helper-text\">\r\n                  Some important helper text\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes4.formControl} disabled>\r\n                <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\r\n                <Input\r\n                  id=\"component-disabled\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                />\r\n                <FormHelperText>Disabled</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes4.formControl} error>\r\n                <InputLabel htmlFor=\"component-error\">Name</InputLabel>\r\n                <Input\r\n                  id=\"component-error\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                  aria-describedby=\"component-error-text\"\r\n                />\r\n                <FormHelperText id=\"component-error-text\">Error</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes4.formControl} variant=\"outlined\">\r\n                <InputLabel ref={labelRef4} htmlFor=\"component-outlined\">\r\n                  Name\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"component-outlined\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                  labelWidth={labelWidth4}\r\n                />\r\n              </FormControl>\r\n              <FormControl className={classes4.formControl} variant=\"filled\">\r\n                <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\r\n                <FilledInput\r\n                  id=\"component-filled\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                />\r\n              </FormControl>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Layout\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>TextField</code>, <code>FormControl</code> allow the\r\n              specification of <code>margin</code> to alter the vertical spacing\r\n              of inputs. Using <code>none</code> (default) will not apply\r\n              margins to the <code>FormControl</code>, whereas{\" \"}\r\n              <code>dense</code> and <code>normal</code> will as well as alter\r\n              other styles to meet the specification.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes6.container}>\r\n              <TextField\r\n                label=\"None\"\r\n                id=\"margin-none\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes6.textField}\r\n                helperText=\"Some important text\"\r\n              />\r\n              <TextField\r\n                label=\"Dense\"\r\n                id=\"margin-dense\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes6.textField}\r\n                helperText=\"Some important text\"\r\n                margin=\"dense\"\r\n              />\r\n              <TextField\r\n                label=\"Normal\"\r\n                id=\"margin-normal\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes6.textField}\r\n                helperText=\"Some important text\"\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode8}\r\n            beforeCodeTitle=\"Customized inputs using InputBase\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Customization does not stop at CSS, you can use composition to\r\n              build custom components and give your app a unique feel. Below is\r\n              an example using the <code>InputBase</code> component, inspired by\r\n              Google Maps.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes8.root}>\r\n              <IconButton className={classes8.iconButton} aria-label=\"Menu\">\r\n                <i className=\"flaticon-layer\"></i>\r\n              </IconButton>\r\n              <InputBase\r\n                className={classes8.input}\r\n                placeholder=\"Search Google Maps\"\r\n                inputProps={{ \"aria-label\": \"Search Google Maps\" }}\r\n              />\r\n              <IconButton className={classes8.iconButton} aria-label=\"Search\">\r\n                <i className=\"flaticon-search\"></i>\r\n              </IconButton>\r\n              <Divider className={classes8.divider} />\r\n              <IconButton\r\n                color=\"primary\"\r\n                className={classes8.iconButton}\r\n                aria-label=\"Directions\"\r\n              >\r\n                <i className=\"fa fa-chevron-circle-right\"></i>\r\n              </IconButton>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode10}\r\n            beforeCodeTitle=\"With icon\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Icons can be specified as prepended or appended.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <FormControl className={classes10.margin}>\r\n                <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                  With a start adornment\r\n                </InputLabel>\r\n                <Input\r\n                  id=\"input-with-icon-adornment\"\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <TextField\r\n                className={classes10.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"TextField\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <div className={classes10.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <AccountCircle />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode12}\r\n            beforeCodeTitle=\"Outlined Input Adornments\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes12.root}>\r\n              <TextField\r\n                id=\"outlined-simple-start-adornment\"\r\n                className={clsx(classes12.margin, classes12.textField)}\r\n                variant=\"outlined\"\r\n                label=\"With outlined TextField\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                select\r\n                className={clsx(classes12.margin, classes12.textField)}\r\n                variant=\"outlined\"\r\n                label=\"With Select\"\r\n                value={values12.weightRange}\r\n                onChange={handleChange12(\"weightRange\")}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              >\r\n                {ranges.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"outlined-adornment-amount\"\r\n                className={clsx(classes12.margin, classes12.textField)}\r\n                variant=\"outlined\"\r\n                label=\"Amount\"\r\n                value={values12.amount}\r\n                onChange={handleChange12(\"amount\")}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">$</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"outlined-adornment-weight\"\r\n                className={clsx(classes12.margin, classes12.textField)}\r\n                variant=\"outlined\"\r\n                label=\"Weight\"\r\n                value={values12.weight}\r\n                onChange={handleChange12(\"weight\")}\r\n                helperText=\"Weight\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"outlined-adornment-password\"\r\n                className={clsx(classes12.margin, classes12.textField)}\r\n                variant=\"outlined\"\r\n                type={values12.showPassword ? \"text\" : \"password\"}\r\n                label=\"Password\"\r\n                value={values12.password}\r\n                onChange={handleChange12(\"password\")}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"Toggle password visibility\"\r\n                        onClick={handleClickShowPassword12}\r\n                      >\r\n                        {values12.showPassword ? (\r\n                          <VisibilityOff />\r\n                        ) : (\r\n                          <Visibility />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nexport default function TextFields() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: 'Cat in the Hat',\r\n    age: '',\r\n    multiline: 'Controlled',\r\n    currency: 'EUR',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"standard-name\"\r\n        label=\"Name\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange('name')}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-uncontrolled\"\r\n        label=\"Uncontrolled\"\r\n        defaultValue=\"foo\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"standard-required\"\r\n        label=\"Required\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        error\r\n        id=\"standard-error\"\r\n        label=\"Error\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        disabled\r\n        id=\"standard-disabled\"\r\n        label=\"Disabled\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-password-input\"\r\n        label=\"Password\"\r\n        className={classes.textField}\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-read-only-input\"\r\n        label=\"Read Only\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"standard-dense\"\r\n        label=\"Dense\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n      />\r\n      <TextField\r\n        id=\"standard-multiline-flexible\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={values.multiline}\r\n        onChange={handleChange('multiline')}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-multiline-static\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rows=\"4\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-helperText\"\r\n        label=\"Helper text\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-with-placeholder\"\r\n        label=\"With placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-textarea\"\r\n        label=\"With placeholder multiline\"\r\n        placeholder=\"Placeholder\"\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-number\"\r\n        label=\"Number\"\r\n        value={values.age}\r\n        onChange={handleChange('age')}\r\n        type=\"number\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-select-currency\"\r\n        select\r\n        label=\"Select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"standard-select-currency-native\"\r\n        select\r\n        label=\"Native select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n      >\r\n        {currencies.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"standard-full-width\"\r\n        label=\"Label\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"Placeholder\"\r\n        helperText=\"Full width!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"standard-bare\"\r\n        className={classes.textField}\r\n        defaultValue=\"Bare\"\r\n        margin=\"normal\"\r\n        inputProps={{ 'aria-label': 'bare' }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function OutlinedTextFields() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: 'Cat in the Hat',\r\n    age: '',\r\n    multiline: 'Controlled',\r\n    currency: 'EUR',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"outlined-name\"\r\n        label=\"Name\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange('name')}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-uncontrolled\"\r\n        label=\"Uncontrolled\"\r\n        defaultValue=\"foo\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"outlined-required\"\r\n        label=\"Required\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        error\r\n        id=\"outlined-error\"\r\n        label=\"Error\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        disabled\r\n        id=\"outlined-disabled\"\r\n        label=\"Disabled\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-email-input\"\r\n        label=\"Email\"\r\n        className={classes.textField}\r\n        type=\"email\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-password-input\"\r\n        label=\"Password\"\r\n        className={classes.textField}\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-read-only-input\"\r\n        label=\"Read Only\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-dense\"\r\n        label=\"Dense\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-dense-multiline\"\r\n        label=\"Dense multiline\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-multiline-flexible\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={values.multiline}\r\n        onChange={handleChange('multiline')}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        helperText=\"hello\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-multiline-static\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rows=\"4\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-helperText\"\r\n        label=\"Helper text\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-with-placeholder\"\r\n        label=\"With placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-textarea\"\r\n        label=\"Multiline Placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-number\"\r\n        label=\"Number\"\r\n        value={values.age}\r\n        onChange={handleChange('age')}\r\n        type=\"number\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-select-currency\"\r\n        select\r\n        label=\"Select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"outlined-select-currency-native\"\r\n        select\r\n        label=\"Native select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      >\r\n        {currencies.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"outlined-full-width\"\r\n        label=\"Label\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"Placeholder\"\r\n        helperText=\"Full width!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"outlined-bare\"\r\n        className={classes.textField}\r\n        defaultValue=\"Bare\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        inputProps={{ 'aria-label': 'bare' }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function FilledTextFields() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: 'Cat in the Hat',\r\n    age: '',\r\n    multiline: 'Controlled',\r\n    currency: 'EUR',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"filled-name\"\r\n        label=\"Name\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange('name')}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-uncontrolled\"\r\n        label=\"Uncontrolled\"\r\n        defaultValue=\"foo\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"filled-required\"\r\n        label=\"Required\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        error\r\n        id=\"filled-error\"\r\n        label=\"Error\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        disabled\r\n        id=\"filled-disabled\"\r\n        label=\"Disabled\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-email-input\"\r\n        label=\"Email\"\r\n        className={classes.textField}\r\n        type=\"email\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-password-input\"\r\n        label=\"Password\"\r\n        className={classes.textField}\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-read-only-input\"\r\n        label=\"Read Only\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-dense\"\r\n        label=\"Dense\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-dense-multiline\"\r\n        label=\"Dense multiline\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"filled\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n      />\r\n      <TextField\r\n        id=\"filled-multiline-flexible\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={values.multiline}\r\n        onChange={handleChange('multiline')}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        helperText=\"hello\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-multiline-static\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rows=\"4\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-helperText\"\r\n        label=\"Helper text\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-with-placeholder\"\r\n        label=\"With placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-textarea\"\r\n        label=\"Multiline Placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-number\"\r\n        label=\"Number\"\r\n        value={values.age}\r\n        onChange={handleChange('age')}\r\n        type=\"number\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-select-currency\"\r\n        select\r\n        label=\"Select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"filled-select-currency-native\"\r\n        select\r\n        label=\"Native select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      >\r\n        {currencies.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"filled-full-width\"\r\n        label=\"Label\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"Placeholder\"\r\n        helperText=\"Full width!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"filled-bare\"\r\n        className={classes.textField}\r\n        defaultValue=\"Bare\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n        inputProps={{ 'aria-label': 'bare' }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function ComposedTextField() {\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  const [name, setName] = React.useState('Composed TextField');\r\n  const labelRef = React.useRef(null);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    setLabelWidth(labelRef.current.offsetWidth);\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\r\n        <Input id=\"component-simple\" value={name} onChange={handleChange} />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\r\n        <Input\r\n          id=\"component-helper\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          aria-describedby=\"component-helper-text\"\r\n        />\r\n        <FormHelperText id=\"component-helper-text\">Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\r\n        <Input id=\"component-disabled\" value={name} onChange={handleChange} />\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor=\"component-error\">Name</InputLabel>\r\n        <Input\r\n          id=\"component-error\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          aria-describedby=\"component-error-text\"\r\n        />\r\n        <FormHelperText id=\"component-error-text\">Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} variant=\"outlined\">\r\n        <InputLabel ref={labelRef} htmlFor=\"component-outlined\">\r\n          Name\r\n        </InputLabel>\r\n        <OutlinedInput\r\n          id=\"component-outlined\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          labelWidth={labelWidth}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} variant=\"filled\">\r\n        <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\r\n        <FilledInput id=\"component-filled\" value={name} onChange={handleChange} />\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Inputs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Input\r\n        defaultValue=\"Hello world\"\r\n        className={classes.input}\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n      <Input\r\n        placeholder=\"Placeholder\"\r\n        className={classes.input}\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n      <Input\r\n        value=\"Disabled\"\r\n        className={classes.input}\r\n        disabled\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n      <Input\r\n        defaultValue=\"Error\"\r\n        className={classes.input}\r\n        error\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function TextFieldMargins() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <TextField\r\n        label=\"None\"\r\n        id=\"margin-none\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n      />\r\n      <TextField\r\n        label=\"Dense\"\r\n        id=\"margin-dense\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"dense\"\r\n      />\r\n      <TextField\r\n        label=\"Normal\"\r\n        id=\"margin-normal\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { fade, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'yellow',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.common.white,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      boxShadow: \\`\\${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem\\`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: '1px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: '#fcfcfb',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxShadow: \\`\\${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px\\`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nexport default function CustomizedInputs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssTextField className={classes.margin} id=\"custom-css-standard-input\" label=\"Custom CSS\" />\r\n      <CssTextField\r\n        className={classes.margin}\r\n        label=\"Custom CSS\"\r\n        variant=\"outlined\"\r\n        id=\"custom-css-outlined-input\"\r\n      />\r\n      <ThemeProvider theme={theme}>\r\n        <TextField\r\n          className={classes.margin}\r\n          label=\"ThemeProvider\"\r\n          id=\"mui-theme-provider-standard-input\"\r\n        />\r\n        <TextField\r\n          className={classes.margin}\r\n          label=\"ThemeProvider\"\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n        />\r\n      </ThemeProvider>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n          Bootstrap\r\n        </InputLabel>\r\n        <BootstrapInput defaultValue=\"react-bootstrap\" id=\"bootstrap-input\" />\r\n      </FormControl>\r\n      <RedditTextField\r\n        label=\"Reddit\"\r\n        className={classes.margin}\r\n        defaultValue=\"react-reddit\"\r\n        variant=\"filled\"\r\n        id=\"reddit-input\"\r\n      />\r\n      <InputBase\r\n        className={classes.margin}\r\n        defaultValue=\"Naked input\"\r\n        inputProps={{ 'aria-label': 'naked' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n});\r\n\r\nexport default function CustomizedInputBase() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <IconButton className={classes.iconButton} aria-label=\"Menu\">\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search Google Maps\"\r\n        inputProps={{ 'aria-label': 'Search Google Maps' }}\r\n      />\r\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Divider className={classes.divider} />\r\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\">\r\n        <DirectionsIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst ranges = [\r\n  {\r\n    value: '0-20',\r\n    label: '0 to 20',\r\n  },\r\n  {\r\n    value: '21-50',\r\n    label: '21 to 50',\r\n  },\r\n  {\r\n    value: '51-100',\r\n    label: '51 to 100',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n}));\r\n\r\nexport default function InputAdornments() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        label=\"With normal TextField\"\r\n        id=\"simple-start-adornment\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"With Select\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        value={values.weightRange}\r\n        onChange={handleChange('weightRange')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      >\r\n        {ranges.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <FormControl fullWidth className={classes.margin}>\r\n        <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\r\n        <Input\r\n          id=\"adornment-amount\"\r\n          value={values.amount}\r\n          onChange={handleChange('amount')}\r\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\r\n        <Input\r\n          id=\"adornment-weight\"\r\n          value={values.weight}\r\n          onChange={handleChange('weight')}\r\n          endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\r\n          aria-describedby=\"weight-helper-text\"\r\n          inputProps={{\r\n            'aria-label': 'Weight',\r\n          }}\r\n        />\r\n        <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.margin, classes.textField)}>\r\n        <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\r\n        <Input\r\n          id=\"adornment-password\"\r\n          type={values.showPassword ? 'text' : 'password'}\r\n          value={values.password}\r\n          onChange={handleChange('password')}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton aria-label=\"Toggle password visibility\" onClick={handleClickShowPassword}>\r\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function InputWithIcon() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"input-with-icon-adornment\">With a start adornment</InputLabel>\r\n        <Input\r\n          id=\"input-with-icon-adornment\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      <TextField\r\n        className={classes.margin}\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"TextField\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <div className={classes.margin}>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <AccountCircle />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst ranges = [\r\n  {\r\n    value: '0-20',\r\n    label: '0 to 20',\r\n  },\r\n  {\r\n    value: '21-50',\r\n    label: '21 to 50',\r\n  },\r\n  {\r\n    value: '51-100',\r\n    label: '51 to 100',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n}));\r\n\r\nexport default function FilledInputAdornments() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"filled-simple-start-adornment\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"With filled TextField\"\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        select\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"With Select\"\r\n        value={values.weightRange}\r\n        onChange={handleChange('weightRange')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      >\r\n        {ranges.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"filled-adornment-amount\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"Amount\"\r\n        value={values.amount}\r\n        onChange={handleChange('amount')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"filled-adornment-weight\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"Weight\"\r\n        value={values.weight}\r\n        onChange={handleChange('weight')}\r\n        helperText=\"Weight\"\r\n        InputProps={{\r\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"filled-adornment-password\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        type={values.showPassword ? 'text' : 'password'}\r\n        label=\"Password\"\r\n        value={values.password}\r\n        onChange={handleChange('password')}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"Toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n              >\r\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode12 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst ranges = [\r\n  {\r\n    value: '0-20',\r\n    label: '0 to 20',\r\n  },\r\n  {\r\n    value: '21-50',\r\n    label: '21 to 50',\r\n  },\r\n  {\r\n    value: '51-100',\r\n    label: '51 to 100',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n}));\r\n\r\nexport default function OutlinedInputAdornments() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"outlined-simple-start-adornment\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"With outlined TextField\"\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        select\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"With Select\"\r\n        value={values.weightRange}\r\n        onChange={handleChange('weightRange')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      >\r\n        {ranges.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"outlined-adornment-amount\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"Amount\"\r\n        value={values.amount}\r\n        onChange={handleChange('amount')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"outlined-adornment-weight\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"Weight\"\r\n        value={values.weight}\r\n        onChange={handleChange('weight')}\r\n        helperText=\"Weight\"\r\n        InputProps={{\r\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"outlined-adornment-password\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        type={values.showPassword ? 'text' : 'password'}\r\n        label=\"Password\"\r\n        value={values.password}\r\n        onChange={handleChange('password')}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"Toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n              >\r\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}