{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\OneDrive\\\\Desktop\\\\technogrip\\\\src\\\\app\\\\modules\\\\ReactBootstrapExamples\\\\FormsExamplesPage.js\";\nimport React from \"react\";\nimport { Button, Form, InputGroup, Col, Row } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FormExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validated: false\n    };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.setState({\n      validated: true\n    });\n  }\n\n  render() {\n    const {\n      validated\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: e => this.handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"4\",\n          controlId: \"validationCustom01\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"First name\",\n            defaultValue: \"Mark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"4\",\n          controlId: \"validationCustom02\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Last name\",\n            defaultValue: \"Otto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"4\",\n          controlId: \"validationCustomUsername\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                id: \"inputGroupPrepend\",\n                children: \"@\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Username\",\n              \"aria-describedby\": \"inputGroupPrepend\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please choose a username.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom03\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"City\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide a valid city.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"validationCustom04\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"State\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide a valid state.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"validationCustom05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Zip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Zip\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide a valid zip.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          required: true,\n          label: \"Agree to terms and conditions\",\n          feedback: \"You must agree before submitting.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default class FormsExamplesPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        children: [\"For more info please check the components's official\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"font-weight-bold\",\n          rel: \"noopener noreferrer\",\n          href: \"https://react-bootstrap.github.io/components/forms/\",\n          children: \"demos & documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode1,\n            beforeCodeTitle: \"Basic Example\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<FormControl>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this), \" component renders a form control with Bootstrap styling. The\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<FormGroup>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), \" component wraps a form control with proper spacing, along with support for a label, help text, and validation state. To ensure accessibility, set controlId on\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<FormGroup>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), \", and use\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<FormLabel>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), \" for the label.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Enter email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"We'll never share your email with anyone else.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicChecbox\",\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Check me out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode3,\n            beforeCodeTitle: \"Sizing\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Use \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this), \" on \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<FormControl>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 42\n              }, this), \" to change the size of inputs.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                size: \"lg\",\n                type: \"text\",\n                placeholder: \"Large text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Normal text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                size: \"sm\",\n                type: \"text\",\n                placeholder: \"Small text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode5,\n            beforeCodeTitle: \"Default (stacked)\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"By default, any number of checkboxes and radios that are immediate sibling will be vertically stacked and appropriately spaced with FormCheck.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [\"checkbox\", \"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: type,\n                  id: `default-${type}`,\n                  label: `default ${type}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  disabled: true,\n                  type: type,\n                  label: `disabled ${type}`,\n                  id: `disabled-default-${type}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this)]\n              }, `default-${type}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode7,\n            beforeCodeTitle: \"Without labels\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"When you render a FormCheck without a label (no\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"children\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), \") some additional styling is applied to keep the inputs from collapsing.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                \"aria-label\": \"option 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"radio\",\n                \"aria-label\": \"radio 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode9,\n            beforeCodeTitle: \"Form group\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mb-3\",\n              children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"FormGroup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), \" component is the easiest way to add some structure to forms. It provides a flexible container for grouping of labels, controls, optional help text, and form validation messaging.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"You also add the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"controlId\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 34\n              }, this), \" prop to accessibly wire the nested label and input together via the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 61\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formGroupEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Enter email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formGroupPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode11,\n            beforeCodeTitle: \"Form row\",\n            codeBlockHeight: \"400px\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"You may also swap \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<Row>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 35\n              }, this), \" for\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<Form.Row>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), \", a variation of the standard grid row that overrides the default column gutters for tighter and more compact layouts.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridEmail\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    placeholder: \"Enter email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridPassword\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formGridAddress1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  placeholder: \"1234 Main St\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formGridAddress2\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Address 2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  placeholder: \"Apartment, studio, or floor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridCity\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridState\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"State\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Choose...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridZip\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Zip\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                id: \"formGridCheckbox\",\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Check me out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode13,\n            beforeCodeTitle: \"Native HTML5 form validation\",\n            codeBlockHeight: \"400px\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"For native HTML form validation\\u2013available in all our supported browsers, the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \":valid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 31\n              }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \":invalid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 55\n              }, this), \" \", \"pseudo selectors are used to apply validation styles as well as display feedback messages.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormExample, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode2,\n            beforeCodeTitle: \"Form controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"For textual form controls\\u2014like \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 48\n              }, this), \"s,\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), \"s, and \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"textarea\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 43\n              }, this), \"s\\u2014use the FormControl component. FormControl adds some additional styles for general appearance, focus state, sizing, and more.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"exampleForm.ControlInput1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"name@example.com\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"exampleForm.ControlSelect1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Example select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"exampleForm.ControlSelect2\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Example multiple select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  multiple: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"exampleForm.ControlTextarea1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Example textarea\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode4,\n            beforeCodeTitle: \"Plaintext\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"If you want to have elements in your form styled as plain text, use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"plaintext\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 25\n              }, this), \" prop on FormControls to remove the default form field styling and preserve the correct margin and padding.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                controlId: \"formPlaintextEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: \"2\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: \"10\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    plaintext: true,\n                    readOnly: true,\n                    defaultValue: \"email@example.com\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                controlId: \"formPlaintextPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: \"2\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: \"10\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode6,\n            beforeCodeTitle: \"Inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Group checkboxes or radios on the same horizontal row by adding the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"inline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this), \" prop.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [\"checkbox\", \"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  inline: true,\n                  label: \"1\",\n                  type: type,\n                  id: `inline-${type}-1`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  inline: true,\n                  label: \"2\",\n                  type: type,\n                  id: `inline-${type}-2`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  inline: true,\n                  disabled: true,\n                  label: \"3 (disabled)\",\n                  type: type,\n                  id: `inline-${type}-3`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this)]\n              }, `inline-${type}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode8,\n            beforeCodeTitle: \"Customizing FormCheck rendering\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mb-3\",\n              children: [\"When you need tighter control, or want to customize how the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"FormCheck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), \" component renders, it may better to use it's constituent parts directly.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"By provided \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"children\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 29\n              }, this), \" to the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"FormCheck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 58\n              }, this), \" \", \"you can forgo the default rendering and handle it yourself.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [\"checkbox\", \"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: type,\n                  id: `check-api-${type}`,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Check.Input, {\n                    type: type,\n                    isValid: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Check.Label, {\n                    children: `Custom api ${type}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"valid\",\n                    children: \"You did it!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 21\n                }, this)\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode10,\n            beforeCodeTitle: \"Form grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"More complex forms can be built using the grid components. Use these for form layouts that require multiple columns, varied widths, and additional alignment options.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    placeholder: \"First name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    placeholder: \"Last name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode12,\n            beforeCodeTitle: \"Horizontal forms\",\n            codeBlockHeight: \"400px\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"You may also swap \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<Row>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 35\n              }, this), \" for\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"<Form.Row>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this), \", a variation of the standard grid row that overrides the default column gutters for tighter and more compact layouts.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                controlId: \"formHorizontalEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 2,\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 10,\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    placeholder: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                controlId: \"formHorizontalPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 2,\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 10,\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Row,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    as: \"legend\",\n                    column: true,\n                    sm: 2,\n                    children: \"Radios\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 10,\n                    children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      label: \"first radio\",\n                      name: \"formHorizontalRadios\",\n                      id: \"formHorizontalRadios1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      label: \"second radio\",\n                      name: \"formHorizontalRadios\",\n                      id: \"formHorizontalRadios2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      label: \"third radio\",\n                      name: \"formHorizontalRadios\",\n                      id: \"formHorizontalRadios3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                controlId: \"formHorizontalCheck\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: {\n                    span: 10,\n                    offset: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    label: \"Remember me\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: {\n                    span: 10,\n                    offset: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    children: \"Sign in\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode16,\n            beforeCodeTitle: \"Inline\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [\"checkbox\", \"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  custom: true,\n                  inline: true,\n                  label: \"1\",\n                  type: type,\n                  id: `custom-inline-${type}-1`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  custom: true,\n                  inline: true,\n                  label: \"2\",\n                  type: type,\n                  id: `custom-inline-${type}-2`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  custom: true,\n                  inline: true,\n                  disabled: true,\n                  label: \"3 (disabled)\",\n                  type: type,\n                  id: `custom-inline-${type}-3`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 21\n                }, this)]\n              }, `custom-inline-${type}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KTCodeExample, {\n            jsCode: jsCode15,\n            beforeCodeTitle: \"Checkboxes and radios\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Custom checkbox and radio styles are achieved with a resourceful use of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \":checked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 28\n              }, this), \" selector and\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \":after\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 17\n              }, this), \" psuedo elements, but are Structurally similar to the default \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"FormCheck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 40\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator separator-dashed my-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [\"checkbox\", \"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  custom: true,\n                  type: type,\n                  id: `custom-${type}`,\n                  label: `Check this custom ${type}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  custom: true,\n                  disabled: true,\n                  type: type,\n                  label: `disabled ${type}`,\n                  id: `disabled-custom-${type}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 21\n                }, this)]\n              }, `custom-${type}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nconst jsCode1 = `\n<Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicChecbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n`;\nconst jsCode2 = `\n<Form>\n  <Form.Group controlId=\"exampleForm.ControlInput1\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n    <Form.Label>Example select</Form.Label>\n    <Form.Control as=\"select\">\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlSelect2\">\n    <Form.Label>Example multiple select</Form.Label>\n    <Form.Control as=\"select\" multiple>\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" />\n  </Form.Group>\n</Form>\n`;\nconst jsCode3 = `\n<>\n  <Form.Control size=\"lg\" type=\"text\" placeholder=\"Large text\" />\n  <br />\n  <Form.Control type=\"text\" placeholder=\"Normal text\" />\n  <br />\n  <Form.Control size=\"sm\" type=\"text\" placeholder=\"Small text\" />\n</>\n`;\nconst jsCode4 = `\n<Form>\n  <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n    <Form.Label column sm=\"2\">\n      Email\n    </Form.Label>\n    <Col sm=\"10\">\n      <Form.Control plaintext readOnly defaultValue=\"email@example.com\" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n    <Form.Label column sm=\"2\">\n      Password\n    </Form.Label>\n    <Col sm=\"10\">\n      <Form.Control type=\"password\" placeholder=\"Password\" />\n    </Col>\n  </Form.Group>\n</Form>\n`;\nconst jsCode5 = `\n<Form>\n  {['checkbox', 'radio'].map(type => (\n    <div key={\\`default-\\${type}\\`} className=\"mb-3\">\n      <Form.Check \n        type={type}\n        id={\\`default-\\${type}\\`}\n        label={\\`default \\${type}\\`}\n      />\n\n      <Form.Check\n        disabled\n        type={type}\n        label={\\`disabled \\${type}\\`}\n        id={\\`disabled-default-\\${type}\\`}\n      />\n    </div>\n  ))}\n</Form>\n`;\nconst jsCode6 = `\n<Form>\n  {['checkbox', 'radio'].map(type => (\n    <div key={\\`inline-\\${type}\\`} className=\"mb-3\">\n      <Form.Check inline label=\"1\" type={type} id={\\`inline-\\${type}-1\\`} />\n      <Form.Check inline label=\"2\" type={type} id={\\`inline-\\${type}-2\\`} />\n      <Form.Check\n        inline\n        disabled\n        label=\"3 (disabled)\"\n        type={type}\n        id={\\`inline-\\${type}-3\\`}\n      />\n    </div>\n  ))}\n</Form>\n`;\nconst jsCode7 = `\n<>\n  <Form.Check aria-label=\"option 1\" />\n  <Form.Check type=\"radio\" aria-label=\"radio 1\" />\n</>\n`;\nconst jsCode8 = `\n<Form>\n  {['checkbox', 'radio'].map(type => (\n    <div key={type} className=\"mb-3\">\n      <Form.Check type={type} id={\\`check-api-\\${type}\\`}>\n        <Form.Check.Input type={type} isValid />\n        <Form.Check.Label>{\\`Custom api \\${type}\\`}</Form.Check.Label>\n        <Form.Control.Feedback type=\"valid\">You did it!</Form.Control.Feedback>\n      </Form.Check>\n    </div>\n  ))}\n</Form>\n`;\nconst jsCode9 = `\n<Form>\n  <Form.Group controlId=\"formGroupEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n  </Form.Group>\n  <Form.Group controlId=\"formGroupPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n</Form>\n`;\nconst jsCode10 = `\n<Form>\n  <Row>\n    <Col>\n      <Form.Control placeholder=\"First name\" />\n    </Col>\n    <Col>\n      <Form.Control placeholder=\"Last name\" />\n    </Col>\n  </Row>\n</Form>\n`;\nconst jsCode11 = `\n<Form>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridEmail\">\n      <Form.Label>Email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridPassword\">\n      <Form.Label>Password</Form.Label>\n      <Form.Control type=\"password\" placeholder=\"Password\" />\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Group controlId=\"formGridAddress1\">\n    <Form.Label>Address</Form.Label>\n    <Form.Control placeholder=\"1234 Main St\" />\n  </Form.Group>\n\n  <Form.Group controlId=\"formGridAddress2\">\n    <Form.Label>Address 2</Form.Label>\n    <Form.Control placeholder=\"Apartment, studio, or floor\" />\n  </Form.Group>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridCity\">\n      <Form.Label>City</Form.Label>\n      <Form.Control />\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridState\">\n      <Form.Label>State</Form.Label>\n      <Form.Control as=\"select\">\n        <option>Choose...</option>\n        <option>...</option>\n      </Form.Control>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridZip\">\n      <Form.Label>Zip</Form.Label>\n      <Form.Control />\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Group id=\"formGridCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n`;\nconst jsCode12 = `\n<Form>\n  <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n    <Form.Label column sm={2}>\n      Email\n    </Form.Label>\n    <Col sm={10}>\n      <Form.Control type=\"email\" placeholder=\"Email\" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n    <Form.Label column sm={2}>\n      Password\n    </Form.Label>\n    <Col sm={10}>\n      <Form.Control type=\"password\" placeholder=\"Password\" />\n    </Col>\n  </Form.Group>\n  <fieldset>\n    <Form.Group as={Row}>\n      <Form.Label as=\"legend\" column sm={2}>\n        Radios\n      </Form.Label>\n      <Col sm={10}>\n        <Form.Check\n          type=\"radio\"\n          label=\"first radio\"\n          name=\"formHorizontalRadios\"\n          id=\"formHorizontalRadios1\"\n        />\n        <Form.Check\n          type=\"radio\"\n          label=\"second radio\"\n          name=\"formHorizontalRadios\"\n          id=\"formHorizontalRadios2\"\n        />\n        <Form.Check\n          type=\"radio\"\n          label=\"third radio\"\n          name=\"formHorizontalRadios\"\n          id=\"formHorizontalRadios3\"\n        />\n      </Col>\n    </Form.Group>\n  </fieldset>\n  <Form.Group as={Row} controlId=\"formHorizontalCheck\">\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Form.Check label=\"Remember me\" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row}>\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Button type=\"submit\">Sign in</Button>\n    </Col>\n  </Form.Group>\n</Form>\n`;\nconst jsCode13 = `\nclass FormExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { validated: false };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.setState({ validated: true });\n  }\n\n  render() {\n    const { validated } = this.state;\n    return (\n      <Form\n        noValidate\n        validated={validated}\n        onSubmit={e => this.handleSubmit(e)}\n      >\n        <Form.Row>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n            <Form.Label>First name</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"First name\"\n              defaultValue=\"Mark\"\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n            <Form.Label>Last name</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Last name\"\n              defaultValue=\"Otto\"\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n            <Form.Label>Username</Form.Label>\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                aria-describedby=\"inputGroupPrepend\"\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please choose a username.\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n            <Form.Label>City</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"City\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid city.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\n            <Form.Label>State</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"State\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid state.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\n            <Form.Label>Zip</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Zip\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid zip.\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n        <Form.Group>\n          <Form.Check\n            required\n            label=\"Agree to terms and conditions\"\n            feedback=\"You must agree before submitting.\"\n          />\n        </Form.Group>\n        <Button type=\"submit\">Submit form</Button>\n      </Form>\n    );\n  }\n}\n\nrender(<FormExample />);\n`;\nconst jsCode15 = `\n<Form>\n  {['checkbox', 'radio'].map(type => (\n    <div key={\\`custom-\\${type}\\`} className=\"mb-3\">\n      <Form.Check \n        custom\n        type={type}\n        id={\\`custom-\\${type}\\`}\n        label={\\`Check this custom \\${type}\\`}\n      />\n\n      <Form.Check\n        custom\n        disabled\n        type={type}\n        label={\\`disabled \\${type}\\`}\n        id={\\`disabled-custom-\\${type}\\`}\n      />\n    </div>\n  ))}\n</Form>\n`;\nconst jsCode16 = `\n<Form>\n  {['checkbox', 'radio'].map(type => (\n    <div key={\\`custom-inline-\\${type}\\`} className=\"mb-3\">\n      <Form.Check\n        custom\n        inline\n        label=\"1\"\n        type={type}\n        id={\\`custom-inline-\\${type}-1\\`}\n      />\n      <Form.Check\n        custom\n        inline\n        label=\"2\"\n        type={type}\n        id={\\`custom-inline-\\${type}-2\\`}\n      />\n      <Form.Check\n        custom\n        inline\n        disabled\n        label=\"3 (disabled)\"\n        type={type}\n        id={\\`custom-inline-\\${type}-3\\`}\n      />\n    </div>\n  ))}\n</Form>\n`;","map":{"version":3,"sources":["C:/Users/nisha/OneDrive/Desktop/technogrip/src/app/modules/ReactBootstrapExamples/FormsExamplesPage.js"],"names":["React","Button","Form","InputGroup","Col","Row","Notice","KTCodeExample","FormExample","Component","constructor","args","state","validated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","setState","render","e","FormsExamplesPage","jsCode1","jsCode3","jsCode5","map","type","jsCode7","jsCode9","jsCode11","jsCode13","jsCode2","jsCode4","jsCode6","jsCode8","jsCode10","jsCode12","span","offset","jsCode16","jsCode15"],"mappings":"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AAA;AAAA;AAAA,kBAjQF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlMF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,oBADF;AAqfD;;AAvf4D;AA0f/D,MAAMJ,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;AAsBA,MAAMS,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/BA;AAgCA,MAAMR,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,MAAMS,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;AAqBA,MAAMR,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAoBA,MAAMS,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAiBA,MAAMN,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA,CALA;AAMA,MAAMO,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAaA,MAAMN,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAYA,MAAMO,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAYA,MAAMN,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApDA;AAqDA,MAAMO,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1DA;AA2DA,MAAMN,QAAQ,GAAI;AAClrGA;AAuGA,MAAMU,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;AAsBA,MAAMD,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA","sourcesContent":["import React from \"react\";\r\nimport {Button, Form, InputGroup, Col, Row} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass FormExample extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { validated: false };\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    this.setState({ validated: true });\r\n  }\r\n\r\n  render() {\r\n    const { validated } = this.state;\r\n    return (\r\n      <Form\r\n        noValidate\r\n        validated={validated}\r\n        onSubmit={e => this.handleSubmit(e)}\r\n      >\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n            <Form.Label>First name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"First name\"\r\n              defaultValue=\"Mark\"\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n            <Form.Label>Last name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Last name\"\r\n              defaultValue=\"Otto\"\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please choose a username.\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"City\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid city.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"State\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid state.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n            <Form.Label>Zip</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Zip\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Group>\r\n          <Form.Check\r\n            required\r\n            label=\"Agree to terms and conditions\"\r\n            feedback=\"You must agree before submitting.\"\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit form</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class FormsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://react-bootstrap.github.io/components/forms/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              <span>\r\n                The <code>&lt;FormControl&gt;</code> component renders a form\r\n                control with Bootstrap styling. The{\" \"}\r\n                <code>&lt;FormGroup&gt;</code> component wraps a form control\r\n                with proper spacing, along with support for a label, help text,\r\n                and validation state. To ensure accessibility, set controlId on{\" \"}\r\n                <code>&lt;FormGroup&gt;</code>, and use{\" \"}\r\n                <code>&lt;FormLabel&gt;</code> for the label.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicChecbox\">\r\n                  <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Sizing\">\r\n              <span>\r\n                Use <code>size</code> on <code>&lt;FormControl&gt;</code> to\r\n                change the size of inputs.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Large text\" />\r\n                <br />\r\n                <Form.Control type=\"text\" placeholder=\"Normal text\" />\r\n                <br />\r\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Small text\" />\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Default (stacked)\">\r\n              <span>\r\n                By default, any number of checkboxes and radios that are\r\n                immediate sibling will be vertically stacked and appropriately\r\n                spaced with FormCheck.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                {[\"checkbox\", \"radio\"].map(type => (\r\n                  <div key={`default-${type}`} className=\"mb-3\">\r\n                    <Form.Check\r\n                      type={type}\r\n                      id={`default-${type}`}\r\n                      label={`default ${type}`}\r\n                    />\r\n\r\n                    <Form.Check\r\n                      disabled\r\n                      type={type}\r\n                      label={`disabled ${type}`}\r\n                      id={`disabled-default-${type}`}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Without labels\">\r\n              <span>\r\n                When you render a FormCheck without a label (no{\" \"}\r\n                <code>children</code>) some additional styling is applied to\r\n                keep the inputs from collapsing.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Form.Check aria-label=\"option 1\" />\r\n                <Form.Check type=\"radio\" aria-label=\"radio 1\" />\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Form group\">\r\n              <span className=\"mb-3\">\r\n                The <code>FormGroup</code> component is the easiest way to add\r\n                some structure to forms. It provides a flexible container for\r\n                grouping of labels, controls, optional help text, and form\r\n                validation messaging.\r\n              </span>\r\n              <div>\r\n                You also add the <code>controlId</code> prop to accessibly wire\r\n                the nested label and input together via the <code>id</code>.\r\n              </div>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Group controlId=\"formGroupEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formGroupPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode11}\r\n              beforeCodeTitle=\"Form row\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You may also swap <code>&lt;Row&gt;</code> for{\" \"}\r\n                <code>&lt;Form.Row&gt;</code>, a variation of the standard grid\r\n                row that overrides the default column gutters for tighter and\r\n                more compact layouts.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group controlId=\"formGridAddress1\">\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control placeholder=\"1234 Main St\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGridAddress2\">\r\n                  <Form.Label>Address 2</Form.Label>\r\n                  <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n                </Form.Group>\r\n\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>State</Form.Label>\r\n                    <Form.Control as=\"select\">\r\n                      <option>Choose...</option>\r\n                      <option>...</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"formGridZip\">\r\n                    <Form.Label>Zip</Form.Label>\r\n                    <Form.Control />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group id=\"formGridCheckbox\">\r\n                  <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode13}\r\n              beforeCodeTitle=\"Native HTML5 form validation\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                For native HTML form validation–available in all our supported\r\n                browsers, the <code>:valid</code> and <code>:invalid</code>{\" \"}\r\n                pseudo selectors are used to apply validation styles as well as\r\n                display feedback messages.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <FormExample />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Form controls\">\r\n              <span>\r\n                For textual form controls—like <code>input</code>s,{\" \"}\r\n                <code>select</code>s, and <code>textarea</code>s—use the\r\n                FormControl component. FormControl adds some additional styles\r\n                for general appearance, focus state, sizing, and more.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" placeholder=\"name@example.com\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                  <Form.Label>Example select</Form.Label>\r\n                  <Form.Control as=\"select\">\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                  <Form.Label>Example multiple select</Form.Label>\r\n                  <Form.Control as=\"select\" multiple>\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label>Example textarea</Form.Label>\r\n                  <Form.Control as=\"textarea\" rows=\"3\" />\r\n                </Form.Group>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Plaintext\">\r\n              <span>\r\n                If you want to have elements in your form styled as plain text,\r\n                use the <code>plaintext</code> prop on FormControls to remove\r\n                the default form field styling and preserve the correct margin\r\n                and padding.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Email\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control\r\n                      plaintext\r\n                      readOnly\r\n                      defaultValue=\"email@example.com\"\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Password\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Inline\">\r\n              <span>\r\n                Group checkboxes or radios on the same horizontal row by adding\r\n                the <code>inline</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                {[\"checkbox\", \"radio\"].map(type => (\r\n                  <div key={`inline-${type}`} className=\"mb-3\">\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"1\"\r\n                      type={type}\r\n                      id={`inline-${type}-1`}\r\n                    />\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"2\"\r\n                      type={type}\r\n                      id={`inline-${type}-2`}\r\n                    />\r\n                    <Form.Check\r\n                      inline\r\n                      disabled\r\n                      label=\"3 (disabled)\"\r\n                      type={type}\r\n                      id={`inline-${type}-3`}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode8}\r\n              beforeCodeTitle=\"Customizing FormCheck rendering\"\r\n            >\r\n              <span className=\"mb-3\">\r\n                When you need tighter control, or want to customize how the{\" \"}\r\n                <code>FormCheck</code> component renders, it may better to use\r\n                it's constituent parts directly.\r\n              </span>\r\n              <div>\r\n                By provided <code>children</code> to the <code>FormCheck</code>{\" \"}\r\n                you can forgo the default rendering and handle it yourself.\r\n              </div>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                {[\"checkbox\", \"radio\"].map(type => (\r\n                  <div key={type} className=\"mb-3\">\r\n                    <Form.Check type={type} id={`check-api-${type}`}>\r\n                      <Form.Check.Input type={type} isValid />\r\n                      <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\r\n                      <Form.Control.Feedback type=\"valid\">\r\n                        You did it!\r\n                      </Form.Control.Feedback>\r\n                    </Form.Check>\r\n                  </div>\r\n                ))}\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode10} beforeCodeTitle=\"Form grid\">\r\n              <span>\r\n                More complex forms can be built using the grid components. Use\r\n                these for form layouts that require multiple columns, varied\r\n                widths, and additional alignment options.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Control placeholder=\"First name\" />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Control placeholder=\"Last name\" />\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode12}\r\n              beforeCodeTitle=\"Horizontal forms\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You may also swap <code>&lt;Row&gt;</code> for{\" \"}\r\n                <code>&lt;Form.Row&gt;</code>, a variation of the standard grid\r\n                row that overrides the default column gutters for tighter and\r\n                more compact layouts.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                  <Form.Label column sm={2}>\r\n                    Email\r\n                  </Form.Label>\r\n                  <Col sm={10}>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" />\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                  <Form.Label column sm={2}>\r\n                    Password\r\n                  </Form.Label>\r\n                  <Col sm={10}>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                  </Col>\r\n                </Form.Group>\r\n                <fieldset>\r\n                  <Form.Group as={Row}>\r\n                    <Form.Label as=\"legend\" column sm={2}>\r\n                      Radios\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"first radio\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios1\"\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"second radio\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios2\"\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"third radio\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios3\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Group>\r\n                </fieldset>\r\n                <Form.Group as={Row} controlId=\"formHorizontalCheck\">\r\n                  <Col sm={{ span: 10, offset: 2 }}>\r\n                    <Form.Check label=\"Remember me\" />\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                  <Col sm={{ span: 10, offset: 2 }}>\r\n                    <Button type=\"submit\">Sign in</Button>\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode16} beforeCodeTitle=\"Inline\">\r\n              <Form>\r\n                {[\"checkbox\", \"radio\"].map(type => (\r\n                  <div key={`custom-inline-${type}`} className=\"mb-3\">\r\n                    <Form.Check\r\n                      custom\r\n                      inline\r\n                      label=\"1\"\r\n                      type={type}\r\n                      id={`custom-inline-${type}-1`}\r\n                    />\r\n                    <Form.Check\r\n                      custom\r\n                      inline\r\n                      label=\"2\"\r\n                      type={type}\r\n                      id={`custom-inline-${type}-2`}\r\n                    />\r\n                    <Form.Check\r\n                      custom\r\n                      inline\r\n                      disabled\r\n                      label=\"3 (disabled)\"\r\n                      type={type}\r\n                      id={`custom-inline-${type}-3`}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode15}\r\n              beforeCodeTitle=\"Checkboxes and radios\"\r\n            >\r\n              <span>\r\n                Custom checkbox and radio styles are achieved with a resourceful\r\n                use of the <code>:checked</code> selector and{\" \"}\r\n                <code>:after</code> psuedo elements, but are Structurally\r\n                similar to the default <code>FormCheck</code>.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                {[\"checkbox\", \"radio\"].map(type => (\r\n                  <div key={`custom-${type}`} className=\"mb-3\">\r\n                    <Form.Check\r\n                      custom\r\n                      type={type}\r\n                      id={`custom-${type}`}\r\n                      label={`Check this custom ${type}`}\r\n                    />\r\n\r\n                    <Form.Check\r\n                      custom\r\n                      disabled\r\n                      type={type}\r\n                      label={`disabled ${type}`}\r\n                      id={`disabled-custom-${type}`}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </Form>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Form>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n    <Form.Text className=\"text-muted\">\r\n      We'll never share your email with anyone else.\r\n    </Form.Text>\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"formBasicChecbox\">\r\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n  </Form.Group>\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Submit\r\n  </Button>\r\n</Form>\r\n`;\r\nconst jsCode2 = `\r\n<Form>\r\n  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n    <Form.Label>Example select</Form.Label>\r\n    <Form.Control as=\"select\">\r\n      <option>1</option>\r\n      <option>2</option>\r\n      <option>3</option>\r\n      <option>4</option>\r\n      <option>5</option>\r\n    </Form.Control>\r\n  </Form.Group>\r\n  <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n    <Form.Label>Example multiple select</Form.Label>\r\n    <Form.Control as=\"select\" multiple>\r\n      <option>1</option>\r\n      <option>2</option>\r\n      <option>3</option>\r\n      <option>4</option>\r\n      <option>5</option>\r\n    </Form.Control>\r\n  </Form.Group>\r\n  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n    <Form.Label>Example textarea</Form.Label>\r\n    <Form.Control as=\"textarea\" rows=\"3\" />\r\n  </Form.Group>\r\n</Form>\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <Form.Control size=\"lg\" type=\"text\" placeholder=\"Large text\" />\r\n  <br />\r\n  <Form.Control type=\"text\" placeholder=\"Normal text\" />\r\n  <br />\r\n  <Form.Control size=\"sm\" type=\"text\" placeholder=\"Small text\" />\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<Form>\r\n  <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n    <Form.Label column sm=\"2\">\r\n      Email\r\n    </Form.Label>\r\n    <Col sm=\"10\">\r\n      <Form.Control plaintext readOnly defaultValue=\"email@example.com\" />\r\n    </Col>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n    <Form.Label column sm=\"2\">\r\n      Password\r\n    </Form.Label>\r\n    <Col sm=\"10\">\r\n      <Form.Control type=\"password\" placeholder=\"Password\" />\r\n    </Col>\r\n  </Form.Group>\r\n</Form>\r\n`;\r\nconst jsCode5 = `\r\n<Form>\r\n  {['checkbox', 'radio'].map(type => (\r\n    <div key={\\`default-\\${type}\\`} className=\"mb-3\">\r\n      <Form.Check \r\n        type={type}\r\n        id={\\`default-\\${type}\\`}\r\n        label={\\`default \\${type}\\`}\r\n      />\r\n\r\n      <Form.Check\r\n        disabled\r\n        type={type}\r\n        label={\\`disabled \\${type}\\`}\r\n        id={\\`disabled-default-\\${type}\\`}\r\n      />\r\n    </div>\r\n  ))}\r\n</Form>\r\n`;\r\nconst jsCode6 = `\r\n<Form>\r\n  {['checkbox', 'radio'].map(type => (\r\n    <div key={\\`inline-\\${type}\\`} className=\"mb-3\">\r\n      <Form.Check inline label=\"1\" type={type} id={\\`inline-\\${type}-1\\`} />\r\n      <Form.Check inline label=\"2\" type={type} id={\\`inline-\\${type}-2\\`} />\r\n      <Form.Check\r\n        inline\r\n        disabled\r\n        label=\"3 (disabled)\"\r\n        type={type}\r\n        id={\\`inline-\\${type}-3\\`}\r\n      />\r\n    </div>\r\n  ))}\r\n</Form>\r\n`;\r\nconst jsCode7 = `\r\n<>\r\n  <Form.Check aria-label=\"option 1\" />\r\n  <Form.Check type=\"radio\" aria-label=\"radio 1\" />\r\n</>\r\n`;\r\nconst jsCode8 = `\r\n<Form>\r\n  {['checkbox', 'radio'].map(type => (\r\n    <div key={type} className=\"mb-3\">\r\n      <Form.Check type={type} id={\\`check-api-\\${type}\\`}>\r\n        <Form.Check.Input type={type} isValid />\r\n        <Form.Check.Label>{\\`Custom api \\${type}\\`}</Form.Check.Label>\r\n        <Form.Control.Feedback type=\"valid\">You did it!</Form.Control.Feedback>\r\n      </Form.Check>\r\n    </div>\r\n  ))}\r\n</Form>\r\n`;\r\nconst jsCode9 = `\r\n<Form>\r\n  <Form.Group controlId=\"formGroupEmail\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"formGroupPassword\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n  </Form.Group>\r\n</Form>\r\n`;\r\nconst jsCode10 = `\r\n<Form>\r\n  <Row>\r\n    <Col>\r\n      <Form.Control placeholder=\"First name\" />\r\n    </Col>\r\n    <Col>\r\n      <Form.Control placeholder=\"Last name\" />\r\n    </Col>\r\n  </Row>\r\n</Form>\r\n`;\r\nconst jsCode11 = `\r\n<Form>\r\n  <Form.Row>\r\n    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n      <Form.Label>Email</Form.Label>\r\n      <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n      <Form.Label>Password</Form.Label>\r\n      <Form.Control type=\"password\" placeholder=\"Password\" />\r\n    </Form.Group>\r\n  </Form.Row>\r\n\r\n  <Form.Group controlId=\"formGridAddress1\">\r\n    <Form.Label>Address</Form.Label>\r\n    <Form.Control placeholder=\"1234 Main St\" />\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formGridAddress2\">\r\n    <Form.Label>Address 2</Form.Label>\r\n    <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n  </Form.Group>\r\n\r\n  <Form.Row>\r\n    <Form.Group as={Col} controlId=\"formGridCity\">\r\n      <Form.Label>City</Form.Label>\r\n      <Form.Control />\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridState\">\r\n      <Form.Label>State</Form.Label>\r\n      <Form.Control as=\"select\">\r\n        <option>Choose...</option>\r\n        <option>...</option>\r\n      </Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridZip\">\r\n      <Form.Label>Zip</Form.Label>\r\n      <Form.Control />\r\n    </Form.Group>\r\n  </Form.Row>\r\n\r\n  <Form.Group id=\"formGridCheckbox\">\r\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n  </Form.Group>\r\n\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Submit\r\n  </Button>\r\n</Form>\r\n`;\r\nconst jsCode12 = `\r\n<Form>\r\n  <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n    <Form.Label column sm={2}>\r\n      Email\r\n    </Form.Label>\r\n    <Col sm={10}>\r\n      <Form.Control type=\"email\" placeholder=\"Email\" />\r\n    </Col>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n    <Form.Label column sm={2}>\r\n      Password\r\n    </Form.Label>\r\n    <Col sm={10}>\r\n      <Form.Control type=\"password\" placeholder=\"Password\" />\r\n    </Col>\r\n  </Form.Group>\r\n  <fieldset>\r\n    <Form.Group as={Row}>\r\n      <Form.Label as=\"legend\" column sm={2}>\r\n        Radios\r\n      </Form.Label>\r\n      <Col sm={10}>\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"first radio\"\r\n          name=\"formHorizontalRadios\"\r\n          id=\"formHorizontalRadios1\"\r\n        />\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"second radio\"\r\n          name=\"formHorizontalRadios\"\r\n          id=\"formHorizontalRadios2\"\r\n        />\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"third radio\"\r\n          name=\"formHorizontalRadios\"\r\n          id=\"formHorizontalRadios3\"\r\n        />\r\n      </Col>\r\n    </Form.Group>\r\n  </fieldset>\r\n  <Form.Group as={Row} controlId=\"formHorizontalCheck\">\r\n    <Col sm={{ span: 10, offset: 2 }}>\r\n      <Form.Check label=\"Remember me\" />\r\n    </Col>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row}>\r\n    <Col sm={{ span: 10, offset: 2 }}>\r\n      <Button type=\"submit\">Sign in</Button>\r\n    </Col>\r\n  </Form.Group>\r\n</Form>\r\n`;\r\nconst jsCode13 = `\r\nclass FormExample extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { validated: false };\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    this.setState({ validated: true });\r\n  }\r\n\r\n  render() {\r\n    const { validated } = this.state;\r\n    return (\r\n      <Form\r\n        noValidate\r\n        validated={validated}\r\n        onSubmit={e => this.handleSubmit(e)}\r\n      >\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n            <Form.Label>First name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"First name\"\r\n              defaultValue=\"Mark\"\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n            <Form.Label>Last name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Last name\"\r\n              defaultValue=\"Otto\"\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please choose a username.\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"City\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid city.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"State\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid state.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n            <Form.Label>Zip</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Zip\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Group>\r\n          <Form.Check\r\n            required\r\n            label=\"Agree to terms and conditions\"\r\n            feedback=\"You must agree before submitting.\"\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit form</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<FormExample />);\r\n`;\r\n\r\nconst jsCode15 = `\r\n<Form>\r\n  {['checkbox', 'radio'].map(type => (\r\n    <div key={\\`custom-\\${type}\\`} className=\"mb-3\">\r\n      <Form.Check \r\n        custom\r\n        type={type}\r\n        id={\\`custom-\\${type}\\`}\r\n        label={\\`Check this custom \\${type}\\`}\r\n      />\r\n\r\n      <Form.Check\r\n        custom\r\n        disabled\r\n        type={type}\r\n        label={\\`disabled \\${type}\\`}\r\n        id={\\`disabled-custom-\\${type}\\`}\r\n      />\r\n    </div>\r\n  ))}\r\n</Form>\r\n`;\r\nconst jsCode16 = `\r\n<Form>\r\n  {['checkbox', 'radio'].map(type => (\r\n    <div key={\\`custom-inline-\\${type}\\`} className=\"mb-3\">\r\n      <Form.Check\r\n        custom\r\n        inline\r\n        label=\"1\"\r\n        type={type}\r\n        id={\\`custom-inline-\\${type}-1\\`}\r\n      />\r\n      <Form.Check\r\n        custom\r\n        inline\r\n        label=\"2\"\r\n        type={type}\r\n        id={\\`custom-inline-\\${type}-2\\`}\r\n      />\r\n      <Form.Check\r\n        custom\r\n        inline\r\n        disabled\r\n        label=\"3 (disabled)\"\r\n        type={type}\r\n        id={\\`custom-inline-\\${type}-3\\`}\r\n      />\r\n    </div>\r\n  ))}\r\n</Form>\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}